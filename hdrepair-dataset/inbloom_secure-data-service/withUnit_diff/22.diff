diff --git a/sli/ingestion/ingestion-core/src/main/java/org/slc/sli/ingestion/processors/TenantProcessor.java b/sli/ingestion/ingestion-core/src/main/java/org/slc/sli/ingestion/processors/TenantProcessor.java
index 36e3453..773321e 100644
--- a/sli/ingestion/ingestion-core/src/main/java/org/slc/sli/ingestion/processors/TenantProcessor.java
+++ b/sli/ingestion/ingestion-core/src/main/java/org/slc/sli/ingestion/processors/TenantProcessor.java
@@ -105 +105 @@
-     * Attempt to create and new landing zone routes based on the tenant DB collection.
+     * Attempt to create new landing zones based on the tenant DB collection.
diff --git a/sli/ingestion/ingestion-core/src/test/java/org/slc/sli/ingestion/processors/TenantProcessorTest.java b/sli/ingestion/ingestion-core/src/test/java/org/slc/sli/ingestion/processors/TenantProcessorTest.java
index 2a08df8..4f6a4f4 100644
--- a/sli/ingestion/ingestion-core/src/test/java/org/slc/sli/ingestion/processors/TenantProcessorTest.java
+++ b/sli/ingestion/ingestion-core/src/test/java/org/slc/sli/ingestion/processors/TenantProcessorTest.java
@@ -32,2 +31,0 @@
-import org.apache.camel.Route;
-import org.apache.camel.builder.RouteBuilder;
@@ -51 +48,0 @@
-import org.slc.sli.ingestion.routes.LandingZoneRouteBuilder;
@@ -75,6 +71,0 @@
-    @Mock
-    private Route mockedZipRoute;
-
-    @Mock
-    private Route mockedCtrlRoute;
-
@@ -88 +79 @@
-     * Test to check that a single route that is added to the
+     * Test to check that a single lz that is added to the
@@ -98,3 +88,0 @@
-
-        List<Route> routes = new ArrayList<Route>();
-
@@ -102 +89,0 @@
-        when(mockedCamelContext.getRoutes()).thenReturn(routes);
@@ -105 +91,0 @@
-
@@ -107 +92,0 @@
-
@@ -109,59 +93,0 @@
-
-        Mockito.verify(mockedCamelContext, Mockito.times(0)).stopRoute(Mockito.any(String.class));
-        Mockito.verify(mockedCamelContext, Mockito.times(1)).addRoutes(Mockito.any(RouteBuilder.class));
-
-        // check there is no error on the received message
-        assertEquals("Header on exchange should indicate success", TenantProcessor.TENANT_POLL_SUCCESS, exchange
-                .getIn().getHeader(TenantProcessor.TENANT_POLL_HEADER));
-    }
-
-    /**
-     * Test to check that a single route that does not exist
-     * in the tenant DB collection is removed by processor
-     *
-     * @throws Exception
-     */
-    @Test
-    public void shouldRemoveOldLz() throws Exception {
-
-        List<String> testLzPaths = new ArrayList<String>();
-        final String oldCtrlRouteId = LandingZoneRouteBuilder.CTRL_POLLER_PREFIX + "oldRouteId";
-        final String oldZipRouteId = LandingZoneRouteBuilder.ZIP_POLLER_PREFIX + "oldRouteId";
-
-        // create a test route with a RouteBuilder
-        // is there a simpler way of getting a test route??
-        /*
-         * CamelContext testCamelContext = new DefaultCamelContext();
-         * RouteBuilder routeBuilder = new RouteBuilder() {
-         *
-         * @Override
-         * public void configure() throws Exception {
-         * from("seda:testIn")
-         * .routeId(oldRouteId)
-         * .to("seda:testOut");
-         * }
-         * };
-         * testCamelContext.start();
-         * testCamelContext.addRoutes(routeBuilder);
-         *
-         * Route testRoute = testCamelContext.getRoute(oldRouteId);
-         * List<Route> testRouteList = new ArrayList<Route>();
-         * testRouteList.add(testRoute);
-         */
-
-        List<Route> testRouteList = new ArrayList<Route>();
-        testRouteList.add(mockedCtrlRoute);
-        testRouteList.add(mockedZipRoute);
-        when(mockedCtrlRoute.getId()).thenReturn(oldCtrlRouteId);
-        when(mockedZipRoute.getId()).thenReturn(oldZipRouteId);
-        when(mockedTenantDA.getLzPaths(Mockito.any(String.class))).thenReturn(testLzPaths);
-        when(mockedCamelContext.getRoutes()).thenReturn(testRouteList);
-
-        // get a test tenantRecord
-        Exchange exchange = new DefaultExchange(mockedCamelContext);
-
-        tenantProcessor.process(exchange);
-
-        Mockito.verify(mockedCamelContext, Mockito.times(1)).stopRoute(Mockito.eq(oldCtrlRouteId));
-        Mockito.verify(mockedCamelContext, Mockito.times(1)).stopRoute(Mockito.eq(oldZipRouteId));
-        Mockito.verify(mockedCamelContext, Mockito.times(0)).addRoutes(Mockito.any(RouteBuilder.class));

