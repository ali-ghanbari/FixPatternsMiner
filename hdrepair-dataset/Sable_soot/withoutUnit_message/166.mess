When comparing the bytecode ranges of inlined subroutines with
exception table entries, get the originalIndex of the first
instruction in the subroutine from the successor of the astore
instruction that begins the original subroutine, rather than from
the first instruction in the cloned code.

This change fixes a bug I introduced in revision 1126: inlining
an empty subroutine was triggering a NullPointerException
because in an empty subroutine the first instruction is not
cloned from the original code, but is instead a brand new goto
replacing the subroutine's ret; the goto has a bogus default
value for originalIndex.


