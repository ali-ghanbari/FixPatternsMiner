diff --git a/backend-api/pom.xml b/backend-api/pom.xml
index e7c21eb..7aa7e30 100644
--- a/backend-api/pom.xml
+++ b/backend-api/pom.xml
@@ -172 +172 @@
-            <version>4.5.0.Final</version>
+            <version>5.0.0.Final</version>
@@ -183,0 +184,5 @@
+        <dependency>
+            <groupId>org.apache.lucene</groupId>
+            <artifactId>lucene-analyzers-kuromoji</artifactId>
+            <version>4.10.2</version>
+        </dependency>
diff --git a/backend-api/src/main/java/am/ik/categolj2/domain/repository/entry/EntryRepositoryImpl.java b/backend-api/src/main/java/am/ik/categolj2/domain/repository/entry/EntryRepositoryImpl.java
index 13aef56..47eea11 100644
--- a/backend-api/src/main/java/am/ik/categolj2/domain/repository/entry/EntryRepositoryImpl.java
+++ b/backend-api/src/main/java/am/ik/categolj2/domain/repository/entry/EntryRepositoryImpl.java
@@ -64 +64 @@
-        org.apache.lucene.search.Sort sort = new Sort(new SortField("lastModifiedDate", SortField.STRING_VAL, true));
+        org.apache.lucene.search.Sort sort = new Sort(new SortField("lastModifiedDate", SortField.Type.STRING_VAL, true));
diff --git a/backend-api/src/main/resources/application.yml b/backend-api/src/main/resources/application.yml
index 752a0d0..5b45245 100644
--- a/backend-api/src/main/resources/application.yml
+++ b/backend-api/src/main/resources/application.yml
@@ -38,2 +38,2 @@
-          analyzer: org.apache.lucene.analysis.cjk.CJKAnalyzer
-          lucene_version: LUCENE_36
+          analyzer: org.apache.lucene.analysis.ja.JapaneseAnalyzer
+          lucene_version: LUCENE_4_10_2
diff --git a/backend-api/src/test/java/am/ik/categolj2/api/entry/EntryRestControllerIntegrationTest.java b/backend-api/src/test/java/am/ik/categolj2/api/entry/EntryRestControllerIntegrationTest.java
index aedea51..ca81e45 100644
--- a/backend-api/src/test/java/am/ik/categolj2/api/entry/EntryRestControllerIntegrationTest.java
+++ b/backend-api/src/test/java/am/ik/categolj2/api/entry/EntryRestControllerIntegrationTest.java
@@ -240,0 +241,22 @@
+        String user = "admin";
+        String accessToken = getAccessToken(user, "demo");
+        Integer newEntryId = null;
+        {
+            Entry target = new Entry(null, "日本経済新聞", "日本経済新聞を読んでいません", "md", Categories.fromCategory("aa::bb::cc").getCategories(), true, Arrays.asList());
+            target.setCreatedBy(user);
+            target.setLastModifiedBy(user);
+            EntryResource input = new EntryResource(null,
+                    null,
+                    target.getTitle(),
+                    target.getContents(),
+                    target.getFormat(),
+                    Categories.toString(target.getCategory()),
+                    null,
+                    true,
+                    true,
+                    false,
+                    null,
+                    null,
+                    null,
+                    target.getCreatedBy(),
+                    target.getLastModifiedBy());
@@ -241,0 +264,58 @@
+            Response response = given()
+                    .header("X-Admin", "true")
+                    .header("Authorization", "Bearer " + accessToken)
+                    .contentType(ContentType.JSON + ";charset=UTF-8")
+                    .body(input)
+                    .log().all()
+                    .when()
+                    .post("/api/v1/entries")
+                    .then()
+                    .log().all()
+                    .statusCode(HttpStatus.CREATED.value())
+                    .and().extract().response();
+            newEntryId = response.path("entryId");
+        }
+        given()
+                .param("keyword", "日本")
+                .log().all()
+                .when()
+                .get("/api/v1/entries")
+                .then()
+                .log().all()
+                .body("numberOfElements", is(1))
+                .body("content[0].entryId", is(newEntryId));
+        given()
+                .param("keyword", "日本経済新聞")
+                .log().all()
+                .when()
+                .get("/api/v1/entries")
+                .then()
+                .log().all()
+                .body("numberOfElements", is(1))
+                .body("content[0].entryId", is(newEntryId));
+        given()
+                .param("keyword", "経済")
+                .log().all()
+                .when()
+                .get("/api/v1/entries")
+                .then()
+                .log().all()
+                .body("numberOfElements", is(1))
+                .body("content[0].entryId", is(newEntryId));
+        given()
+                .param("keyword", "新聞")
+                .log().all()
+                .when()
+                .get("/api/v1/entries")
+                .then()
+                .log().all()
+                .body("numberOfElements", is(1))
+                .body("content[0].entryId", is(newEntryId));
+        given()
+                .param("keyword", "本経")
+                .log().all()
+                .when()
+                .get("/api/v1/entries")
+                .then()
+                .log().all()
+                .body("numberOfElements", is(0));

