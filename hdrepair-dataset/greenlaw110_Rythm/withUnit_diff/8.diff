diff --git a/pom.xml b/pom.xml
index 852b906..3ed49db 100755
--- a/pom.xml
+++ b/pom.xml
@@ -16,0 +17,5 @@
+<!--
+RELEASE HISTORY
+1.1.0-SNAPSHOT: base version where the release history start
+1.1.1-SNAPSHOT: Fix GH issue 244: Declared args in __global.rythm position might not be correct
+-->
@@ -24 +29 @@
-    <version>1.1.0-SNAPSHOT</version>
+    <version>1.1.1-SNAPSHOT</version>
diff --git a/src/main/java/org/rythmengine/internal/CodeBuilder.java b/src/main/java/org/rythmengine/internal/CodeBuilder.java
index 7aec1ab..e876220 100755
--- a/src/main/java/org/rythmengine/internal/CodeBuilder.java
+++ b/src/main/java/org/rythmengine/internal/CodeBuilder.java
@@ -916 +916 @@
-        Collections.sort(renderArgList);
+        // comment to fix gh244: Collections.sort(renderArgList);
diff --git a/src/test/java/org/rythmengine/issue/GHIssueTest.java b/src/test/java/org/rythmengine/issue/GHIssueTest.java
index 4d960e7..a72ea2d 100755
--- a/src/test/java/org/rythmengine/issue/GHIssueTest.java
+++ b/src/test/java/org/rythmengine/issue/GHIssueTest.java
@@ -21,0 +22,3 @@
+import static org.rythmengine.conf.RythmConfigurationKey.*;
+import static org.rythmengine.conf.RythmConfigurationKey.DEFAULT_CODE_TYPE_IMPL;
+
@@ -365,0 +369,26 @@
+
+    private void setUpFor244() {
+        Rythm.shutdown();
+        Properties prop = System.getProperties();
+        prop.put(HOME_TEMPLATE.getKey(), "root/gh244");
+        prop.put(FEATURE_NATURAL_TEMPLATE_ENABLED.getKey(), "false");
+        prop.put(FEATURE_TYPE_INFERENCE_ENABLED.getKey(), "false");
+        prop.put(FEATURE_SMART_ESCAPE_ENABLED.getKey(), "true");
+        prop.put(FEATURE_TRANSFORM_ENABLED.getKey(), "true");
+        prop.put(CODEGEN_COMPACT_ENABLED.getKey(), "false");
+        prop.put(ENGINE_OUTPUT_JAVA_SOURCE_ENABLED.getKey(), "false");
+        //prop.put(RythmConfigurationKey.I18N_LOCALE.getKey(), new Locale("en", "AU"));
+        prop.put(RythmConfigurationKey.I18N_LOCALE.getKey(), Locale.getDefault());
+        prop.put("line.separator", "\n");
+        prop.put(DEFAULT_CODE_TYPE_IMPL.getKey(), ICodeType.DefImpl.RAW);
+        t = null;
+        s = null;
+    }
+
+    @Test
+    public void test244() {
+        setUpFor244();
+        t = "x.txt";
+        s = r(t, "foo", "bar");
+        assertEquals("foo and bar", s);
+    }
diff --git a/src/test/resources/root/gh244/__global.rythm b/src/test/resources/root/gh244/__global.rythm
new file mode 100644
index 0000000..0168a2a
--- /dev/null
+++ b/src/test/resources/root/gh244/__global.rythm
@@ -0,0 +1 @@
+@args int i = 2
\ No newline at end of file
diff --git a/src/test/resources/root/gh244/x.txt b/src/test/resources/root/gh244/x.txt
new file mode 100644
index 0000000..a28afb4
--- /dev/null
+++ b/src/test/resources/root/gh244/x.txt
@@ -0,0 +1,2 @@
+@args String s1, String s2
+@s1 and @s2
\ No newline at end of file

