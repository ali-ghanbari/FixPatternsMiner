diff --git a/src/com/redhat/ceylon/ceylondoc/CeylonDocTool.java b/src/com/redhat/ceylon/ceylondoc/CeylonDocTool.java
index 8827468..d33e8a1 100644
--- a/src/com/redhat/ceylon/ceylondoc/CeylonDocTool.java
+++ b/src/com/redhat/ceylon/ceylondoc/CeylonDocTool.java
@@ -241,0 +242 @@
+        copyResource("resources/search.html", "search.html");
diff --git a/src/com/redhat/ceylon/ceylondoc/resources/ceylond.js b/src/com/redhat/ceylon/ceylondoc/resources/ceylond.js
index f587f4a..5d34706 100644
--- a/src/com/redhat/ceylon/ceylondoc/resources/ceylond.js
+++ b/src/com/redhat/ceylon/ceylondoc/resources/ceylond.js
@@ -18,7 +18,18 @@
- if (SyntaxHighlighter!= null) {
-  var startend = location.hash.substr(1).split(',');
-  var startLine = parseInt(startend[0]);
-  var endLine = parseInt(startend[1]);
-  var lines = [];
-  for (var ii = startLine; ii <= endLine; ii++) {
-   lines.push(ii);
+ try{
+  if (SyntaxHighlighter!= null) {
+   var startend = location.hash.substr(1).split(',');
+   var startLine = parseInt(startend[0]);
+   var endLine = parseInt(startend[1]);
+   var lines = [];
+   for (var ii = startLine; ii <= endLine; ii++) {
+    lines.push(ii);
+   }
+   SyntaxHighlighter.defaults['highlight'] = lines;
+   SyntaxHighlighter.defaults['gutter'] = false;
+   SyntaxHighlighter.defaults['toolbar'] = false; 
+   SyntaxHighlighter.all();
+   setTimeout(function() {
+    jQuery('div.number'+startLine).each(function() {
+ 	this.scrollIntoView(true);
+    });
+   }, 10);
@@ -26,9 +37,5 @@
-  SyntaxHighlighter.defaults['highlight'] = lines;
-  SyntaxHighlighter.defaults['gutter'] = false;
-  SyntaxHighlighter.defaults['toolbar'] = false; 
-  SyntaxHighlighter.all();
-  setTimeout(function() {
-   jQuery('div.number'+startLine).each(function() {
-	this.scrollIntoView(true);
-   });
-  }, 10);
+ }catch(error){
+	 if(error instanceof ReferenceError){
+		 // ignore this one
+	 } else
+		 throw error;
@@ -36 +43,104 @@
-});
\ No newline at end of file
+
+ // Search
+ var matches = [];
+ var previousSearch;
+ function search(q){
+	 if(q)
+		 q = q.toLowerCase();
+	 // abort if nothing new
+	 if(previousSearch == q)
+		 return;
+
+	 // reset
+	 var results = jQuery("#results");
+	 results.empty();
+	 matches = [];
+	 selected = 0;
+	 previousSearch = q;
+
+	 // if we're empty, leave now
+	 if(!q)
+		 return;
+
+	 // collect matches
+	 jQuery.each(index, function(i, elem){
+		if(elem.name.toLowerCase().indexOf(q) != -1)
+			matches.push(elem);
+	 });
+	 // sort them
+	 matches.sort(function(a, b){ 
+		 var resA = matchScore(a.name, q);
+		 var resB = matchScore(b.name, q);
+		 if(resA[0] == resB[0])
+			 return resA[1] - resB[1];
+		 return resA[0] - resB[0];
+	 });
+	 // display them
+	 jQuery.each(matches, function(i, elem){
+		var div = jQuery("<div/>").addClass("match");
+		if(i == 0)
+			div.addClass("selected");
+		var name = elem.name.toLowerCase();
+		var matchStart = name.indexOf(q);
+		var before = name.substring(0, matchStart);
+		var match = name.substring(matchStart, matchStart + q.length);
+		var after = name.substring(matchStart + q.length);
+		var matchSpan = jQuery("<span/>").addClass("highlight").text(match);
+		var link = jQuery("<a/>").attr("href", elem.url).append(before).append(matchSpan).append(after);
+		jQuery("<div/>").addClass("type").text(elem.type).appendTo(div);
+		jQuery("<div/>").addClass("name").append(link).appendTo(div);
+		jQuery("<div/>").addClass("doc").html(elem.doc).appendTo(div);
+		results.append(div);
+	 });
+ }
+
+ function matchScore(name, q){
+	 if(name == q)
+		 return [0,0];
+	 // favour those that start with the query string
+	 var index = name.toLowerCase().indexOf(q);
+	 if(index == 0)
+		 return [1, name.length]; // discriminator is smallest remaining string
+	 // discriminator is how close to the start we are
+	 return [2, index];
+ }
+ 
+ jQuery("#q").keyup(function(){
+	 var q = jQuery(this).val();
+	 search(q);
+ }).bind("search", function(){
+	 // we need this to catch the clearing of the search field using the cross UI
+	 var q = jQuery(this).val();
+	 search(q);
+ }).keydown(function(event){
+	 var evt = event || window.event;
+	 if(evt.keyCode == 40){
+		 nextMatch();
+		 return false;
+	 }else if(evt.keyCode == 38){
+		 previousMatch();
+		 return false;
+	 }else if(evt.keyCode == 13){
+		 document.location = matches[selected].url;
+		 return false;
+	 }
+ }).focus();
+ 
+ function nextMatch(){
+	 if(matches.length < 2)
+		 return;
+	 jQuery(".match.selected").removeClass("selected");
+	 if(selected < matches.length-1)
+		 selected++;
+	 jQuery(".match:eq("+selected+")").addClass("selected");
+ }
+ function previousMatch(){
+	 if(matches.length < 2)
+		 return;
+	 jQuery(".match.selected").removeClass("selected");
+	 if(selected > 0)
+		 selected--;
+	 jQuery(".match:eq("+selected+")").addClass("selected");
+ }
+});
+
diff --git a/src/com/redhat/ceylon/ceylondoc/resources/search.html b/src/com/redhat/ceylon/ceylondoc/resources/search.html
new file mode 100644
index 0000000..3085547
--- /dev/null
+++ b/src/com/redhat/ceylon/ceylondoc/resources/search.html
@@ -0,0 +1,23 @@
+<!DOCTYPE html>
+<html>
+<head>
+	<title>Search</title>
+	<link href='style.css' rel='stylesheet' type='text/css' />
+	<script src='jquery-1.7.min.js' type="text/javascript"></script>
+	<script src='index.js' type="text/javascript"></script>
+	<script src='ceylond.js' type="text/javascript"></script>
+</head>
+<body>
+	<div class='nav'>
+		<div><a href="index.html">Overview</a></div>
+		<div>Package</div>
+		<div>Class</div>
+		<div class='selected'>Search</div>
+		<div>ceylon.language/0.1</div>
+	</div>
+	<div id="search">
+		<input type="search" name="q" id="q" autocomplete="off" autofocus placeholder="Search"></input>
+	</div>
+	<div id="results"></div>
+</body>
+</html>
diff --git a/src/com/redhat/ceylon/ceylondoc/resources/style.css b/src/com/redhat/ceylon/ceylondoc/resources/style.css
index 7c414e9..7c7b92a 100644
--- a/src/com/redhat/ceylon/ceylondoc/resources/style.css
+++ b/src/com/redhat/ceylon/ceylondoc/resources/style.css
@@ -153 +153,27 @@
-}
\ No newline at end of file
+}
+
+#results .match {
+ margin: 0.5em 1em;
+ padding: 0.5em 1em;
+ border-top: 1px solid gray;
+ -webkit-border-radius: 5px;
+ -moz-border-radius: 5px;
+ border-radius: 5px;
+}
+
+#results .type {
+ float: right;
+}
+
+#results .highlight {
+ background: Highlight;
+ color: HighlightText;
+}
+
+#results .selected {
+ background: #C7D8D8;
+}
+
+#search {
+ text-align: center;
+}

