diff --git a/src/com/redhat/ceylon/compiler/codegen/ExpressionTransformer.java b/src/com/redhat/ceylon/compiler/codegen/ExpressionTransformer.java
index ef4c45c..fdc3ada 100755
--- a/src/com/redhat/ceylon/compiler/codegen/ExpressionTransformer.java
+++ b/src/com/redhat/ceylon/compiler/codegen/ExpressionTransformer.java
@@ -439 +439 @@
-        JCExpression typeExpr = makeJavaType(op.getLeftTerm().getTypeModel(), 0);
+        JCExpression typeExpr = makeJavaType(op.getTypeModel(), NO_PRIMITIVES);
diff --git a/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.ceylon b/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.ceylon
index d146289..53a5002 100644
--- a/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.ceylon
+++ b/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.ceylon
@@ -22,5 +21,0 @@
-    
-    T box<T>(T t){
-        return t;
-    }
-    
@@ -31 +26 @@
-        Integer? nBoxed = natOrNothing1 ? box(0); 
+//        Integer? nBoxed = natOrNothing1 ? box(0); 
@@ -39,0 +35,2 @@
+        
+        Integer nn = null ? 2;
diff --git a/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.src b/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.src
index 0e4c07d..259a553 100644
--- a/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.src
+++ b/test-src/com/redhat/ceylon/compiler/test/expression/operator/NullHandlingOperators.src
@@ -5,4 +4,0 @@
-    private final <T>T box(final T t) {
-        return t;
-    }
-    
@@ -13,4 +9,3 @@
-        final ceylon.language.Integer nBoxed = (let ceylon.language.Integer $ceylontmp1 = natOrNothing1 in $ceylontmp1 != null ? $ceylontmp1 : <ceylon.language.Integer>box(.ceylon.language.Integer.instance(0L)));
-        ceylon.language.Integer nullSafeMember = (let ceylon.language.Integer $safe$2 = intOrNothing in $safe$2 != null ? $safe$2.getNegativeValue() : null);
-        ceylon.language.Integer nullSafeInvoke = (let ceylon.language.Integer $safe$3 = intOrNothing in $safe$3 != null ? $safe$3.plus(.ceylon.language.Integer.instance(1L)) : null);
-        nullSafeInvoke = (let ceylon.language.Integer $safe$5 = intOrNothing in $safe$5 != null ? (let ceylon.language.Integer $arg$4$callable$ = $safe$5,ceylon.language.Integer $arg$4$0 = .ceylon.language.Integer.instance(1L) in $arg$4$callable$.plus($arg$4$0)) : null);
+        ceylon.language.Integer nullSafeMember = (let ceylon.language.Integer $safe$1 = intOrNothing in $safe$1 != null ? $safe$1.getNegativeValue() : null);
+        ceylon.language.Integer nullSafeInvoke = (let ceylon.language.Integer $safe$2 = intOrNothing in $safe$2 != null ? $safe$2.plus(.ceylon.language.Integer.instance(1L)) : null);
+        nullSafeInvoke = (let ceylon.language.Integer $safe$4 = intOrNothing in $safe$4 != null ? (let ceylon.language.Integer $arg$3$callable$ = $safe$4,ceylon.language.Integer $arg$3$0 = .ceylon.language.Integer.instance(1L) in $arg$3$callable$.plus($arg$3$0)) : null);
@@ -18 +13,2 @@
-        final ceylon.language.Iterable<? extends ceylon.language.String> s2 = (let ceylon.language.Iterable<? extends ceylon.language.String> $ceylontmp6 = s1 in $ceylontmp6 != null ? $ceylontmp6 : ceylon.language.$empty.getEmpty());
+        final ceylon.language.Iterable<? extends ceylon.language.String> s2 = (let ceylon.language.Iterable<? extends ceylon.language.String> $ceylontmp5 = s1 in $ceylontmp5 != null ? $ceylontmp5 : ceylon.language.$empty.getEmpty());
+        final long nn = (let ceylon.language.Integer $ceylontmp6 = null in $ceylontmp6 != null ? $ceylontmp6 : .ceylon.language.Integer.instance(2L)).longValue();

