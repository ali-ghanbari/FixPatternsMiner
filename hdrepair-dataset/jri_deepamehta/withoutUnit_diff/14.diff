diff --git a/modules/dm4-core/src/main/java/de/deepamehta/core/impl/service/PluginInfoImpl.java b/modules/dm4-core/src/main/java/de/deepamehta/core/impl/service/PluginInfoImpl.java
index e2707db..f679783 100644
--- a/modules/dm4-core/src/main/java/de/deepamehta/core/impl/service/PluginInfoImpl.java
+++ b/modules/dm4-core/src/main/java/de/deepamehta/core/impl/service/PluginInfoImpl.java
@@ -40 +40 @@
-            renderers.put("canvas_renderers", getRenderers("canvas_renderers"));
+            // ### renderers.put("canvas_renderers", getRenderers("canvas_renderers"));
diff --git a/modules/dm4-files/src/main/resources/web/script/plugin.js b/modules/dm4-files/src/main/resources/web/script/plugin.js
index bdedc2c..c08cf80 100644
--- a/modules/dm4-files/src/main/resources/web/script/plugin.js
+++ b/modules/dm4-files/src/main/resources/web/script/plugin.js
@@ -3,3 +2,0 @@
-    dm4c.load_simple_renderer("/de.deepamehta.files/script/renderers/simple_renderers/file_content_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.files/script/renderers/simple_renderers/folder_content_renderer.js")
-
diff --git a/modules/dm4-iconpicker/src/main/resources/web/script/plugin.js b/modules/dm4-iconpicker/src/main/resources/web/script/plugin.js
index a9746ec..82ee338 100644
--- a/modules/dm4-iconpicker/src/main/resources/web/script/plugin.js
+++ b/modules/dm4-iconpicker/src/main/resources/web/script/plugin.js
@@ -3 +2,0 @@
-    dm4c.load_simple_renderer("/de.deepamehta.iconpicker/script/renderers/simple_renderers/icon_renderer.js")
diff --git a/modules/dm4-typeeditor/src/main/resources/web/script/plugin.js b/modules/dm4-typeeditor/src/main/resources/web/script/plugin.js
index b4d2f61..52d9d68 100644
--- a/modules/dm4-typeeditor/src/main/resources/web/script/plugin.js
+++ b/modules/dm4-typeeditor/src/main/resources/web/script/plugin.js
@@ -3 +2,0 @@
-    dm4c.load_page_renderer("/de.deepamehta.typeeditor/script/renderers/page_renderers/topictype_renderer.js")
diff --git a/modules/dm4-webbrowser/src/main/resources/web/script/plugin.js b/modules/dm4-webbrowser/src/main/resources/web/script/plugin.js
index ec9060b..a54158b 100644
--- a/modules/dm4-webbrowser/src/main/resources/web/script/plugin.js
+++ b/modules/dm4-webbrowser/src/main/resources/web/script/plugin.js
@@ -3,2 +2,0 @@
-    dm4c.load_page_renderer("/de.deepamehta.webbrowser/script/renderers/page_renderers/webpage_renderer.js")
-
diff --git a/modules/dm4-webclient/src/main/resources/docs/events.txt b/modules/dm4-webclient/src/main/resources/docs/events.txt
new file mode 100644
index 0000000..103b726
--- /dev/null
+++ b/modules/dm4-webclient/src/main/resources/docs/events.txt
@@ -0,0 +1,46 @@
+// ### TODO: move to wiki documentation.
+var hook_names = [
+    // Plugin
+    "init",
+    // Commands
+    "topic_commands",
+    "association_commands",
+    "canvas_commands",
+    // Storage (DB updates)
+    "post_create_topic",
+    "post_update_topic",
+    "post_update_association",
+    "post_delete_topic",
+    "post_delete_association",
+    // Selection (client model updates)
+    "post_select_topic",
+    "post_select_association",
+    "post_reset_selection",
+    // Show/Hide (view updates)
+    "pre_show_topic",
+    "post_show_topic",
+    "post_show_association",
+    "post_hide_topic",
+    "post_hide_association",
+    // Toolbar
+    "searchmode_widget",
+    "search",
+    "post_refresh_create_menu",
+    // Page Panel
+    "pre_render_page",
+    "pre_render_form",
+    "post_destroy_form",
+    "default_page_rendering",
+    // Canvas
+    "topic_doubleclicked",
+    "post_move_topic",
+    "post_move_canvas",
+    "pre_draw_canvas",
+    "process_drop",
+    // History
+    "pre_push_history",
+    "pre_pop_history",
+    // Permissions
+    "has_write_permission",
+    "has_create_permission"
+]
diff --git a/modules/dm4-webclient/src/main/resources/web/script/internal_plugins/default_plugin.js b/modules/dm4-webclient/src/main/resources/web/script/internal_plugins/default_plugin.js
index 12b7253..79f8eb6 100644
--- a/modules/dm4-webclient/src/main/resources/web/script/internal_plugins/default_plugin.js
+++ b/modules/dm4-webclient/src/main/resources/web/script/internal_plugins/default_plugin.js
@@ -8,16 +7,0 @@
-    dm4c.load_page_renderer("/de.deepamehta.webclient/script/renderers/page_renderers/topic_renderer.js")
-    dm4c.load_page_renderer("/de.deepamehta.webclient/script/renderers/page_renderers/association_renderer.js")
-
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/text_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/number_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/boolean_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/html_renderer.js")
-    // ### dm4c.load_field_renderer("/script/field_renderers/date_field_renderer.js")
-    // ### dm4c.load_field_renderer("/script/field_renderers/reference_field_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/title_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/body_text_renderer.js")
-    dm4c.load_simple_renderer("/de.deepamehta.webclient/script/renderers/simple_renderers/search_result_renderer.js")
-
-    dm4c.load_multi_renderer("/de.deepamehta.webclient/script/renderers/multi_renderers/default_multi_renderer.js")
-    dm4c.load_multi_renderer("/de.deepamehta.webclient/script/renderers/multi_renderers/checkbox_renderer.js")
-
diff --git a/modules/dm4-webclient/src/main/resources/web/script/plugin_manager.js b/modules/dm4-webclient/src/main/resources/web/script/plugin_manager.js
index 7874b89..0586623 100644
--- a/modules/dm4-webclient/src/main/resources/web/script/plugin_manager.js
+++ b/modules/dm4-webclient/src/main/resources/web/script/plugin_manager.js
@@ -3 +2,0 @@
-    var plugin_sources = []
@@ -5,3 +3,0 @@
-    var plugins_complete = 0
-
-    var page_renderer_sources = []
@@ -9,2 +4,0 @@
-
-    var simple_renderer_sources = []
@@ -12,2 +5,0 @@
-
-    var multi_renderer_sources = []
@@ -17,0 +10,3 @@
+    var items_to_load
+    var items_complete = 0
+
@@ -20,48 +14,0 @@
-
-    // ### FIXME: drop this. Not in use. Only here for documentation purposes.
-    // ### TODO: move to wiki documentation.
-    var hook_names = [
-        // Plugin
-        "init",
-        // Commands
-        "topic_commands",
-        "association_commands",
-        "canvas_commands",
-        // Storage (DB updates)
-        "post_create_topic",
-        "post_update_topic",
-        "post_update_association",
-        "post_delete_topic",
-        "post_delete_association",
-        // Selection (client model updates)
-        "post_select_topic",
-        "post_select_association",
-        "post_reset_selection",
-        // Show/Hide (view updates)
-        "pre_show_topic",
-        "post_show_topic",
-        "post_show_association",
-        "post_hide_topic",
-        "post_hide_association",
-        // Toolbar
-        "searchmode_widget",
-        "search",
-        "post_refresh_create_menu",
-        // Page Panel
-        "pre_render_page",
-        "pre_render_form",
-        "post_destroy_form",
-        "default_page_rendering",
-        // Canvas
-        "topic_doubleclicked",
-        "post_move_topic",
-        "post_move_canvas",
-        "pre_draw_canvas",
-        "process_drop",
-        // History
-        "pre_push_history",
-        "pre_pop_history",
-        // Permissions
-        "has_write_permission",
-        "has_create_permission"
-    ]
@@ -72,3 +19,14 @@
-        register_internal_plugins(config.internal_plugins)
-        register_plugins()
-        load_plugins()
+        // retrieve list of installed plugins from server
+        var plugins = dm4c.restc.get_plugins()
+        //
+        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Plugins installed at server-side: " + plugins.length)
+        //
+        items_to_load = count_items_to_load(plugins) + config.internal_plugins.length
+        //
+        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Total items to load: " + items_to_load)
+        //
+        load_internal_plugins(config.internal_plugins)
+        //
+        for (var i = 0, plugin; plugin = plugins[i]; i++) {
+            load_plugin(plugin)
+        }
@@ -78,2 +35,0 @@
-        // 1) instantiate
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log(".......... instantiating \"" + plugin_uri + "\"")
@@ -85,22 +41,5 @@
-        plugins[plugin_uri] = create_plugin()
-        // 2) all plugins complete?
-        plugins_complete++
-        if (plugins_complete == plugin_sources.length) {
-            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("PLUGINS COMPLETE!")
-            all_plugins_loaded()
-        }
-
-        function create_plugin() {
-            var plugin = {}
-            plugin_func.call(plugin)
-            return plugin
-        }
-
-        function all_plugins_loaded() {
-            load_page_renderers()
-            load_simple_renderers()
-            load_multi_renderers()
-            load_stylesheets()
-            //
-            config.post_load_plugins()
-        }
+        var plugin = {}
+        plugin_func.call(plugin)
+        plugins[plugin_uri] = plugin
+        //
+        track_load_state("plugin \"" + plugin_uri + "\"");
@@ -120,0 +60,29 @@
+    this.add_page_renderer = function(renderer_uri, renderer) {
+        // error check
+        if (page_renderers[renderer_uri]) {
+            throw "PluginManagerError: page renderer URI clash with \"" + renderer_uri + "\""
+        }
+        //
+        page_renderers[renderer_uri] = renderer
+        //
+        track_load_state("page renderer \"" + renderer_uri + "\"");
+    }
+
+    this.get_page_renderer = function(topic_or_association_or_renderer_uri) {
+        if (typeof(topic_or_association_or_renderer_uri) == "string") {
+            var renderer_uri = topic_or_association_or_renderer_uri
+        } else {
+            var type = topic_or_association_or_renderer_uri.get_type()
+            var renderer_uri = type.get_page_renderer_uri()
+        }
+        var renderer = page_renderers[renderer_uri]
+        // error check
+        if (!renderer) {
+            throw "PluginManagerError: page renderer \"" + renderer_uri + "\" is unknown"
+        }
+        //
+        return renderer
+    }
+
+    // ---
+
@@ -127,0 +96,2 @@
+        //
+        track_load_state("simple renderer \"" + renderer_uri + "\"");
@@ -148,0 +119,2 @@
+        //
+        track_load_state("multi renderer \"" + renderer_uri + "\"");
@@ -159,41 +130,0 @@
-    }
-
-    // ---
-
-    this.add_page_renderer = function(renderer_uri, renderer) {
-        // error check
-        if (page_renderers[renderer_uri]) {
-            throw "PluginManagerError: page renderer URI clash with \"" + renderer_uri + "\""
-        }
-        //
-        page_renderers[renderer_uri] = renderer
-    }
-
-    this.get_page_renderer = function(topic_or_association_or_renderer_uri) {
-        if (typeof(topic_or_association_or_renderer_uri) == "string") {
-            var renderer_uri = topic_or_association_or_renderer_uri
-        } else {
-            var type = topic_or_association_or_renderer_uri.get_type()
-            var renderer_uri = type.get_page_renderer_uri()
-        }
-        var renderer = page_renderers[renderer_uri]
-        // error check
-        if (!renderer) {
-            throw "PluginManagerError: page renderer \"" + renderer_uri + "\" is unknown"
-        }
-        //
-        return renderer
-    }
-
-    // ---
-
-    this.register_page_renderer = function(source_path) {
-        page_renderer_sources.push(source_path)
-    }
-
-    this.register_simple_renderer = function(source_path) {
-        simple_renderer_sources.push(source_path)
-    }
-
-    this.register_multi_renderer = function(source_path) {
-        multi_renderer_sources.push(source_path)
@@ -251 +182,2 @@
-    function register_internal_plugins(plugins) {
+    function count_items_to_load(plugins) {
+        var count = 0
@@ -253,13 +185 @@
-            register_plugin("/de.deepamehta.webclient/script/internal_plugins/" + plugin)
-        }
-    }
-
-    /**
-     * Retrieves the list of installed plugins and registers those which have a client component.
-     */
-    function register_plugins() {
-        // retrieve list
-        var plugins = dm4c.restc.get_plugins()
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Plugins installed at server-side: " + plugins.length)
-        // register
-        for (var i = 0, plugin; plugin = plugins[i]; i++) {
+            // count plugin file
@@ -267,5 +187,5 @@
-                if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... plugin \"" + plugin.plugin_uri +
-                    "\" -- has client component")
-                register_plugin("/" + plugin.plugin_uri + "/script/plugin.js")
-            } else {
-                if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... plugin \"" + plugin.plugin_uri + "\"")
+                count++
+            }
+            // count renderers
+            for (var renderer_type in plugin.renderers) {
+                count += plugin.renderers[renderer_type].length
@@ -273,0 +194 @@
+        return count
@@ -276,2 +197,9 @@
-    function register_plugin(source_path) {
-        plugin_sources.push(source_path)
+    function track_load_state(item) {
+        items_complete++
+        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + item + " complete (" +
+            items_complete + "/" + items_to_load + ")")
+        if (items_complete == items_to_load) {
+            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("PLUGINS COMPLETE!")
+            load_stylesheets()
+            config.post_load_plugins()
+        }
@@ -292,8 +220,3 @@
-    /**
-     * Loads all registered plugins.
-     */
-    function load_plugins() {
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Loading " + plugin_sources.length + " plugins:")
-        for (var i = 0, plugin_source; plugin_source = plugin_sources[i]; i++) {
-            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + plugin_source)
-            dm4c.load_script(plugin_source, function() {})      // load plugin asynchronously
+    function load_internal_plugins(plugins) {
+        for (var i = 0, plugin; plugin = plugins[i]; i++) {
+            load_plugin_file("/de.deepamehta.webclient/script/internal_plugins/" + plugin)
@@ -303 +226,18 @@
-    function load_page_renderers() {
+    function load_plugin(plugin) {
+        // 1) load plugin file
+        if (plugin.has_client_component) {
+            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... plugin \"" + plugin.plugin_uri +
+                "\" -- has client component")
+            var plugin_file = "/" + plugin.plugin_uri + "/script/plugin.js"
+            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + plugin_file)
+            load_plugin_file(plugin_file)
+        } else {
+            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... plugin \"" + plugin.plugin_uri + "\"")
+        }
+        //
+        // 2) load renderers
+        load_renderers(plugin.plugin_uri, "page_renderers",   plugin.renderers.page_renderers)
+        load_renderers(plugin.plugin_uri, "simple_renderers", plugin.renderers.simple_renderers)
+        load_renderers(plugin.plugin_uri, "multi_renderers",  plugin.renderers.multi_renderers)
+        // ### load_renderers(plugin.plugin_uri, "canvas_renderers", plugin.renderers.canvas_renderers)
+    }
@@ -305,5 +245,6 @@
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Loading " + page_renderer_sources.length + " page renderers:")
-        for (var i = 0, page_renderer_src; page_renderer_src = page_renderer_sources[i]; i++) {
-            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + page_renderer_src)
-            // load page renderer synchronously (Note: synchronous is required for displaying initial topic)
-            dm4c.load_script(page_renderer_src)
+    function load_renderers(plugin_uri, renderer_type, renderer_files) {
+        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Loading " + renderer_files.length + " " + renderer_type + ":")
+        for (var i = 0, renderer_file; renderer_file = renderer_files[i]; i++) {
+            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + renderer_file)
+            // load renderer synchronously (Note: synchronous is required for displaying initial topic) ### FIXME
+            dm4c.load_script("/" + plugin_uri + "/script/renderers/" + renderer_type + "/" + renderer_file)
@@ -313,7 +254,2 @@
-    function load_simple_renderers() {
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Loading " + simple_renderer_sources.length + " simple renderers:")
-        for (var i = 0, simple_renderer_source; simple_renderer_source = simple_renderer_sources[i]; i++) {
-            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + simple_renderer_source)
-            // load simple renderer synchronously (Note: synchronous is required for displaying initial topic)
-            dm4c.load_script(simple_renderer_source)
-        }
+    function load_plugin_file(plugin_file) {
+        dm4c.load_script(plugin_file, function() {})      // load plugin asynchronously
@@ -322,8 +258 @@
-    function load_multi_renderers() {
-        if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("Loading " + multi_renderer_sources.length + " multi renderers:")
-        for (var i = 0, multi_renderer_source; multi_renderer_source = multi_renderer_sources[i]; i++) {
-            if (dm4c.LOG_PLUGIN_LOADING) dm4c.log("..... " + multi_renderer_source)
-            // load multi renderer synchronously (Note: synchronous is required for displaying initial topic)
-            dm4c.load_script(multi_renderer_source)
-        }
-    }
+    // ---
diff --git a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/body_text_renderer.js b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/body_text_renderer.js
index 50d1752..f44388f 100644
--- a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/body_text_renderer.js
+++ b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/body_text_renderer.js
@@ -7 +7,3 @@
-    render_form: dm4c.get_simple_renderer("dm4.webclient.html_renderer").render_form
+    render_form: function(page_model, parent_element) {
+        return dm4c.get_simple_renderer("dm4.webclient.html_renderer").render_form(page_model, parent_element)
+    }
diff --git a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/date_field_renderer.js b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/date_field_renderer.js
deleted file mode 100644
index 2bab979..0000000
--- a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/date_field_renderer.js
+++ /dev/null
@@ -1,27 +0,0 @@
-// ### TODO: adapt to new FieldRenderer API.
-function DateFieldRenderer(field) {
-
-    this.render_field = function() {
-        // field label
-        dm4c.render.field_label(field_model)
-        // field value
-        return js.format_date(field_model.value)
-    }
-
-    this.render_form_element = function() {
-        var input = $("<input>").attr({type: "hidden", "field-uri": field_model.uri, value: field_model.value})
-        input.change(function() {
-            $("span", $(this).parent()).text(js.format_date(this.value))
-        })
-        var date_div = $("<div>")
-        date_div.append($("<span>").css("margin-right", "1em").text(js.format_date(field_model.value)))
-        date_div.append(input)
-        input.datepicker({firstDay: 1, showAnim: "fadeIn", showOtherMonths: true, showOn: "button",
-            buttonImage: "images/calendar.gif", buttonImageOnly: true, buttonText: "Choose Date"})
-        return date_div
-    }
-
-    this.read_form_value = function() {
-        return $("[field-uri=" + field_model.uri + "]").val()
-    }
-}
diff --git a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/reference_field_renderer.js b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/reference_field_renderer.js
deleted file mode 100644
index e650b91..0000000
--- a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/reference_field_renderer.js
+++ /dev/null
@@ -1,56 +0,0 @@
-// ### FIXME: not in use
-function ReferenceFieldRenderer(topic, field, rel_topics) {
-
-    this.render_field = function() {
-        // field label
-        dm4c.render.field_label(field)
-        // field value
-        return dm4c.render_topic_list(rel_topics)
-    }
-
-    this.render_form_element = function() {
-        switch (field.editor) {
-        case "checkboxes":
-            var topics = dm4c.restc.get_topics(field.ref_topic_type_uri)
-            var relation_div = $("<div>")
-            for (var i = 0, topic; topic = topics[i]; i++) {
-                var attr = {type: "checkbox", id: topic.id, name: "relation_" + field.uri}
-                if (js.includes(rel_topics, function(t) {
-                        return t.id == topic.id
-                    })) {
-                    attr.checked = "checked"
-                }
-                relation_div.append($("<label>").append($("<input>").attr(attr)).append(topic.label))
-            }
-            return relation_div
-        }
-    }
-
-    this.read_form_value = function() {
-        // TODO: updating reference fields should run at server-side (in a transaction)
-        switch (field.editor) {
-        case "checkboxes":
-            $("input:checkbox[name=relation_" + field.uri + "]").each(
-                function() {
-                    var checkbox = this
-                    var was_checked_before = js.includes(dm4c.get_page_renderer(topic).topic_buffer[field.uri],
-                        function(topic) {
-                            return topic.id == checkbox.id
-                        }
-                    )
-                    if (checkbox.checked) {
-                        if (!was_checked_before) {
-                            dm4c.create_relation("RELATION", topic.id, checkbox.id)
-                        }
-                    } else {
-                        if (was_checked_before) {
-                            dm4c.delete_association(dm4c.restc.get_relation(topic.id, checkbox.id).id)
-                        }
-                    }
-                }
-            )
-            // prevent this field from being updated
-            return null
-        }
-    }
-}
diff --git a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/title_renderer.js b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/title_renderer.js
index 0d2c4bf..92e6ab9 100644
--- a/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/title_renderer.js
+++ b/modules/dm4-webclient/src/main/resources/web/script/renderers/simple_renderers/title_renderer.js
@@ -4,3 +4 @@
-        parent_element.append($("<h1>")
-            .text(js.render_text(page_model.value))
-        )
+        parent_element.append($("<h1>").text(js.render_text(page_model.value)))
@@ -9 +7,3 @@
-    render_form: dm4c.get_simple_renderer("dm4.webclient.text_renderer").render_form
+    render_form: function(page_model, parent_element) {
+        return dm4c.get_simple_renderer("dm4.webclient.text_renderer").render_form(page_model, parent_element)
+    }
diff --git a/modules/dm4-webclient/src/main/resources/web/script/webclient.js b/modules/dm4-webclient/src/main/resources/web/script/webclient.js
index efc25a8..b46ff59 100644
--- a/modules/dm4-webclient/src/main/resources/web/script/webclient.js
+++ b/modules/dm4-webclient/src/main/resources/web/script/webclient.js
@@ -699,12 +698,0 @@
-    this.load_page_renderer = function(source_path) {
-        pm.register_page_renderer(source_path)
-    }
-
-    this.load_simple_renderer = function(source_path) {
-        pm.register_simple_renderer(source_path)
-    }
-
-    this.load_multi_renderer = function(source_path) {
-        pm.register_multi_renderer(source_path)
-    }
-

