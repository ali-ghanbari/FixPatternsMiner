diff --git a/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractFixJavadocMojo.java b/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractFixJavadocMojo.java
index cb5c9bc..dded104 100644
--- a/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractFixJavadocMojo.java
+++ b/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractFixJavadocMojo.java
@@ -534 +534 @@
-                        THROWS_TAG, LINK_TAG)) {
+                        THROWS_TAG, LINK_TAG, RETURN_TAG)) {
diff --git a/maven-javadoc-plugin/src/test/java/org/apache/maven/plugin/javadoc/FixJavadocMojoTest.java b/maven-javadoc-plugin/src/test/java/org/apache/maven/plugin/javadoc/FixJavadocMojoTest.java
index e2010ac..1cee10d 100644
--- a/maven-javadoc-plugin/src/test/java/org/apache/maven/plugin/javadoc/FixJavadocMojoTest.java
+++ b/maven-javadoc-plugin/src/test/java/org/apache/maven/plugin/javadoc/FixJavadocMojoTest.java
@@ -576,0 +577,29 @@
+    
+    public void testInitParameters() 
+        throws Throwable
+    {
+        AbstractFixJavadocMojo mojoInstance = new FixJavadocMojo();
+        setVariableValueToObject( mojoInstance, "fixTags", "author, version, since, param, return, throws, link" );
+        setVariableValueToObject(mojoInstance, "defaultSince", "1.0");
+        setVariableValueToObject(mojoInstance, "level", "protected");
+        
+        PrivateAccessor.invoke( mojoInstance, "init", new Class[] { }, new String[] { } );
+        
+        String[] fixTags = (String[]) getVariableValueFromObject(mojoInstance, "fixTagsSplitted");
+        
+        assertEquals("author", fixTags[0]);
+        assertEquals("version", fixTags[1]);
+        assertEquals("since", fixTags[2]);
+        assertEquals("param", fixTags[3]);
+        assertEquals("return", fixTags[4]);
+        assertEquals("throws", fixTags[5]);
+        assertEquals("link", fixTags[6]);
+        assertEquals(7, fixTags.length);
+        
+        setVariableValueToObject( mojoInstance, "fixTags", "return, fake_value" );
+        PrivateAccessor.invoke( mojoInstance, "init", new Class[] { }, new String[] { } );
+        fixTags = (String[]) getVariableValueFromObject(mojoInstance, "fixTagsSplitted");
+        
+        assertEquals("return", fixTags[0]);
+        assertEquals(1, fixTags.length);
+    }

