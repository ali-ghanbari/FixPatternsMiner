diff --git a/repose-aggregator/commons/utilities/src/main/java/com/rackspace/papi/commons/util/logging/apache/format/converters/DateConversionFormat.java b/repose-aggregator/commons/utilities/src/main/java/com/rackspace/papi/commons/util/logging/apache/format/converters/DateConversionFormat.java
index ce3c4d5..ab76ed4 100644
--- a/repose-aggregator/commons/utilities/src/main/java/com/rackspace/papi/commons/util/logging/apache/format/converters/DateConversionFormat.java
+++ b/repose-aggregator/commons/utilities/src/main/java/com/rackspace/papi/commons/util/logging/apache/format/converters/DateConversionFormat.java
@@ -6,2 +6 @@
-    ISO_8601("yyyy-MM-dd'T'HH:mm:ss'Z'");  //this is incorrect, but there isn't a right solution in java 1.6
-//    ISO_8601("yyyy-MM-dd'T'HH:mm:ssX");  //use this one when we switch to java 1.7 it's correct
+    ISO_8601("yyyy-MM-dd'T'HH:mm:ssX");
diff --git a/repose-aggregator/commons/utilities/src/test/groovy/com/rackspace/papi/commons/util/logging/apache/format/converters/DateTimeFormatConverterTest.groovy b/repose-aggregator/commons/utilities/src/test/groovy/com/rackspace/papi/commons/util/logging/apache/format/converters/DateTimeFormatConverterTest.groovy
index 801a7a7..9ac1ad1 100644
--- a/repose-aggregator/commons/utilities/src/test/groovy/com/rackspace/papi/commons/util/logging/apache/format/converters/DateTimeFormatConverterTest.groovy
+++ b/repose-aggregator/commons/utilities/src/test/groovy/com/rackspace/papi/commons/util/logging/apache/format/converters/DateTimeFormatConverterTest.groovy
@@ -42,14 +41,0 @@
-    /*
-     * The format we're using is incorrect and doesn't do what it says it does,
-     * the following two tests prove it.
-     *
-     * Unfortunately the SimpleDateFormat class in Java 1.6 is broken
-     * The splodeDate is set to July of 2014, which is about when we expect to be switching to JDK 1.7
-     * At this point the tests will execute, and probably fail unless we've switched to JDK 1.7, at which point they
-     * should succeed!
-     *
-     * As long as the assumption proves false, it will ignore the tests. So we're assuming that we're past the timebomb
-     * date, otherwise the test method is ignored
-     */
-    def splodeDate = new Date(2014 - 1900, Calendar.JULY, 1, 9, 0);
-
@@ -58,2 +43,0 @@
-        Assume.assumeTrue(new Date() > splodeDate)
-
@@ -67,2 +50,0 @@
-        Assume.assumeTrue(new Date() > splodeDate)
-

