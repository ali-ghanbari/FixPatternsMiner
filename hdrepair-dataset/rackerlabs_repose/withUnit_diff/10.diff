diff --git a/project-set/commons/utilities/src/main/java/com/rackspace/papi/commons/util/io/buffer/CyclicByteBuffer.java b/project-set/commons/utilities/src/main/java/com/rackspace/papi/commons/util/io/buffer/CyclicByteBuffer.java
index 5c6f944..0a6c74b 100644
--- a/project-set/commons/utilities/src/main/java/com/rackspace/papi/commons/util/io/buffer/CyclicByteBuffer.java
+++ b/project-set/commons/utilities/src/main/java/com/rackspace/papi/commons/util/io/buffer/CyclicByteBuffer.java
@@ -48 +48 @@
-        this.nextWritableIndex = 0;
+        this.nextWritableIndex = readableLength;
diff --git a/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/ByteBufferInputStreamTest.java b/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/ByteBufferInputStreamTest.java
index 20848ec..eacca11 100644
--- a/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/ByteBufferInputStreamTest.java
+++ b/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/ByteBufferInputStreamTest.java
@@ -3,0 +4 @@
+import com.rackspace.papi.commons.util.io.buffer.CyclicByteBuffer;
@@ -217,0 +219,17 @@
+      public void shouldStopReadingOnNoBytesRemaining() throws Exception {
+         final byte[] bytes = new byte[]{1, 2, 3};
+         ByteBuffer localBuffer = new CyclicByteBuffer();
+         localBuffer.put(bytes);
+
+         stream = new ByteBufferInputStream(localBuffer.copy());
+
+         for (int c = 0; c < 4; c++) {
+            if (c == 3) {
+               assertEquals(-1, stream.read());
+            } else {
+               assertEquals(bytes[c], stream.read());
+            }
+         }
+      }
+
+      @Test

