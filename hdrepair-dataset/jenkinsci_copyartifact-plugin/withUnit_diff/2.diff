diff --git a/src/main/java/hudson/plugins/copyartifact/CopyArtifact.java b/src/main/java/hudson/plugins/copyartifact/CopyArtifact.java
index 66d798c..7a3b087 100644
--- a/src/main/java/hudson/plugins/copyartifact/CopyArtifact.java
+++ b/src/main/java/hudson/plugins/copyartifact/CopyArtifact.java
@@ -193 +193 @@
-            Run src = selector.getBuild(job, env, parameters != null ? new ParametersBuildFilter(parameters) : new BuildFilter(), build);
+            Run src = selector.getBuild(job, env, parameters != null ? new ParametersBuildFilter(env.expand(parameters)) : new BuildFilter(), build);
diff --git a/src/test/java/hudson/plugins/copyartifact/CopyArtifactTest.java b/src/test/java/hudson/plugins/copyartifact/CopyArtifactTest.java
index 10df32e..62b36ce 100644
--- a/src/test/java/hudson/plugins/copyartifact/CopyArtifactTest.java
+++ b/src/test/java/hudson/plugins/copyartifact/CopyArtifactTest.java
@@ -783,0 +784,15 @@
+    public void testFilterByMetaParameters() throws Exception {
+        FreeStyleProject other = createArtifactProject("Foo job");
+        other.addProperty(new ParametersDefinitionProperty(new BooleanParameterDefinition("BAR", false, "")));
+        assertBuildStatusSuccess(other.scheduleBuild2(0, new UserCause(), new ParametersAction(new BooleanParameterValue("BAR", false))).get());
+        assertBuildStatusSuccess(other.scheduleBuild2(0, new UserCause(), new ParametersAction(new BooleanParameterValue("BAR", true))).get());
+        assertBuildStatusSuccess(other.scheduleBuild2(0, new UserCause(), new ParametersAction(new BooleanParameterValue("BAR", false))).get());
+        FreeStyleProject p = createProject(other.getName(), "$VAR=true", "*.txt", "", true, false, false);
+        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition("VAR", "")));
+        CaptureEnvironmentBuilder envStep = new CaptureEnvironmentBuilder();
+        p.getBuildersList().add(envStep);
+        FreeStyleBuild b = p.scheduleBuild2(0, new UserCause(), new ParametersAction(new StringParameterValue("VAR", "BAR"))).get();
+        assertBuildStatusSuccess(b);
+        assertEquals("2", envStep.getEnvVars().get("COPYARTIFACT_BUILD_NUMBER_FOO_JOB"));
+    }
+

