diff --git a/src/hadoop/cascading/tap/hadoop/Hfs.java b/src/hadoop/cascading/tap/hadoop/Hfs.java
index a6b4b17..ce28643 100644
--- a/src/hadoop/cascading/tap/hadoop/Hfs.java
+++ b/src/hadoop/cascading/tap/hadoop/Hfs.java
@@ -265 +265 @@
-      URI uri = new URI( stringPath );
+      URI uri = new Path( stringPath ).toUri(); // safer URI parsing
diff --git a/src/test/cascading/tap/hadoop/HadoopTapPlatformTest.java b/src/test/cascading/tap/hadoop/HadoopTapPlatformTest.java
index 0297908..6747830 100644
--- a/src/test/cascading/tap/hadoop/HadoopTapPlatformTest.java
+++ b/src/test/cascading/tap/hadoop/HadoopTapPlatformTest.java
@@ -392,0 +393,25 @@
+  @Test
+  public void testHfsBracketAsterisk() throws Exception
+    {
+    getPlatform().copyFromLocal( inputFileLower );
+    getPlatform().copyFromLocal( inputFileUpper );
+
+    String dataLocation = System.getProperty( data.InputData.TEST_DATA_PATH, "src/test/data/" );
+
+    Hfs sourceExists = new Hfs( new TextLine( new Fields( "offset", "line" ) ), dataLocation + "{*}" );
+    TupleEntryIterator iterator = sourceExists.openForRead( new HadoopFlowProcess( ( (HadoopPlatform) getPlatform() ).getJobConf() ) );
+    assertTrue( iterator.hasNext() );
+    iterator.close();
+
+    try
+      {
+      Hfs sourceNotExists = new Hfs( new TextLine( new Fields( "offset", "line" ) ), dataLocation + "/blah/" );
+      iterator = sourceNotExists.openForRead( new HadoopFlowProcess( ( (HadoopPlatform) getPlatform() ).getJobConf() ) );
+      fail();
+      }
+    catch( IOException exception )
+      {
+      // do nothing
+      }
+    }
+

