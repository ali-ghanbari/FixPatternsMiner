diff --git a/stratio-sinks/stratio-mongodb-sink/src/main/java/com/stratio/ingestion/sink/mongodb/MappingDefinition.java b/stratio-sinks/stratio-mongodb-sink/src/main/java/com/stratio/ingestion/sink/mongodb/MappingDefinition.java
index 7680e75..63cdc25 100644
--- a/stratio-sinks/stratio-mongodb-sink/src/main/java/com/stratio/ingestion/sink/mongodb/MappingDefinition.java
+++ b/stratio-sinks/stratio-mongodb-sink/src/main/java/com/stratio/ingestion/sink/mongodb/MappingDefinition.java
@@ -176 +176 @@
-            if (fd.getFieldName().equals(name)) {
+            if (name.equals(fd.getFieldName())) {
diff --git a/stratio-sinks/stratio-mongodb-sink/src/test/java/com/stratio/ingestion/sink/mongodb/MongoSinkTest.java b/stratio-sinks/stratio-mongodb-sink/src/test/java/com/stratio/ingestion/sink/mongodb/MongoSinkTest.java
index 5d7144b..af8a006 100644
--- a/stratio-sinks/stratio-mongodb-sink/src/test/java/com/stratio/ingestion/sink/mongodb/MongoSinkTest.java
+++ b/stratio-sinks/stratio-mongodb-sink/src/test/java/com/stratio/ingestion/sink/mongodb/MongoSinkTest.java
@@ -18,6 +18,7 @@
-import com.fasterxml.jackson.databind.node.JsonNodeFactory;
-import com.fasterxml.jackson.databind.node.ObjectNode;
-import com.github.fakemongo.Fongo;
-import com.google.common.base.Charsets;
-import com.mongodb.*;
-import org.apache.commons.io.IOUtils;
+import static org.fest.assertions.Assertions.assertThat;
+
+import java.lang.reflect.Field;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
+
@@ -37 +37,0 @@
-import sun.security.krb5.Config;
@@ -39,6 +39,8 @@
-import static org.fest.assertions.Assertions.*;
-
-import java.lang.reflect.Field;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Map;
+import com.fasterxml.jackson.databind.node.JsonNodeFactory;
+import com.fasterxml.jackson.databind.node.ObjectNode;
+import com.github.fakemongo.Fongo;
+import com.google.common.base.Charsets;
+import com.mongodb.DB;
+import com.mongodb.DBCollection;
+import com.mongodb.DBObject;
+import com.mongodb.MongoClient;
@@ -121 +123 @@
-        headers.put("myNull", "foobar");
+        headers.put("myNull", null);
@@ -144,2 +146,2 @@
-        assertThat(result.get("myInt64")).isEqualTo(64L);
-        assertThat(result.get("myInt64")).isInstanceOf(Long.class);
+        assertThat(result.get("myInt64")).isEqualTo(64);
+        assertThat(result.get("myInt64")).isInstanceOf(Integer.class);

