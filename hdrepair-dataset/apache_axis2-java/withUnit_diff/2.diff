diff --git a/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java b/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java
index bd77c7a..d2f30a3 100644
--- a/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java
+++ b/modules/adb-codegen/src/org/apache/axis2/schema/SchemaCompiler.java
@@ -1139 +1139 @@
-                processParticle(null,extension.getParticle(), metaInfHolder, parentSchema);
+                processParticle(extension.getBaseTypeName(),extension.getParticle(), metaInfHolder, parentSchema);
diff --git a/modules/adb-codegen/src/org/apache/axis2/schema/template/ADBBeanTemplate.xsl b/modules/adb-codegen/src/org/apache/axis2/schema/template/ADBBeanTemplate.xsl
index bb0dd59..4f2cd29 100644
--- a/modules/adb-codegen/src/org/apache/axis2/schema/template/ADBBeanTemplate.xsl
+++ b/modules/adb-codegen/src/org/apache/axis2/schema/template/ADBBeanTemplate.xsl
@@ -1874,0 +1875,5 @@
+                <xsl:if test="$extension">
+                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
+                    attribList.add(new javax.xml.namespace.QName("<xsl:value-of select="$nsuri"/>","<xsl:value-of select="$originalName"/>"));
+                </xsl:if>
+
diff --git a/modules/adb-codegen/test-resources/testsuite/innerParticles.xsd b/modules/adb-codegen/test-resources/testsuite/innerParticles.xsd
index dd8f09a..a11281b 100644
--- a/modules/adb-codegen/test-resources/testsuite/innerParticles.xsd
+++ b/modules/adb-codegen/test-resources/testsuite/innerParticles.xsd
@@ -55 +54,0 @@
-    
@@ -71,0 +71,20 @@
+
+    <xsd:element name="TestInnterParticleExtension" type="test1:TestInnterParticleExtensionParentComplexType"/>
+
+    <xsd:complexType name="TestInnterParticleExtensionChildComplexType">
+        <xsd:complexContent>
+            <xsd:extension base="test1:TestInnterParticleExtensionParentComplexType">
+                <xsd:sequence>
+                    <xsd:choice>
+                        <xsd:element name="Param1" type="xsd:string"/>
+                        <xsd:element name="Param2" type="xsd:string"/>
+                    </xsd:choice>
+                </xsd:sequence>
+            </xsd:extension>
+        </xsd:complexContent>
+    </xsd:complexType>
+
+    <xsd:complexType name="TestInnterParticleExtensionParentComplexType">
+        <xsd:sequence>
+        </xsd:sequence>
+    </xsd:complexType>
diff --git a/modules/adb-codegen/test/org/apache/axis2/schema/innerparticles/InnerParticlesTest.java b/modules/adb-codegen/test/org/apache/axis2/schema/innerparticles/InnerParticlesTest.java
index 718ad12..d19674d 100644
--- a/modules/adb-codegen/test/org/apache/axis2/schema/innerparticles/InnerParticlesTest.java
+++ b/modules/adb-codegen/test/org/apache/axis2/schema/innerparticles/InnerParticlesTest.java
@@ -21,0 +22 @@
+import org.apache.axis2.databinding.ADBException;
@@ -28,0 +30 @@
+
@@ -271,0 +274,34 @@
+    public void testIntterParticalExtension(){
+         TestInnterParticleExtension testInnterParticleExtension = new TestInnterParticleExtension();
+
+        TestInnterParticleExtensionChildComplexType testInnterParticleExtensionChildComplexType =
+                new TestInnterParticleExtensionChildComplexType();
+        testInnterParticleExtension.setTestInnterParticleExtension(testInnterParticleExtensionChildComplexType);
+
+        TestInnterParticleExtensionParentComplexTypeChoice_type6 testInnterParticleExtensionParentComplexTypeChoice_type0 =
+                new TestInnterParticleExtensionParentComplexTypeChoice_type6();
+        testInnterParticleExtensionChildComplexType.setTestInnterParticleExtensionParentComplexTypeChoice_type6(testInnterParticleExtensionParentComplexTypeChoice_type0);
+
+        testInnterParticleExtensionParentComplexTypeChoice_type0.setParam1("param1");
+        testInnterParticleExtensionParentComplexTypeChoice_type0.setParam2("param2");
+
+        try {
+            OMElement omElement = testInnterParticleExtension.getOMElement(TestInnterParticleExtension.MY_QNAME,
+                                                            OMAbstractFactory.getOMFactory());
+            String omElementString = omElement.toStringWithConsume();
+            System.out.println("OM String ==> " + omElementString);
+            XMLStreamReader xmlReader = StAXUtils.createXMLStreamReader(new ByteArrayInputStream(omElementString.getBytes()));
+            TestInnterParticleExtension result = TestInnterParticleExtension.Factory.parse(xmlReader);
+            assertTrue(result.getTestInnterParticleExtension() instanceof TestInnterParticleExtensionChildComplexType);
+            TestInnterParticleExtensionChildComplexType resultComplexType =
+                    (TestInnterParticleExtensionChildComplexType) result.getTestInnterParticleExtension();
+            assertEquals(resultComplexType.getTestInnterParticleExtensionParentComplexTypeChoice_type6().getParam2(),"param2");
+        } catch (ADBException e) {
+            fail();
+        } catch (XMLStreamException e) {
+            fail();
+        } catch (Exception e) {
+            fail();
+        }
+    }
+

