diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtil.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtil.java
index 42a3b7a..0052d74 100644
--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtil.java
+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtil.java
@@ -104 +104 @@
-                    descriptor.setProperty(i++, null);
+                    descriptor.setProperty(i, null);
diff --git a/dubbo-common/src/test/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java b/dubbo-common/src/test/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java
index d033138..99557e5 100644
--- a/dubbo-common/src/test/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java
+++ b/dubbo-common/src/test/java/com/alibaba/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java
@@ -81,0 +82,13 @@
+        Integer[] integers = new Integer[]{1, 2, 3, 4, null, null, null};
+        descriptor = JavaBeanSerializeUtil.serialize(integers, JavaBeanAccessor.METHOD);
+        Assert.assertTrue(descriptor.isArrayType());
+        Assert.assertEquals(Integer.class.getName(), descriptor.getClassName());
+        Assert.assertEquals(integers.length, descriptor.propertySize());
+        for(int i = 0; i < integers.length; i++) {
+            if (integers[i] == null) {
+                Assert.assertTrue(integers[i] == descriptor.getProperty(i));
+            } else {
+                Assert.assertEquals(integers[i], ((JavaBeanDescriptor)descriptor.getProperty(i)).getPrimitiveProperty());
+            }
+        }
+

