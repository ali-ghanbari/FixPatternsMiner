diff --git a/languagetool-core/src/main/java/org/languagetool/Language.java b/languagetool-core/src/main/java/org/languagetool/Language.java
index 68f14d3..17342e5 100644
--- a/languagetool-core/src/main/java/org/languagetool/Language.java
+++ b/languagetool-core/src/main/java/org/languagetool/Language.java
@@ -242 +242 @@
-   * Get the location of the rule file(s).
+   * Get the location of the rule file(s) in a form like {@code /org/languagetool/rules/de/grammar.xml}.
diff --git a/languagetool-core/src/test/java/org/languagetool/rules/patterns/PatternRuleTest.java b/languagetool-core/src/test/java/org/languagetool/rules/patterns/PatternRuleTest.java
index 350884f..313857a 100644
--- a/languagetool-core/src/test/java/org/languagetool/rules/patterns/PatternRuleTest.java
+++ b/languagetool-core/src/test/java/org/languagetool/rules/patterns/PatternRuleTest.java
@@ -20,0 +21 @@
+import java.io.File;
@@ -91 +92,7 @@
-    return !dataBroker.ruleFileExists(getGrammarFileName(lang)) && Language.REAL_LANGUAGES.length > 1;
+    boolean hasGrammarFiles = false;
+    for (String grammarFile : getGrammarFileNames(lang)) {
+      if (dataBroker.ruleFileExists(grammarFile)) {
+        hasGrammarFiles = true;
+      }
+    }
+    return !hasGrammarFiles && Language.REAL_LANGUAGES.length > 1;
@@ -94 +101 @@
-  private String getGrammarFileName(Language lang) {
+  private List<String> getGrammarFileNames(Language lang) {
@@ -96,8 +103,13 @@
-    final String fileName;
-    if (shortNameWithVariant.contains("-x-")) {
-      fileName = lang.getShortName() + "/" + JLanguageTool.PATTERN_FILE;
-    } else if (shortNameWithVariant.contains("-") && !shortNameWithVariant.equals("xx-XX")
-            && !shortNameWithVariant.endsWith("-ANY") && Language.REAL_LANGUAGES.length > 1) {
-      fileName = lang.getShortName() + "/" + shortNameWithVariant + "/" + JLanguageTool.PATTERN_FILE;
-    } else {
-      fileName = lang.getShortName() + "/" + JLanguageTool.PATTERN_FILE;
+    final List<String> fileNames = new ArrayList<>();
+    for (String ruleFile : lang.getRuleFileNames()) {
+      final String nameOnly = new File(ruleFile).getName();
+      final String fileName;
+      if (shortNameWithVariant.contains("-x-")) {
+        fileName = lang.getShortName() + "/" + nameOnly;
+      } else if (shortNameWithVariant.contains("-") && !shortNameWithVariant.equals("xx-XX")
+              && !shortNameWithVariant.endsWith("-ANY") && Language.REAL_LANGUAGES.length > 1) {
+        fileName = lang.getShortName() + "/" + shortNameWithVariant + "/" + nameOnly;
+      } else {
+        fileName = lang.getShortName() + "/" + nameOnly;
+      }
+      fileNames.add(fileName);
@@ -105 +117 @@
-    return fileName;
+    return fileNames;
@@ -143,13 +155,15 @@
-    final String grammarFile = getGrammarFileName(lang);
-    System.out.println("Running XML validation for " + grammarFile + "...");
-    final String rulesDir = JLanguageTool.getDataBroker().getRulesDir();
-    final String ruleFilePath = rulesDir + "/" + grammarFile;
-    final InputStream xmlStream = this.getClass().getResourceAsStream(ruleFilePath);
-    if (xmlStream == null) {
-      System.out.println("No rule file found at " + ruleFilePath);
-      return;
-    }
-    try {
-      validator.validateWithXmlSchema(ruleFilePath, rulesDir + "/rules.xsd");
-    } finally {
-      xmlStream.close();
+    final List<String> grammarFiles = getGrammarFileNames(lang);
+    for (String grammarFile : grammarFiles) {
+      System.out.println("Running XML validation for " + grammarFile + "...");
+      final String rulesDir = JLanguageTool.getDataBroker().getRulesDir();
+      final String ruleFilePath = rulesDir + "/" + grammarFile;
+      final InputStream xmlStream = this.getClass().getResourceAsStream(ruleFilePath);
+      if (xmlStream == null) {
+        System.out.println("No rule file found at " + ruleFilePath + " in classpath");
+        continue;
+      }
+      try {
+        validator.validateWithXmlSchema(ruleFilePath, rulesDir + "/rules.xsd");
+      } finally {
+        xmlStream.close();
+      }

