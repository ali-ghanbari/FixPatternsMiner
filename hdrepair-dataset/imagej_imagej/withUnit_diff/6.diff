diff --git a/core/updater/core/src/main/java/imagej/updater/core/FileObject.java b/core/updater/core/src/main/java/imagej/updater/core/FileObject.java
index 1a18384..8bbfa5b 100644
--- a/core/updater/core/src/main/java/imagej/updater/core/FileObject.java
+++ b/core/updater/core/src/main/java/imagej/updater/core/FileObject.java
@@ -323 +323 @@
-		dependencies.remove(other);
+		dependencies.remove(getFilename(other, true));
diff --git a/core/updater/core/src/test/java/imagej/updater/core/UpdaterTest.java b/core/updater/core/src/test/java/imagej/updater/core/UpdaterTest.java
index bca57d7..5b4ec8b 100644
--- a/core/updater/core/src/test/java/imagej/updater/core/UpdaterTest.java
+++ b/core/updater/core/src/test/java/imagej/updater/core/UpdaterTest.java
@@ -1078,0 +1079,19 @@
+	@Test
+	public void removeDependencies() throws Exception {
+		initializeUpdateSite("jars/plugin.jar", "jars/dependency.jar");
+		writeJar("jars/not-uploaded-0.11.jar");
+		FilesCollection files = readDb(true, true);
+		FileObject plugin = files.get("jars/plugin.jar");
+		plugin.addDependency(files, files.get("jars/dependency.jar"));
+		plugin.addDependency(files, files.get("jars/not-uploaded.jar"));
+		List<Conflict> conflicts = new ArrayList<Conflict>();
+		for (Conflict conflict : new Conflicts(files).getConflicts(true))
+			conflicts.add(conflict);
+		assertCount(1, conflicts);
+		Conflict conflict = conflicts.get(0);
+		assertEquals(1, conflict.getResolutions().length);
+		assertTrue(conflict.getResolutions()[0].getDescription().startsWith("Break"));
+		conflict.getResolutions()[0].resolve();
+		assertCount(0, new Conflicts(files).getConflicts(true));
+	}
+

