diff --git a/bundles/binding/org.openhab.binding.http.test/src/test/java/org/openhab/binding/http/internal/HttpGenericBindingProviderTest.java b/bundles/binding/org.openhab.binding.http.test/src/test/java/org/openhab/binding/http/internal/HttpGenericBindingProviderTest.java
index 326678f..04466a9 100644
--- a/bundles/binding/org.openhab.binding.http.test/src/test/java/org/openhab/binding/http/internal/HttpGenericBindingProviderTest.java
+++ b/bundles/binding/org.openhab.binding.http.test/src/test/java/org/openhab/binding/http/internal/HttpGenericBindingProviderTest.java
@@ -150,0 +151,37 @@
+	@Test
+	public void testParseBindingConfigWithXPATH() throws BindingConfigParseException {
+		
+		String bindingConfig = "<[http://www.wetter-vista.de/api/xml.php?q=Berlin:60000:XPATH(/wettervorhersage/tag[1]/tmax)]";
+		
+		Item testItem = new GenericItem("TEST") {
+			
+			public List<Class<? extends State>> getAcceptedDataTypes() {
+				List<Class<? extends State>> list = new ArrayList<Class<? extends State>>();
+				list.add(DecimalType.class);
+				return list;
+			}
+			
+			public List<Class<? extends Command>> getAcceptedCommandTypes() {
+				List<Class<? extends Command>> list = new ArrayList<Class<? extends Command>>();
+				list.add(DecimalType.class);
+				return list;
+			}
+
+			@Override
+			public State getStateAs(Class<? extends State> typeClass) {
+				return null;
+			}
+			
+		};
+		
+		// method under test
+		HttpBindingConfig config = provider.parseBindingConfig(testItem, bindingConfig);
+		
+		// asserts
+		Assert.assertEquals(true, config.containsKey(HttpGenericBindingProvider.IN_BINDING_KEY));
+		Assert.assertEquals(null, config.get(HttpGenericBindingProvider.IN_BINDING_KEY).httpMethod);
+		Assert.assertEquals("http://www.wetter-vista.de/api/xml.php?q=Berlin", config.get(HttpGenericBindingProvider.IN_BINDING_KEY).url);
+		Assert.assertEquals(60000, config.get(HttpGenericBindingProvider.IN_BINDING_KEY).refreshInterval);
+		Assert.assertEquals("XPATH(/wettervorhersage/tag[1]/tmax)", config.get(HttpGenericBindingProvider.IN_BINDING_KEY).transformation);
+	}
+	
diff --git a/bundles/binding/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/HttpGenericBindingProvider.java b/bundles/binding/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/HttpGenericBindingProvider.java
index b532887..2c12e5a 100644
--- a/bundles/binding/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/HttpGenericBindingProvider.java
+++ b/bundles/binding/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/HttpGenericBindingProvider.java
@@ -79 +79 @@
-	private static final Pattern BASE_CONFIG_PATTERN = Pattern.compile("(<|>)\\[(.*?)\\]");
+	private static final Pattern BASE_CONFIG_PATTERN = Pattern.compile("(<|>)\\[(.*?)\\](\\s|$)");

