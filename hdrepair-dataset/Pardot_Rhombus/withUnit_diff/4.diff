diff --git a/src/main/java/com/pardot/analyticsservice/cassandra/cobject/CObjectCQLGenerator.java b/src/main/java/com/pardot/analyticsservice/cassandra/cobject/CObjectCQLGenerator.java
index 0a021eb..2588526 100644
--- a/src/main/java/com/pardot/analyticsservice/cassandra/cobject/CObjectCQLGenerator.java
+++ b/src/main/java/com/pardot/analyticsservice/cassandra/cobject/CObjectCQLGenerator.java
@@ -417 +417 @@
-			index.getShardingStrategy().getShardKey(uuid)+"",
+			index.getShardingStrategy().getShardKey(uuid),
diff --git a/src/test/java/com/pardot/analyticsservice/CObjectCQLGeneratorTest.java b/src/test/java/com/pardot/analyticsservice/CObjectCQLGeneratorTest.java
index 185537f..210bd8f 100644
--- a/src/test/java/com/pardot/analyticsservice/CObjectCQLGeneratorTest.java
+++ b/src/test/java/com/pardot/analyticsservice/CObjectCQLGeneratorTest.java
@@ -165,0 +166,21 @@
+		public void testMakeCQLforDelete() throws CObjectParseException,CObjectParseException, CQLGenerationException, IOException {
+			String json = TestHelpers.readFileToString(this.getClass(), "CObjectCQLGeneratorTestData.js");
+			CDefinition def = CDefinition.fromJsonString(json);
+			Map<String, String> data = TestHelpers.getTestObject(0);
+			UUID uuid = UUID.fromString("ada375b0-a2d9-11e2-99a3-3f36d3955e43");
+			CQLStatementIterator result = Subject.makeCQLforDelete(def,uuid,data,111);
+
+			String expected;
+
+			expected = "DELETE FROM testtype USING TIMESTAMP 111 WHERE id = ada375b0-a2d9-11e2-99a3-3f36d3955e43;";
+			assertEquals(expected,result.next());
+			expected = "DELETE FROM testtype__instance_type USING TIMESTAMP 111 WHERE id = ada375b0-a2d9-11e2-99a3-3f36d3955e43 AND shardid = 160 instance = 222222 AND type = 5;";
+			assertEquals(expected,result.next());
+			expected = "DELETE FROM testtype__foreignid_instance_type USING TIMESTAMP 111 WHERE id = ada375b0-a2d9-11e2-99a3-3f36d3955e43 AND shardid = 160 foreignid = 777 AND instance = 222222 AND type = 5;";
+			assertEquals(expected,result.next());
+			expected = "DELETE FROM testtype__foreignid USING TIMESTAMP 111 WHERE id = ada375b0-a2d9-11e2-99a3-3f36d3955e43 AND shardid = 1 foreignid = 777;";
+			assertEquals(expected,result.next());
+			assertTrue(!result.hasNext());
+
+		}
+
@@ -220,0 +242,5 @@
+	public void testMakeCQLforDelete() throws CQLGenerationException, CObjectParseException, IOException {
+		Subject s = new Subject();
+		s.testMakeCQLforDelete();
+	}
+

