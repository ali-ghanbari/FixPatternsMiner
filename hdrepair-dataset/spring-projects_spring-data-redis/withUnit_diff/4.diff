diff --git a/src/main/java/org/springframework/data/redis/listener/adapter/MessageListenerAdapter.java b/src/main/java/org/springframework/data/redis/listener/adapter/MessageListenerAdapter.java
index a1d404f..dfdb61c 100644
--- a/src/main/java/org/springframework/data/redis/listener/adapter/MessageListenerAdapter.java
+++ b/src/main/java/org/springframework/data/redis/listener/adapter/MessageListenerAdapter.java
@@ -309,0 +310 @@
+					return;
diff --git a/src/test/java/org/springframework/data/redis/listener/adapter/MessageListenerTest.java b/src/test/java/org/springframework/data/redis/listener/adapter/MessageListenerTest.java
index 2fc9bf2..fc41e15 100644
--- a/src/test/java/org/springframework/data/redis/listener/adapter/MessageListenerTest.java
+++ b/src/test/java/org/springframework/data/redis/listener/adapter/MessageListenerTest.java
@@ -45,2 +45 @@
-	private static final Message STRING_MSG = new DefaultMessage(RAW_CHANNEL,
-			RAW_PAYLOAD);
+	private static final Message STRING_MSG = new DefaultMessage(RAW_CHANNEL, RAW_PAYLOAD);
@@ -74,4 +73,2 @@
-	public void testThatTheDefaultMessageHandlingMethodNameIsTheConstantDefault()
-			throws Exception {
-		assertEquals(MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD,
-				adapter.getDefaultListenerMethod());
+	public void testThatTheDefaultMessageHandlingMethodNameIsTheConstantDefault() throws Exception {
+		assertEquals(MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD, adapter.getDefaultListenerMethod());
@@ -80,3 +76,0 @@
-	@Test(expected = IllegalStateException.class)
-	// TODO: revisit the exception/method discovery during invocation
-	// TODO: potentially move the discovery early on
@@ -87,2 +80,0 @@
-
-			
@@ -127,0 +120,28 @@
+
+	/**
+	 * @see DATAREDIS-92
+	 */
+	@Test
+	public void triggersListenerImplementingInterfaceCorrectly() {
+
+		SampleListener listener = new SampleListener();
+
+		MessageListener listenerAdapter = new MessageListenerAdapter(listener) {
+			@Override
+			public void setDefaultListenerMethod(String defaultListenerMethod) {
+				throw new RuntimeException("Boom!");
+			}
+		};
+
+		listenerAdapter.onMessage(STRING_MSG, RAW_CHANNEL);
+		assertEquals(1, listener.count);
+	}
+
+	class SampleListener implements MessageListener {
+
+		int count;
+
+		public void onMessage(Message message, byte[] pattern) {
+			count++;
+		}
+	}

