diff --git a/src/main/java/org/springframework/data/redis/connection/lettuce/LettuceConnection.java b/src/main/java/org/springframework/data/redis/connection/lettuce/LettuceConnection.java
index 3262190..163ec7e 100644
--- a/src/main/java/org/springframework/data/redis/connection/lettuce/LettuceConnection.java
+++ b/src/main/java/org/springframework/data/redis/connection/lettuce/LettuceConnection.java
@@ -529 +528,0 @@
-		openPipeline();
diff --git a/src/test/java/org/springframework/data/redis/cache/RedisCacheTest.java b/src/test/java/org/springframework/data/redis/cache/RedisCacheTest.java
index f531b01..a486ab9 100644
--- a/src/test/java/org/springframework/data/redis/cache/RedisCacheTest.java
+++ b/src/test/java/org/springframework/data/redis/cache/RedisCacheTest.java
@@ -25,0 +26 @@
+import java.util.concurrent.atomic.AtomicBoolean;
@@ -33,0 +35 @@
+import org.springframework.cache.Cache.ValueWrapper;
@@ -35,0 +38 @@
+import org.springframework.data.redis.core.BoundZSetOperations;
@@ -61 +64 @@
-	
+
@@ -63 +66,2 @@
-		return new RedisCache(CACHE_NAME, CACHE_NAME.concat(":").getBytes(), nativeCache, TimeUnit.MINUTES.toSeconds(5));
+		return new RedisCache(CACHE_NAME, CACHE_NAME.concat(":").getBytes(), nativeCache,
+				TimeUnit.MINUTES.toSeconds(10));
@@ -66 +70 @@
-	
+
@@ -83 +87 @@
-	
+
@@ -95,0 +100,8 @@
+		final String prefix = CACHE_NAME.concat(":");
+		final BoundZSetOperations setOps = template.boundZSetOps(CACHE_NAME);
+
+		final AtomicBoolean failed = new AtomicBoolean(true);
+
+		//		System.out.println("Cache keys" + setOps.range(0, -1).toString());
+		//		System.out.println("Set keys" + template.keys(prefix));
+
@@ -97,0 +110,3 @@
+
+		//		System.out.println("Cache keys" + setOps.range(0, -1).toString());
+		//		System.out.println("Set keys" + template.keys(prefix));
@@ -104,0 +120,4 @@
+				failed.set(key1.equals(cache.get(value1)));
+				//				System.out.println("Cache keys" + setOps.range(0, -1).toString());
+				//				System.out.println("Set keys" + template.keys(prefix));
+
@@ -107,0 +127,3 @@
+		//		System.out.println("Cache keys" + setOps.range(0, -1).toString());
+		//		System.out.println("Set keys" + template.keys(prefix));
+
@@ -109,0 +132,7 @@
+
+		//		System.out.println("Cache keys" + setOps.range(0, -1).toString());
+		//		System.out.println("Set keys" + template.keys(prefix));
+
+		if (failed.get()) {
+			throw new Exception("Concurrent access failed");
+		}
@@ -119 +148,3 @@
-		assertEquals(key1, cache.get(value1).get());
+		ValueWrapper valueWrapper = cache.get(value1);
+		assertNotNull(valueWrapper);
+		assertEquals(key1, valueWrapper.get());
@@ -121 +152 @@
-	
+

