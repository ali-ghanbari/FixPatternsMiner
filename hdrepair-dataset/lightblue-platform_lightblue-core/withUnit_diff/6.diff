diff --git a/crud/src/main/java/com/redhat/lightblue/eval/FieldProjector.java b/crud/src/main/java/com/redhat/lightblue/eval/FieldProjector.java
index f6b2307..56459a3 100644
--- a/crud/src/main/java/com/redhat/lightblue/eval/FieldProjector.java
+++ b/crud/src/main/java/com/redhat/lightblue/eval/FieldProjector.java
@@ -50 +50 @@
-            } else if (p.equals(field)) {
+            } else if (p.matches(field)) {
diff --git a/crud/src/test/java/com/redhat/lightblue/eval/ProjectorTest.java b/crud/src/test/java/com/redhat/lightblue/eval/ProjectorTest.java
index d41c5dc..50f62f3 100644
--- a/crud/src/test/java/com/redhat/lightblue/eval/ProjectorTest.java
+++ b/crud/src/test/java/com/redhat/lightblue/eval/ProjectorTest.java
@@ -127,0 +128,19 @@
+    @Test
+    public void fieldProjectorTest_includeArrayExcludeFields() throws Exception {
+        Projection p = EvalTestContext.projectionFromJson("{'field':'field7','include':true,'match':{'field':'elemf3','op':'>','rvalue':4},'project':[{'field':'*'},{'field':'elemf1','include':false}]}");
+        Projector projector = Projector.getInstance(p, md);
+        JsonDoc pdoc = projector.project(jsonDoc, JSON_NODE_FACTORY);
+        Assert.assertNull(pdoc.get(new Path("field1")));
+        Assert.assertNull(pdoc.get(new Path("field2")));
+        Assert.assertNull(pdoc.get(new Path("field3")));
+        Assert.assertNull(pdoc.get(new Path("field4")));
+        Assert.assertNull(pdoc.get(new Path("field5")));
+        Assert.assertNull(pdoc.get(new Path("field6")));
+        Assert.assertEquals(2, pdoc.get(new Path("field7")).size());
+        Assert.assertEquals(5, pdoc.get(new Path("field7.0.elemf3")).asInt());
+        Assert.assertEquals(6, pdoc.get(new Path("field7.1.elemf3")).asInt());
+        Assert.assertNull(pdoc.get(new Path("field7.0.elemf1")));
+        Assert.assertEquals("elvalue2_2", pdoc.get(new Path("field7.0.elemf2")).asText());
+        Assert.assertNull(pdoc.get(new Path("field7.1.elemf1")));
+        Assert.assertEquals("elvalue3_2", pdoc.get(new Path("field7.1.elemf2")).asText());
+    }

