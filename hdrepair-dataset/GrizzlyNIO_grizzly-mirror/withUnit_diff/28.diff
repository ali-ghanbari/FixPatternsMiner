diff --git a/modules/http/src/main/java/org/glassfish/grizzly/http/util/CookieParserUtils.java b/modules/http/src/main/java/org/glassfish/grizzly/http/util/CookieParserUtils.java
index c485774..61ef585 100644
--- a/modules/http/src/main/java/org/glassfish/grizzly/http/util/CookieParserUtils.java
+++ b/modules/http/src/main/java/org/glassfish/grizzly/http/util/CookieParserUtils.java
@@ -983 +983 @@
-                        cookie.setMaxAge((int) (date.getTime() - System.currentTimeMillis()));
+                        cookie.setMaxAge((int) (date.getTime() - System.currentTimeMillis()) / 1000);
diff --git a/modules/http/src/test/java/org/glassfish/grizzly/http/core/CookiesTest.java b/modules/http/src/test/java/org/glassfish/grizzly/http/core/CookiesTest.java
index c6d07cd..79e6010 100644
--- a/modules/http/src/test/java/org/glassfish/grizzly/http/core/CookiesTest.java
+++ b/modules/http/src/test/java/org/glassfish/grizzly/http/core/CookiesTest.java
@@ -49 +48,0 @@
-import java.text.SimpleDateFormat;
@@ -61,7 +60,44 @@
-    private static Pair[] TEST_CASE_CLIENT_COOKIE =
-            new Pair[] {
-        new Pair<String,Checker[]>("CUSTOMER=WILE_E_COYOTE", new Checker[]{
-            new Checker(0, "CUSTOMER", CheckValue.NAME),
-            new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(0, 0, CheckValue.VERSION)
-        }),
+    private static Pair[] createClientTestCaseCookie() {
+        return new Pair[]{
+                    new Pair<String, Checker[]>("CUSTOMER=WILE_E_COYOTE", new Checker[]{
+                        new Checker(0, "CUSTOMER", CheckValue.NAME),
+                        new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(0, 0, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("CUSTOMER=WILE_E_COYOTE; PART_NUMBER=ROCKET_LAUNCHER_0001", new Checker[]{
+                        new Checker(0, "CUSTOMER", CheckValue.NAME),
+                        new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(0, 0, CheckValue.VERSION),
+                        new Checker(1, "PART_NUMBER", CheckValue.NAME),
+                        new Checker(1, "ROCKET_LAUNCHER_0001", CheckValue.VALUE),
+                        new Checker(1, 0, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("$Version=\"1\"; Customer=\"WILE_E_COYOTE\"; $Path=\"/acme\"", new Checker[]{
+                        new Checker(0, "Customer", CheckValue.NAME),
+                        new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(0, "/acme", CheckValue.PATH),
+                        new Checker(0, 1, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("$Version=\"1\"; Customer=\"WILE_E_COYOTE\"; $Path=\"/acme\"; $Domain=\"mydomain.com\"; Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"", new Checker[]{
+                        new Checker(0, "Customer", CheckValue.NAME),
+                        new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(0, "/acme", CheckValue.PATH),
+                        new Checker(0, "mydomain.com", CheckValue.DOMAIN),
+                        new Checker(0, 1, CheckValue.VERSION),
+                        new Checker(1, "Part_Number", CheckValue.NAME),
+                        new Checker(1, "Rocket_Launcher_0001", CheckValue.VALUE),
+                        new Checker(1, "/acme", CheckValue.PATH),
+                        new Checker(1, 1, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("$Version=\"1\"; Part_Number=\"Riding_Rocket_0023\"; $Path=\"/acme/ammo\"; Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"", new Checker[]{
+                        new Checker(0, "Part_Number", CheckValue.NAME),
+                        new Checker(0, "Riding_Rocket_0023", CheckValue.VALUE),
+                        new Checker(0, "/acme/ammo", CheckValue.PATH),
+                        new Checker(0, 1, CheckValue.VERSION),
+                        new Checker(1, "Part_Number", CheckValue.NAME),
+                        new Checker(1, "Rocket_Launcher_0001", CheckValue.VALUE),
+                        new Checker(1, "/acme", CheckValue.PATH),
+                        new Checker(1, 1, CheckValue.VERSION)
+                    })
+                };
+    }
@@ -69,41 +104,0 @@
-        new Pair<String,Checker[]>("CUSTOMER=WILE_E_COYOTE; PART_NUMBER=ROCKET_LAUNCHER_0001", new Checker[]{
-            new Checker(0, "CUSTOMER", CheckValue.NAME),
-            new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(0, 0, CheckValue.VERSION),
-            new Checker(1, "PART_NUMBER", CheckValue.NAME),
-            new Checker(1, "ROCKET_LAUNCHER_0001", CheckValue.VALUE),
-            new Checker(1, 0, CheckValue.VERSION)
-        }),
-
-        new Pair<String,Checker[]>("$Version=\"1\"; Customer=\"WILE_E_COYOTE\"; $Path=\"/acme\"", new Checker[]{
-            new Checker(0, "Customer", CheckValue.NAME),
-            new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(0, "/acme", CheckValue.PATH),
-            new Checker(0, 1, CheckValue.VERSION)
-        }),
-
-        new Pair<String,Checker[]>("$Version=\"1\"; Customer=\"WILE_E_COYOTE\"; $Path=\"/acme\"; $Domain=\"mydomain.com\"; Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"", new Checker[]{
-            new Checker(0, "Customer", CheckValue.NAME),
-            new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(0, "/acme", CheckValue.PATH),
-            new Checker(0, "mydomain.com", CheckValue.DOMAIN),
-            new Checker(0, 1, CheckValue.VERSION),
-            new Checker(1, "Part_Number", CheckValue.NAME),
-            new Checker(1, "Rocket_Launcher_0001", CheckValue.VALUE),
-            new Checker(1, "/acme", CheckValue.PATH),
-            new Checker(1, 1, CheckValue.VERSION)
-        }),
-
-        new Pair<String,Checker[]>("$Version=\"1\"; Part_Number=\"Riding_Rocket_0023\"; $Path=\"/acme/ammo\"; Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"", new Checker[]{
-            new Checker(0, "Part_Number", CheckValue.NAME),
-            new Checker(0, "Riding_Rocket_0023", CheckValue.VALUE),
-            new Checker(0, "/acme/ammo", CheckValue.PATH),
-            new Checker(0, 1, CheckValue.VERSION),
-            new Checker(1, "Part_Number", CheckValue.NAME),
-            new Checker(1, "Rocket_Launcher_0001", CheckValue.VALUE),
-            new Checker(1, "/acme", CheckValue.PATH),
-            new Checker(1, 1, CheckValue.VERSION)
-        })
-    };
-
-    private static final String OLD_COOKIE_PATTERN = "EEE, dd-MMM-yyyy HH:mm:ss z";
@@ -112,2 +107 @@
-    private static final String expiresStr =
-            new SimpleDateFormat(OLD_COOKIE_PATTERN).format(new Date(IN_HOUR));
+    private static final String expiresStr = CookieUtils.OLD_COOKIE_FORMAT.get().format(new Date(IN_HOUR));
@@ -115,27 +109,25 @@
-    private static Pair[] TEST_CASE_SERVER_COOKIE =
-            new Pair[] {
-        new Pair<String,Checker[]>("CUSTOMER=WILE_E_COYOTE; path=/; expires=" + expiresStr, new Checker[]{
-            new Checker(0, "CUSTOMER", CheckValue.NAME),
-            new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(0, expire2MaxAge(expiresStr), CheckValue.MAX_AGE),
-            new Checker(0, 0, CheckValue.VERSION)
-        }),
-
-        new Pair<String,Checker[]>("Part_Number=\"Rocket_Launcher_0001\"; Version=\"1\"; Path=\"/acme\"", new Checker[]{
-            new Checker(0, "Part_Number", CheckValue.NAME),
-            new Checker(0, "Rocket_Launcher_0001", CheckValue.VALUE),
-            new Checker(0, "/acme", CheckValue.PATH),
-            new Checker(0, 1, CheckValue.VERSION)
-        }),
-
-        new Pair<String,Checker[]>("Part_Number=\"Rocket_Launcher_0001\"; Version=\"1\"; Path=\"/acme\", Customer=\"WILE_E_COYOTE\"; Version=\"1\"; Path=\"/acme/path\"", new Checker[]{
-            new Checker(0, "Part_Number", CheckValue.NAME),
-            new Checker(0, "Rocket_Launcher_0001", CheckValue.VALUE),
-            new Checker(0, "/acme", CheckValue.PATH),
-            new Checker(0, 1, CheckValue.VERSION),
-            new Checker(1, "Customer", CheckValue.NAME),
-            new Checker(1, "WILE_E_COYOTE", CheckValue.VALUE),
-            new Checker(1, "/acme/path", CheckValue.PATH),
-            new Checker(1, 1, CheckValue.VERSION)
-        }),
-    };
+    private static Pair[] createServerTestCaseCookie() {
+        return new Pair[]{
+                    new Pair<String, Checker[]>("CUSTOMER=WILE_E_COYOTE; path=/; expires=" + expiresStr, new Checker[]{
+                        new Checker(0, "CUSTOMER", CheckValue.NAME),
+                        new Checker(0, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(0, expire2MaxAge(expiresStr), CheckValue.MAX_AGE),
+                        new Checker(0, 0, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("Part_Number=\"Rocket_Launcher_0001\"; Version=\"1\"; Path=\"/acme\"", new Checker[]{
+                        new Checker(0, "Part_Number", CheckValue.NAME),
+                        new Checker(0, "Rocket_Launcher_0001", CheckValue.VALUE),
+                        new Checker(0, "/acme", CheckValue.PATH),
+                        new Checker(0, 1, CheckValue.VERSION)
+                    }),
+                    new Pair<String, Checker[]>("Part_Number=\"Rocket_Launcher_0001\"; Version=\"1\"; Path=\"/acme\", Customer=\"WILE_E_COYOTE\"; Version=\"1\"; Path=\"/acme/path\"", new Checker[]{
+                        new Checker(0, "Part_Number", CheckValue.NAME),
+                        new Checker(0, "Rocket_Launcher_0001", CheckValue.VALUE),
+                        new Checker(0, "/acme", CheckValue.PATH),
+                        new Checker(0, 1, CheckValue.VERSION),
+                        new Checker(1, "Customer", CheckValue.NAME),
+                        new Checker(1, "WILE_E_COYOTE", CheckValue.VALUE),
+                        new Checker(1, "/acme/path", CheckValue.PATH),
+                        new Checker(1, 1, CheckValue.VERSION)
+                    }),};
+    }
@@ -145 +137 @@
-        for (Pair<String, Checker[]> testCase : TEST_CASE_CLIENT_COOKIE) {
+        for (Pair<String, Checker[]> testCase : createClientTestCaseCookie()) {
@@ -183 +175 @@
-        for (Pair<String, Checker[]> testCase : TEST_CASE_SERVER_COOKIE) {
+        for (Pair<String, Checker[]> testCase : createServerTestCaseCookie()) {
@@ -316,2 +308,2 @@
-                    // In the tests we allow max-age to have 15sec precision.
-                return Math.abs((Integer) pattern - cookie.getMaxAge()) < 15000;
+                // In the tests we allow max-age to have 15sec precision.
+                return Math.abs((Integer) pattern - cookie.getMaxAge()) < 15;
@@ -330 +322 @@
-            return (int) (CookieUtils.OLD_COOKIE_FORMAT.get().parse(expire).getTime() - System.currentTimeMillis());
+            return (int) (CookieUtils.OLD_COOKIE_FORMAT.get().parse(expire).getTime() - System.currentTimeMillis() / 1000);

