diff --git a/sch-pek-internal-api/pom.xml b/sch-pek-internal-api/pom.xml
index 948a1f4..8ebfbbd 100644
--- a/sch-pek-internal-api/pom.xml
+++ b/sch-pek-internal-api/pom.xml
@@ -78,0 +79,5 @@
+            <artifactId>resteasy-jaxrs</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
diff --git a/sch-pek-internal-api/src/main/java/hu/sch/api/filter/RequestSignature.java b/sch-pek-internal-api/src/main/java/hu/sch/api/filter/RequestSignature.java
index 8313cfe..8b269f3 100644
--- a/sch-pek-internal-api/src/main/java/hu/sch/api/filter/RequestSignature.java
+++ b/sch-pek-internal-api/src/main/java/hu/sch/api/filter/RequestSignature.java
@@ -38 +38 @@
-        this.body = body;
+        this.body = body != null ? body : new byte[0];
diff --git a/sch-pek-internal-api/src/test/java/hu/sch/api/filter/RequestSignatureTest.java b/sch-pek-internal-api/src/test/java/hu/sch/api/filter/RequestSignatureTest.java
index 89f22d8..d57b788 100644
--- a/sch-pek-internal-api/src/test/java/hu/sch/api/filter/RequestSignatureTest.java
+++ b/sch-pek-internal-api/src/test/java/hu/sch/api/filter/RequestSignatureTest.java
@@ -2,0 +3 @@
+import java.io.ByteArrayOutputStream;
@@ -81 +81,0 @@
-        // sig: /foo1399822115secret
@@ -90,7 +90,2 @@
-        StringBuilder sb = new StringBuilder(url);
-        if (body != null) {
-            sb.append(new String(body));
-        }
-        sb.append(System.currentTimeMillis() / 1000L).append(SECRET);
-
-        final String algo = "HmacSHA1";
+        // TODO: it would be nice if the signature calculation's implementation does not leaked out here
+        // maybe we need to introduce a new class for this?
@@ -97,0 +93,11 @@
+            ByteArrayOutputStream s = new ByteArrayOutputStream();
+            s.write(url.getBytes(StandardCharsets.UTF_8));
+            if (body != null) {
+                s.write(body.getBytes(StandardCharsets.UTF_8));
+            } else {
+                s.write(new byte[0]);
+            }
+            s.write(String.valueOf(System.currentTimeMillis() / 1000L).getBytes(StandardCharsets.UTF_8));
+            s.write(SECRET.getBytes(StandardCharsets.UTF_8));
+
+            final String algo = "HmacSHA1";
@@ -101 +107 @@
-            return Hex.encodeHexString(hmac.doFinal(sb.toString().getBytes(StandardCharsets.UTF_8)));
+            return Hex.encodeHexString(hmac.doFinal(s.toByteArray()));
diff --git a/sch-pek-internal-api/src/test/java/hu/sch/api/user/UsersAvatarTest.java b/sch-pek-internal-api/src/test/java/hu/sch/api/user/UsersAvatarTest.java
index afb3114..43dc31c 100644
--- a/sch-pek-internal-api/src/test/java/hu/sch/api/user/UsersAvatarTest.java
+++ b/sch-pek-internal-api/src/test/java/hu/sch/api/user/UsersAvatarTest.java
@@ -7,5 +6,0 @@
-import hu.sch.util.config.ImageUploadConfig;
-import java.io.File;
-import java.io.IOException;
-import javax.ws.rs.core.MediaType;
-import javax.ws.rs.core.Response;
@@ -18 +12,0 @@
-import org.junit.rules.TemporaryFolder;

