diff --git a/plugins/android/src/org/jetbrains/android/resourceManagers/LocalResourceManager.java b/plugins/android/src/org/jetbrains/android/resourceManagers/LocalResourceManager.java
index a7fcf23..d37f4e5 100644
--- a/plugins/android/src/org/jetbrains/android/resourceManagers/LocalResourceManager.java
+++ b/plugins/android/src/org/jetbrains/android/resourceManagers/LocalResourceManager.java
@@ -106 +106 @@
-    if (resDir == null || !result.add(resDir)) {
+    if (resDir != null && !result.add(resDir)) {
diff --git a/plugins/android/testData/libModule/highlighting.xml b/plugins/android/testData/libModule/highlighting.xml
index 74d7e74..61c7e56 100644
--- a/plugins/android/testData/libModule/highlighting.xml
+++ b/plugins/android/testData/libModule/highlighting.xml
@@ -1,2 +1,2 @@
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android">
-    <Button android:id="@+id/ok"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="wrap_content" android:layout_height="wrap_content">
+    <Button android:id="@+id/ok" android:layout_width="wrap_content" android:layout_height="wrap_content"
diff --git a/plugins/android/testData/libModule/highlighting1.xml b/plugins/android/testData/libModule/highlighting1.xml
new file mode 100644
index 0000000..0bdfd4a
--- /dev/null
+++ b/plugins/android/testData/libModule/highlighting1.xml
@@ -0,0 +1,4 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="wrap_content" android:layout_height="wrap_content">
+    <Button android:id="@+id/ok" android:layout_width="wrap_content" android:layout_height="wrap_content"
+        android:text="<error>@string/myLibResource123</error>" />
+</LinearLayout>
diff --git a/plugins/android/testData/libModule/highlighting2.xml b/plugins/android/testData/libModule/highlighting2.xml
new file mode 100644
index 0000000..58c569a
--- /dev/null
+++ b/plugins/android/testData/libModule/highlighting2.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="p1.p2">
+    <application android:label="@string/myLibResource">
+    </application>
+</manifest>
diff --git a/plugins/android/testSrc/org/jetbrains/android/dom/AndroidLibraryProjectTest.java b/plugins/android/testSrc/org/jetbrains/android/dom/AndroidLibraryProjectTest.java
index 3a5004c..fe4ad85 100644
--- a/plugins/android/testSrc/org/jetbrains/android/dom/AndroidLibraryProjectTest.java
+++ b/plugins/android/testSrc/org/jetbrains/android/dom/AndroidLibraryProjectTest.java
@@ -26,0 +27 @@
+import org.jetbrains.android.inspections.AndroidDomInspection;
@@ -29,0 +31 @@
+import java.io.IOException;
@@ -57,0 +60 @@
+    myFixture.enableInspections(AndroidDomInspection.class);
@@ -103,0 +107 @@
+  }
@@ -104,0 +109 @@
+  private void createInitialStructure() {
@@ -131,0 +137 @@
+    createInitialStructure();
@@ -134,0 +141 @@
+    myFixture.doHighlighting();
@@ -135,0 +143,33 @@
+  }
+
+  public void testHighlighting1() {
+    createInitialStructure();
+    String to = "app/res/layout/" + getTestName(true) + ".xml";
+    VirtualFile file = myFixture.copyFileToProject(BASE_PATH + getTestName(true) + ".xml", to);
+    myFixture.configureFromExistingVirtualFile(file);
+    myFixture.doHighlighting();
+    myFixture.checkHighlighting(true, true, true);
+  }
+
+  public void testHighlighting2() {
+    myFixture.copyFileToProject(BASE_PATH + "LibAndroidManifest.xml", "lib/" + SdkConstants.FN_ANDROID_MANIFEST_XML);
+    final VirtualFile manifestFile =
+      myFixture.copyFileToProject(BASE_PATH + getTestName(true) + ".xml", "app/" + SdkConstants.FN_ANDROID_MANIFEST_XML);
+    myFixture.copyDirectoryToProject(BASE_PATH + "res", "lib/res");
+    myFixture.configureFromExistingVirtualFile(manifestFile);
+    myFixture.doHighlighting();
+    myFixture.checkHighlighting(true, true, true);
+  }
+
+  private void doRename(final VirtualFile file, final String newName) {
+    ApplicationManager.getApplication().runWriteAction(new Runnable() {
+      @Override
+      public void run() {
+        try {
+          file.rename(myFixture.getProject(), newName);
+        }
+        catch (IOException e) {
+          new RuntimeException(e);
+        }
+      }
+    });
@@ -146,0 +187 @@
+    createInitialStructure();
@@ -169,0 +211 @@
+    createInitialStructure();
@@ -182,0 +225 @@
+    createInitialStructure();
@@ -187,9 +229,0 @@
-    /*for (LineMarkerInfo marker : markers) {
-      PsiReferenceExpression expression = (PsiReferenceExpression)marker.getElement();
-      PsiField field = (PsiField)expression.resolve();
-      GutterIconNavigationHandler handler = marker.getNavigationHandler();
-      assertInstanceOf(handler, AndroidResourcesLineMarkerProvider.MyLazyNavigationHandler.class);
-      Computable<PsiElement[]> targetProvider = ((AndroidResourcesLineMarkerProvider.MyLazyNavigationHandler)handler).getTargetProvider();
-      PsiElement[] targets = targetProvider.compute();
-      checkTargets(field, targets);
-    }*/
@@ -198,0 +233 @@
+    createInitialStructure();
@@ -212,0 +248 @@
+    createInitialStructure();
@@ -287,0 +324 @@
+    createInitialStructure();

