diff --git a/src/edu/washington/escience/myria/CsvTupleWriter.java b/src/edu/washington/escience/myria/CsvTupleWriter.java
index d1ca520..ab98ff5 100644
--- a/src/edu/washington/escience/myria/CsvTupleWriter.java
+++ b/src/edu/washington/escience/myria/CsvTupleWriter.java
@@ -49 +49 @@
-    this(out, CSVFormat.DEFAULT.withRecordSeparator(separator));
+    this(out, CSVFormat.DEFAULT.withDelimiter(separator));
diff --git a/test/edu/washington/escience/myria/CSVTupleWriterTest.java b/test/edu/washington/escience/myria/CSVTupleWriterTest.java
index b7fb040..92fa3bc 100644
--- a/test/edu/washington/escience/myria/CSVTupleWriterTest.java
+++ b/test/edu/washington/escience/myria/CSVTupleWriterTest.java
@@ -37,0 +38,16 @@
+
+  @Test
+  public void testDelimiter() throws IOException {
+    OutputStream out = new ByteArrayOutputStream();
+    // use an uncommon one for testing
+    CsvTupleWriter writer = new CsvTupleWriter('_', out);
+    writer.writeColumnHeaders(ImmutableList.of("foo", "bar"));
+    TupleBuffer tuples = new TupleBuffer(new Schema(ImmutableList.of(Type.STRING_TYPE, Type.INT_TYPE)));
+    tuples.putString(0, "a");
+    tuples.putInt(1, 1);
+    tuples.putString(0, "b");
+    tuples.putInt(1, 2);
+    writer.writeTuples(tuples);
+    writer.done();
+    assertEquals("foo_bar\r\na_1\r\nb_2\r\n", out.toString());
+  }

