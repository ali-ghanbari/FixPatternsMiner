diff --git a/rpm/org.eclipse.linuxtools.rpm.ui.editor.tests/src/org/eclipse/linuxtools/rpm/ui/editor/tests/SpecfileCompletionProcessorTest.java b/rpm/org.eclipse.linuxtools.rpm.ui.editor.tests/src/org/eclipse/linuxtools/rpm/ui/editor/tests/SpecfileCompletionProcessorTest.java
index 26763c4..e3dfd34 100644
--- a/rpm/org.eclipse.linuxtools.rpm.ui.editor.tests/src/org/eclipse/linuxtools/rpm/ui/editor/tests/SpecfileCompletionProcessorTest.java
+++ b/rpm/org.eclipse.linuxtools.rpm.ui.editor.tests/src/org/eclipse/linuxtools/rpm/ui/editor/tests/SpecfileCompletionProcessorTest.java
@@ -35 +35,4 @@
-	
+
+	private static final String NON_ALPHA_DOT = "Requires: java-1.";
+	private static final String NON_ALPHA_PLUS = "Requires: libstdc+";
+
@@ -108,0 +112,48 @@
+
+	@Test
+	public void testBRCompletionNonAlphaDot() throws Exception {
+		setPackageList(new String[]{"java-1.5.0-gcj", "java-1.7.0-openjdk", "java-1.7.0-openjdk-devel", "java-1.7.0-openjdk-javadoc"});
+		SpecfileEditor editor = initEditor(NON_ALPHA_DOT);
+		testProject.refresh();
+		// This is needed so the changes in the testFile are loaded in the
+		// editor
+		editor.doRevertToSaved();
+		SpecfileCompletionProcessor complProcessor = new SpecfileCompletionProcessor(
+				editor);
+		assertNotNull(complProcessor);
+		editor.getSpecfileSourceViewer().setSelectedRange(NON_ALPHA_DOT.length(), 0);
+		ICompletionProposal[] proposals = complProcessor
+				.computeCompletionProposals(editor.getSpecfileSourceViewer(), NON_ALPHA_DOT.length());
+		int sourceComplCount = 0;
+		for (int i = 0; i < proposals.length; i++) {
+			ICompletionProposal proposal = proposals[i];
+			if (proposal.getDisplayString().startsWith("java-1.")) {
+				++sourceComplCount;
+			}
+		}
+		assertEquals(4, sourceComplCount);
+	}
+
+	@Test
+	public void testBRCompletionNonAlphaPlus() throws Exception {
+		setPackageList(new String[]{"libstdc++", "libstdc++-devel"});
+		SpecfileEditor editor = initEditor(NON_ALPHA_PLUS);
+		testProject.refresh();
+		// This is needed so the changes in the testFile are loaded in the
+		// editor
+		editor.doRevertToSaved();
+		SpecfileCompletionProcessor complProcessor = new SpecfileCompletionProcessor(
+				editor);
+		assertNotNull(complProcessor);
+		editor.getSpecfileSourceViewer().setSelectedRange(NON_ALPHA_PLUS.length(), 0);
+		ICompletionProposal[] proposals = complProcessor
+				.computeCompletionProposals(editor.getSpecfileSourceViewer(), NON_ALPHA_PLUS.length());
+		int sourceComplCount = 0;
+		for (int i = 0; i < proposals.length; i++) {
+			ICompletionProposal proposal = proposals[i];
+			if (proposal.getDisplayString().startsWith("libstdc+")) {
+				++sourceComplCount;
+			}
+		}
+		assertEquals(2, sourceComplCount);
+	}
diff --git a/rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/internal/rpm/ui/editor/SpecfileCompletionProcessor.java b/rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/internal/rpm/ui/editor/SpecfileCompletionProcessor.java
index 29d4d79..b1b3b71 100644
--- a/rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/internal/rpm/ui/editor/SpecfileCompletionProcessor.java
+++ b/rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/internal/rpm/ui/editor/SpecfileCompletionProcessor.java
@@ -461 +461 @@
-				if (!Character.isLetterOrDigit(ch) && (ch != '%') && (ch != '_') && (ch != '-') && (ch != '{')) {
+				if (!Character.isLetterOrDigit(ch) && (ch != '%') && (ch != '_') && (ch != '-') && (ch != '{') && (ch != '.') && (ch != '+')) {

