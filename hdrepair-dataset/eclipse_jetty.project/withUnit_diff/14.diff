diff --git a/jetty-spdy/spdy-http-server/src/main/java/org/eclipse/jetty/spdy/server/http/HttpTransportOverSPDY.java b/jetty-spdy/spdy-http-server/src/main/java/org/eclipse/jetty/spdy/server/http/HttpTransportOverSPDY.java
index fc83aef..4705525 100644
--- a/jetty-spdy/spdy-http-server/src/main/java/org/eclipse/jetty/spdy/server/http/HttpTransportOverSPDY.java
+++ b/jetty-spdy/spdy-http-server/src/main/java/org/eclipse/jetty/spdy/server/http/HttpTransportOverSPDY.java
@@ -155 +155 @@
-                    headers.put(name, value);
+                    headers.add(name, value);
diff --git a/jetty-spdy/spdy-http-server/src/test/java/org/eclipse/jetty/spdy/server/http/ServerHTTPSPDYTest.java b/jetty-spdy/spdy-http-server/src/test/java/org/eclipse/jetty/spdy/server/http/ServerHTTPSPDYTest.java
index b9f88fc..1c09046 100644
--- a/jetty-spdy/spdy-http-server/src/test/java/org/eclipse/jetty/spdy/server/http/ServerHTTPSPDYTest.java
+++ b/jetty-spdy/spdy-http-server/src/test/java/org/eclipse/jetty/spdy/server/http/ServerHTTPSPDYTest.java
@@ -34,0 +35 @@
+import javax.servlet.http.Cookie;
@@ -58,0 +60,2 @@
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
@@ -59,0 +63 @@
+import static org.junit.Assert.assertTrue;
@@ -80,3 +84,3 @@
-                Assert.assertEquals("GET", httpRequest.getMethod());
-                Assert.assertEquals(path, target);
-                Assert.assertEquals(path, httpRequest.getRequestURI());
+                assertEquals("GET", httpRequest.getMethod());
+                assertEquals(path, target);
+                assertEquals(path, httpRequest.getRequestURI());
@@ -97 +101 @@
-                Assert.assertTrue(replyInfo.isClose());
+                assertTrue(replyInfo.isClose());
@@ -99 +103 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -103,2 +107,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -121,4 +125,4 @@
-                Assert.assertEquals("GET", httpRequest.getMethod());
-                Assert.assertEquals(path, target);
-                Assert.assertEquals(path, httpRequest.getRequestURI());
-                Assert.assertEquals(query, httpRequest.getQueryString());
+                assertEquals("GET", httpRequest.getMethod());
+                assertEquals(path, target);
+                assertEquals(path, httpRequest.getRequestURI());
+                assertEquals(query, httpRequest.getQueryString());
@@ -136 +140 @@
-                Assert.assertTrue(replyInfo.isClose());
+                assertTrue(replyInfo.isClose());
@@ -138 +142 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -142,2 +146,50 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+    }
+
+    @Test
+    public void testGETWithCookies() throws Exception
+    {
+        final String path = "/foo";
+        final String uri = path;
+        final String cookie1 = "cookie1";
+        final String cookie2 = "cookie2";
+        final String cookie1Value = "cookie 1 value";
+        final String cookie2Value = "cookie 2 value";
+        final CountDownLatch handlerLatch = new CountDownLatch(1);
+        Session session = startClient(version, startHTTPServer(version, new AbstractHandler()
+        {
+            @Override
+            public void handle(String target, Request request, HttpServletRequest httpRequest, HttpServletResponse httpResponse)
+                    throws IOException, ServletException
+            {
+                request.setHandled(true);
+                httpResponse.addCookie(new Cookie(cookie1, cookie1Value));
+                httpResponse.addCookie(new Cookie(cookie2, cookie2Value));
+                assertThat("method is GET", httpRequest.getMethod(), is("GET"));
+                assertThat("target is /foo", target, is(path));
+                assertThat("requestUri is /foo", httpRequest.getRequestURI(), is(path));
+                handlerLatch.countDown();
+            }
+        }), null);
+
+        Fields headers = SPDYTestUtils.createHeaders("localhost", connector.getPort(), version, "GET", uri);
+        final CountDownLatch replyLatch = new CountDownLatch(1);
+        session.syn(new SynInfo(headers, true), new StreamFrameListener.Adapter()
+        {
+            @Override
+            public void onReply(Stream stream, ReplyInfo replyInfo)
+            {
+                assertThat("isClose is true", replyInfo.isClose(), is(true));
+                Fields replyHeaders = replyInfo.getHeaders();
+                assertThat("response code is 200 OK", replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value()
+                        .contains("200"), is(true));
+                assertThat(replyInfo.getHeaders().get("Set-Cookie").values()[0], is(cookie1 + "=\"" + cookie1Value +
+                        "\""));
+                assertThat(replyInfo.getHeaders().get("Set-Cookie").values()[1], is(cookie2 + "=\"" + cookie2Value +
+                        "\""));
+                replyLatch.countDown();
+            }
+        });
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -158,3 +210,3 @@
-                Assert.assertEquals("HEAD", httpRequest.getMethod());
-                Assert.assertEquals(path, target);
-                Assert.assertEquals(path, httpRequest.getRequestURI());
+                assertEquals("HEAD", httpRequest.getMethod());
+                assertEquals(path, target);
+                assertEquals(path, httpRequest.getRequestURI());
@@ -172 +224 @@
-                Assert.assertTrue(replyInfo.isClose());
+                assertTrue(replyInfo.isClose());
@@ -174 +226 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -178,2 +230,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -195,11 +247,11 @@
-                Assert.assertEquals("POST", httpRequest.getMethod());
-                Assert.assertEquals("1", httpRequest.getParameter("a"));
-                Assert.assertEquals("2", httpRequest.getParameter("b"));
-                Assert.assertNotNull(httpRequest.getRemoteHost());
-                Assert.assertNotNull(httpRequest.getRemotePort());
-                Assert.assertNotNull(httpRequest.getRemoteAddr());
-                Assert.assertNotNull(httpRequest.getLocalPort());
-                Assert.assertNotNull(httpRequest.getLocalName());
-                Assert.assertNotNull(httpRequest.getLocalAddr());
-                Assert.assertNotNull(httpRequest.getServerPort());
-                Assert.assertNotNull(httpRequest.getServerName());
+                assertEquals("POST", httpRequest.getMethod());
+                assertEquals("1", httpRequest.getParameter("a"));
+                assertEquals("2", httpRequest.getParameter("b"));
+                assertNotNull(httpRequest.getRemoteHost());
+                assertNotNull(httpRequest.getRemotePort());
+                assertNotNull(httpRequest.getRemoteAddr());
+                assertNotNull(httpRequest.getLocalPort());
+                assertNotNull(httpRequest.getLocalName());
+                assertNotNull(httpRequest.getLocalAddr());
+                assertNotNull(httpRequest.getServerPort());
+                assertNotNull(httpRequest.getServerName());
@@ -215,10 +267,10 @@
-        {
-            @Override
-            public void onReply(Stream stream, ReplyInfo replyInfo)
-            {
-                Assert.assertTrue(replyInfo.isClose());
-                Fields replyHeaders = replyInfo.getHeaders();
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
-                replyLatch.countDown();
-            }
-        });
+                {
+                    @Override
+                    public void onReply(Stream stream, ReplyInfo replyInfo)
+                    {
+                        assertTrue(replyInfo.isClose());
+                        Fields replyHeaders = replyInfo.getHeaders();
+                        assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                        replyLatch.countDown();
+                    }
+                });
@@ -227,2 +279,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -245,3 +297,3 @@
-                Assert.assertEquals("POST", httpRequest.getMethod());
-                Assert.assertEquals("1", httpRequest.getParameter("a"));
-                Assert.assertEquals("2", httpRequest.getParameter("b"));
+                assertEquals("POST", httpRequest.getMethod());
+                assertEquals("1", httpRequest.getParameter("a"));
+                assertEquals("2", httpRequest.getParameter("b"));
@@ -257,10 +309,10 @@
-        {
-            @Override
-            public void onReply(Stream stream, ReplyInfo replyInfo)
-            {
-                Assert.assertTrue(replyInfo.isClose());
-                Fields replyHeaders = replyInfo.getHeaders();
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
-                replyLatch.countDown();
-            }
-        });
+                {
+                    @Override
+                    public void onReply(Stream stream, ReplyInfo replyInfo)
+                    {
+                        assertTrue(replyInfo.isClose());
+                        Fields replyHeaders = replyInfo.getHeaders();
+                        assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                        replyLatch.countDown();
+                    }
+                });
@@ -272,2 +324,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -290,3 +342,3 @@
-                Assert.assertEquals("POST", httpRequest.getMethod());
-                Assert.assertEquals("1", httpRequest.getParameter("a"));
-                Assert.assertEquals("2", httpRequest.getParameter("b"));
+                assertEquals("POST", httpRequest.getMethod());
+                assertEquals("1", httpRequest.getParameter("a"));
+                assertEquals("2", httpRequest.getParameter("b"));
@@ -305 +357 @@
-                Assert.assertTrue(replyInfo.isClose());
+                assertTrue(replyInfo.isClose());
@@ -307 +359 @@
-                Assert.assertTrue(replyHeaders.toString(), replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.toString(), replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -316,2 +368,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -349 +401 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -356,2 +408,2 @@
-                Assert.assertTrue(dataInfo.isClose());
-                Assert.assertEquals(data, dataInfo.asString("UTF-8", true));
+                assertTrue(dataInfo.isClose());
+                assertEquals(data, dataInfo.asString("UTF-8", true));
@@ -361,3 +413,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -395 +447 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -402 +454 @@
-                Assert.assertTrue(dataInfo.isClose());
+                assertTrue(dataInfo.isClose());
@@ -404,2 +456,2 @@
-                Assert.assertEquals(1, bytes.length);
-                Assert.assertEquals(data, bytes[0]);
+                assertEquals(1, bytes.length);
+                assertEquals(data, bytes[0]);
@@ -409,3 +461,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -447 +499 @@
-                Assert.assertEquals(1, replyFrames.incrementAndGet());
+                assertEquals(1, replyFrames.incrementAndGet());
@@ -450 +502 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -458 +510 @@
-                Assert.assertTrue(data >= 1 && data <= 2);
+                assertTrue(data >= 1 && data <= 2);
@@ -460 +512 @@
-                    Assert.assertEquals(data1, dataInfo.asString("UTF8", true));
+                    assertEquals(data1, dataInfo.asString("UTF8", true));
@@ -462 +514 @@
-                    Assert.assertEquals(data2, dataInfo.asString("UTF8", true));
+                    assertEquals(data2, dataInfo.asString("UTF8", true));
@@ -466,3 +518,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -503 +555 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -513 +565 @@
-                    Assert.assertEquals(data.length, contentBytes.get());
+                    assertEquals(data.length, contentBytes.get());
@@ -518,3 +570,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -539 +591 @@
-                for(int i = 0 ; i< writeTimes ; i++)
+                for (int i = 0; i < writeTimes; i++)
@@ -559 +611 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -569 +621 @@
-                    Assert.assertEquals(data.length * writeTimes, contentBytes.get());
+                    assertEquals(data.length * writeTimes, contentBytes.get());
@@ -574,3 +626,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -612 +664 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -622 +674 @@
-                    Assert.assertEquals(2 * data.length, contentBytes.get());
+                    assertEquals(2 * data.length, contentBytes.get());
@@ -627,3 +679,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -665 +717 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -677 +729 @@
-                    Assert.assertEquals(data, new String(buffer.toByteArray(), Charset.forName("UTF-8")));
+                    assertEquals(data, new String(buffer.toByteArray(), Charset.forName("UTF-8")));
@@ -682,3 +734,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -723 +775 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -735 +787 @@
-                    Assert.assertEquals(data2, new String(buffer.toByteArray(), Charset.forName("UTF-8")));
+                    assertEquals(data2, new String(buffer.toByteArray(), Charset.forName("UTF-8")));
@@ -740,3 +792,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -773,2 +825,2 @@
-                Assert.assertEquals(1, replies.incrementAndGet());
-                Assert.assertTrue(replyInfo.isClose());
+                assertEquals(1, replies.incrementAndGet());
+                assertTrue(replyInfo.isClose());
@@ -776,2 +828,2 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("302"));
-                Assert.assertTrue(replyHeaders.get("location").value().endsWith(suffix));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("302"));
+                assertTrue(replyHeaders.get("location").value().endsWith(suffix));
@@ -781,2 +833,2 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -811 +863 @@
-                Assert.assertEquals(1, replies.incrementAndGet());
+                assertEquals(1, replies.incrementAndGet());
@@ -814 +866 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("404"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("404"));
@@ -825,3 +877,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -856 +908 @@
-                Assert.assertEquals(1, replies.incrementAndGet());
+                assertEquals(1, replies.incrementAndGet());
@@ -858 +910 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("500"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("500"));
@@ -871,2 +923,2 @@
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(latch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(latch.await(5, TimeUnit.SECONDS));
@@ -911 +963 @@
-                Assert.assertEquals(1, replyFrames.incrementAndGet());
+                assertEquals(1, replyFrames.incrementAndGet());
@@ -914,2 +966,2 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
-                Assert.assertTrue(replyHeaders.get("extra").value().contains("X"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get("extra").value().contains("X"));
@@ -926 +978 @@
-                    Assert.assertEquals(pangram1, dataInfo.asString("UTF-8", true));
+                    assertEquals(pangram1, dataInfo.asString("UTF-8", true));
@@ -930,2 +982,2 @@
-                    Assert.assertTrue(dataInfo.isClose());
-                    Assert.assertEquals(pangram2, dataInfo.asString("UTF-8", true));
+                    assertTrue(dataInfo.isClose());
+                    assertEquals(pangram2, dataInfo.asString("UTF-8", true));
@@ -936,3 +988,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -993 +1045 @@
-                Assert.assertEquals(1, replyFrames.incrementAndGet());
+                assertEquals(1, replyFrames.incrementAndGet());
@@ -996 +1048 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1006 +1058 @@
-                    Assert.assertEquals(length, contentLength.get());
+                    assertEquals(length, contentLength.get());
@@ -1011,3 +1063,3 @@
-        Assert.assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(handlerLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
@@ -1049 +1101 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1062,2 +1114,2 @@
-        Assert.assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
-        Assert.assertEquals(3 * data.length, contentLength.get());
+        assertTrue(dataLatch.await(5, TimeUnit.SECONDS));
+        assertEquals(3 * data.length, contentLength.get());
@@ -1110 +1162 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1116,2 +1168,2 @@
-        Assert.assertTrue(latch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(latch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -1153 +1205 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1158 +1210 @@
-        Assert.assertTrue("Not dispatched again after expire", dispatchedAgainAfterExpire.await(5,
+        assertTrue("Not dispatched again after expire", dispatchedAgainAfterExpire.await(5,
@@ -1160 +1212 @@
-        Assert.assertTrue("Reply not sent", replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue("Reply not sent", replyLatch.await(5, TimeUnit.SECONDS));
@@ -1198 +1250 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1204 +1256 @@
-        Assert.assertTrue("Not dispatched again after expire", dispatchedAgainAfterExpire.await(5,
+        assertTrue("Not dispatched again after expire", dispatchedAgainAfterExpire.await(5,
@@ -1206 +1258 @@
-        Assert.assertTrue("Reply not sent", replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue("Reply not sent", replyLatch.await(5, TimeUnit.SECONDS));
@@ -1266 +1318 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1273,2 +1325,2 @@
-        Assert.assertTrue(latch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(latch.await(5, TimeUnit.SECONDS));
+        assertTrue(replyLatch.await(5, TimeUnit.SECONDS));
@@ -1334 +1386 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1347,2 +1399,2 @@
-        Assert.assertTrue(latch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(responseLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(latch.await(5, TimeUnit.SECONDS));
+        assertTrue(responseLatch.await(5, TimeUnit.SECONDS));
@@ -1375 +1427 @@
-                Assert.assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
+                assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
@@ -1382,2 +1434,2 @@
-        Assert.assertTrue(latch.await(5, TimeUnit.SECONDS));
-        Assert.assertTrue(responseLatch.await(5, TimeUnit.SECONDS));
+        assertTrue(latch.await(5, TimeUnit.SECONDS));
+        assertTrue(responseLatch.await(5, TimeUnit.SECONDS));

