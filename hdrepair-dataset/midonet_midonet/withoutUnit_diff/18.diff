diff --git a/midolman/build.gradle b/midolman/build.gradle
index 6ef9ffa..c69ae27 100644
--- a/midolman/build.gradle
+++ b/midolman/build.gradle
@@ -46,0 +47,3 @@
+    coverageSourceDirs << sourceSets.main.java.srcDirs
+    coverageSourceDirs << sourceSets.main.scala.srcDirs
+
@@ -48,6 +51,7 @@
-        '**/FlowController$Wildcard*',
-        '**/FlowController$Add*',
-        '**/FlowController$Remove*',
-        '**/FlowController$Invalidate*',
-        '**/FlowController$FlowAdded*',
-        '**/FlowController$Internal$*',
+        '.*/FlowController$Wildcard.*',
+        '.*/FlowController$Wildcard.*',
+        '.*/FlowController$Add.*',
+        '.*/FlowController$Remove.*',
+        '.*/FlowController$Invalidate.*',
+        '.*/FlowController$FlowAdded.*',
+        '.*/FlowController$Internal$.*',
@@ -55,4 +59,4 @@
-        '**/DatapathController$DpPort*',
-        '**/DatapathController$Init*',
-        '**/DatapathController$Datapath*',
-        '**/DatapathController$Internal$*',
+        '.*/DatapathController$DpPort.*',
+        '.*/DatapathController$Init.*',
+        '.*/DatapathController$Datapath.*',
+        '.*/DatapathController$Internal$.*',
@@ -60,3 +64,3 @@
-        '**/DeduplicationActor$ApplyFlow*',
-        '**/DeduplicationActor$*Packet*',
-        '**/DeduplicationActor$_*',
+        '.*/DeduplicationActor$ApplyFlow.*',
+        '.*/DeduplicationActor$.*Packet.*',
+        '.*/DeduplicationActor$_.*',
@@ -64,3 +68,3 @@
-        '**/PacketWorkflow$PacketIn*',
-        '**/PacketWorkflow$SendPacket*',
-        '**/PacketWorkflow$AddVirtual*',
+        '.*/PacketWorkflow$PacketIn.*',
+        '.*/PacketWorkflow$SendPacket.*',
+        '.*/PacketWorkflow$AddVirtual.*',
@@ -68,4 +72,4 @@
-        '**/Coordinator$ToPort*',
-        '**/Coordinator$DoFlowAction*',
-        '**/Coordinator$ForkAction*',
-        '**/VirtualActions$*',
+        '.*/Coordinator$ToPort.*',
+        '.*/Coordinator$DoFlowAction.*',
+        '.*/Coordinator$ForkAction.*',
+        '.*/VirtualActions$.*',
@@ -73 +77 @@
-        '**/VxLanPortMapper$Internal$*'
+        '.*/VxLanPortMapper$Internal$.*'
diff --git a/midolman/src/main/java/org/midonet/midolman/state/zkManagers/VtepZkManager.java b/midolman/src/main/java/org/midonet/midolman/state/zkManagers/VtepZkManager.java
index fc755f2..b47b97c 100644
--- a/midolman/src/main/java/org/midonet/midolman/state/zkManagers/VtepZkManager.java
+++ b/midolman/src/main/java/org/midonet/midolman/state/zkManagers/VtepZkManager.java
@@ -39 +39 @@
-    public static final int MAX_VNI = 0xff_ffff;
+    public static final int MAX_VNI = 0xffffff;
diff --git a/midolman/src/main/scala/org/midonet/midolman/DatapathController.scala b/midolman/src/main/scala/org/midonet/midolman/DatapathController.scala
index 7d97f25..9097584 100644
--- a/midolman/src/main/scala/org/midonet/midolman/DatapathController.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/DatapathController.scala
@@ -175 +175,5 @@
-    object Internal {
+    /**
+     * This message is sent when the separate thread has successfully
+     * retrieved all information about the interfaces.
+     */
+    case class InterfacesUpdate_(interfaces: JSet[InterfaceDescription])
@@ -177,5 +181 @@
-        /**
-         * This message is sent when the separate thread has successfully
-         * retrieved all information about the interfaces.
-         */
-        case class InterfacesUpdate(interfaces: JSet[InterfaceDescription])
+    case class ExistingDatapathPorts_(datapath: Datapath, ports: Set[DpPort])
@@ -183 +183,2 @@
-        case class ExistingDatapathPorts(datapath: Datapath, ports: Set[DpPort])
+    /** Signals that the ports in the datapath were cleared */
+    case object DatapathClear_
@@ -185,2 +186,3 @@
-        /** Signals that the ports in the datapath were cleared */
-        case object DatapathClear
+    /** Signals that the gre port for overlay traffic tunnelling has been
+     *  created. */
+    case class GrePortReady_(gre: GreTunnelPort)
@@ -188,3 +190,3 @@
-        /** Signals that the gre port for overlay traffic tunnelling has been
-         *  created. */
-        case class GrePortReady(gre: GreTunnelPort)
+    /** Signals that the vxlan port for overlay traffic tunnelling has been
+     *  created. */
+    case class VxLanPortReady_(vxlan: VxLanTunnelPort)
@@ -192,8 +194,3 @@
-        /** Signals that the vxlan port for overlay traffic tunnelling has been
-         *  created. */
-        case class VxLanPortReady(vxlan: VxLanTunnelPort)
-
-        /** Signals that the vxlan port for vtep traffic tunnelling has been
-         *  created. */
-        case class VtepPortReady(vtep: VxLanTunnelPort)
-    }
+    /** Signals that the vxlan port for vtep traffic tunnelling has been
+     *  created. */
+    case class VtepPortReady_(vtep: VxLanTunnelPort)
@@ -252 +248,0 @@
-    import DatapathController.Internal._
@@ -364 +360 @@
-        case ExistingDatapathPorts(datapathObj, ports) =>
+        case ExistingDatapathPorts_(datapathObj, ports) =>
@@ -368 +364 @@
-                  .map { _ => DatapathClear } pipeTo self
+                  .map { _ => DatapathClear_ } pipeTo self
@@ -370 +366 @@
-        case DatapathClear =>
+        case DatapathClear_ =>
@@ -373 +369 @@
-            } map { GrePortReady(_) } pipeTo self
+            } map { GrePortReady_(_) } pipeTo self
@@ -375 +371 @@
-        case GrePortReady(gre) =>
+        case GrePortReady_(gre) =>
@@ -380 +376 @@
-            } map { VxLanPortReady(_) } pipeTo self
+            } map { VxLanPortReady_(_) } pipeTo self
@@ -382 +378 @@
-        case VxLanPortReady(vxlan) =>
+        case VxLanPortReady_(vxlan) =>
@@ -387 +383 @@
-            } map { VtepPortReady(_) } pipeTo self
+            } map { VtepPortReady_(_) } pipeTo self
@@ -389 +385 @@
-        case VtepPortReady(vtep) =>
+        case VtepPortReady_(vtep) =>
@@ -447 +443 @@
-                      self ! InterfacesUpdate(data)
+                      self ! InterfacesUpdate_(data)
@@ -533 +529 @@
-        case InterfacesUpdate(interfaces) =>
+        case InterfacesUpdate_(interfaces) =>
@@ -790 +786 @@
-                    self ! ExistingDatapathPorts(datapath, ports.asScala.toSet)
+                    self ! ExistingDatapathPorts_(datapath, ports.asScala.toSet)
diff --git a/midolman/src/main/scala/org/midonet/midolman/FlowController.scala b/midolman/src/main/scala/org/midonet/midolman/FlowController.scala
index 5d049a8..9c7afff 100644
--- a/midolman/src/main/scala/org/midonet/midolman/FlowController.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/FlowController.scala
@@ -111 +111 @@
-    object Internal {
+    case object CheckFlowExpiration_
@@ -113 +113 @@
-        case object CheckFlowExpiration
+    case class FlowMissing_(flowMatch: FlowMatch, flowCallback: Callback1[Flow])
@@ -115 +115 @@
-        case class FlowMissing(flowMatch: FlowMatch, flowCallback: Callback1[Flow])
+    case class GetFlowSucceeded_(flow: Flow, flowCallback: Callback1[Flow])
@@ -117,5 +117 @@
-        case class GetFlowSucceeded(flow: Flow, flowCallback: Callback1[Flow])
-
-        case class GetFlowFailed(flowCallback: Callback1[Flow])
-
-    }
+    case class GetFlowFailed_(flowCallback: Callback1[Flow])
@@ -209 +204,0 @@
-    import FlowController.Internal._
@@ -276 +271 @@
-                    CheckFlowExpiration)
+                    CheckFlowExpiration_)
@@ -351 +346 @@
-        case CheckFlowExpiration =>
+        case CheckFlowExpiration_ =>
@@ -355 +350 @@
-        case GetFlowSucceeded(flow, callback) =>
+        case GetFlowSucceeded_(flow, callback) =>
@@ -360 +355 @@
-        case GetFlowFailed(callback) => callback.call(null)
+        case GetFlowFailed_(callback) => callback.call(null)
@@ -362 +357 @@
-        case FlowMissing(flowMatch, callback) =>
+        case FlowMissing_(flowMatch, callback) =>
@@ -509 +504 @@
-                            self ! FlowMissing(flowMatch, flowCallback)
+                            self ! FlowMissing_(flowMatch, flowCallback)
@@ -513 +508 @@
-                            self ! GetFlowFailed(flowCallback)
+                            self ! GetFlowFailed_(flowCallback)
@@ -518 +513 @@
-                        GetFlowSucceeded(data, flowCallback)
+                        GetFlowSucceeded_(data, flowCallback)
@@ -522 +517 @@
-                        FlowMissing(flowMatch, flowCallback)
+                        FlowMissing_(flowMatch, flowCallback)
diff --git a/midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala b/midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala
index e48e8cc..0c64a8f 100644
--- a/midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala
@@ -12,0 +13 @@
+import org.midonet.midolman.state.NatState
@@ -130,2 +131,2 @@
-                            if (stickySourceIP) NatKey.FWD_STICKY_DNAT
-                            else NatKey.FWD_DNAT)
+                            if (stickySourceIP) NatState.FWD_STICKY_DNAT
+                            else NatState.FWD_DNAT)
@@ -181,2 +182,2 @@
-                            if (stickySourceIP) NatKey.FWD_STICKY_DNAT
-                            else NatKey.FWD_DNAT)
+                            if (stickySourceIP) NatState.FWD_STICKY_DNAT
+                            else NatState.FWD_DNAT)
diff --git a/midolman/src/main/scala/org/midonet/midolman/state/FlowStatePackets.scala b/midolman/src/main/scala/org/midonet/midolman/state/FlowStatePackets.scala
index d1ff433..68bff2b 100644
--- a/midolman/src/main/scala/org/midonet/midolman/state/FlowStatePackets.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/state/FlowStatePackets.scala
@@ -101,7 +101,7 @@
-    implicit def natKeyTypeFromProto(t: Proto.NatKey.Type): NatKey.Type = t match {
-        case Proto.NatKey.Type.FWD_SNAT => NatKey.FWD_SNAT
-        case Proto.NatKey.Type.FWD_DNAT => NatKey.FWD_DNAT
-        case Proto.NatKey.Type.FWD_STICKY_DNAT => NatKey.FWD_STICKY_DNAT
-        case Proto.NatKey.Type.REV_SNAT => NatKey.REV_SNAT
-        case Proto.NatKey.Type.REV_DNAT => NatKey.REV_DNAT
-        case Proto.NatKey.Type.REV_STICKY_DNAT => NatKey.REV_STICKY_DNAT
+    implicit def natKeyTypeFromProto(t: Proto.NatKey.Type): KeyType = t match {
+        case Proto.NatKey.Type.FWD_SNAT => NatState.FWD_SNAT
+        case Proto.NatKey.Type.FWD_DNAT => NatState.FWD_DNAT
+        case Proto.NatKey.Type.FWD_STICKY_DNAT => NatState.FWD_STICKY_DNAT
+        case Proto.NatKey.Type.REV_SNAT => NatState.REV_SNAT
+        case Proto.NatKey.Type.REV_DNAT => NatState.REV_DNAT
+        case Proto.NatKey.Type.REV_STICKY_DNAT => NatState.REV_STICKY_DNAT
@@ -110,7 +110,7 @@
-    implicit def natKeyTypeToProto(t: NatKey.Type): Proto.NatKey.Type = t match {
-        case NatKey.FWD_SNAT => Proto.NatKey.Type.FWD_SNAT
-        case NatKey.FWD_DNAT => Proto.NatKey.Type.FWD_DNAT
-        case NatKey.FWD_STICKY_DNAT => Proto.NatKey.Type.FWD_STICKY_DNAT
-        case NatKey.REV_SNAT => Proto.NatKey.Type.REV_SNAT
-        case NatKey.REV_DNAT => Proto.NatKey.Type.REV_DNAT
-        case NatKey.REV_STICKY_DNAT => Proto.NatKey.Type.REV_STICKY_DNAT
+    implicit def natKeyTypeToProto(t: KeyType): Proto.NatKey.Type = t match {
+        case NatState.FWD_SNAT => Proto.NatKey.Type.FWD_SNAT
+        case NatState.FWD_DNAT => Proto.NatKey.Type.FWD_DNAT
+        case NatState.FWD_STICKY_DNAT => Proto.NatKey.Type.FWD_STICKY_DNAT
+        case NatState.REV_SNAT => Proto.NatKey.Type.REV_SNAT
+        case NatState.REV_DNAT => Proto.NatKey.Type.REV_DNAT
+        case NatState.REV_STICKY_DNAT => Proto.NatKey.Type.REV_STICKY_DNAT
diff --git a/midolman/src/main/scala/org/midonet/midolman/state/FlowStateStorage.scala b/midolman/src/main/scala/org/midonet/midolman/state/FlowStateStorage.scala
index 452402d..ec954ff 100644
--- a/midolman/src/main/scala/org/midonet/midolman/state/FlowStateStorage.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/state/FlowStateStorage.scala
@@ -22,2 +22 @@
-import org.midonet.midolman.state.NatState.NatKey
-import org.midonet.midolman.state.NatState.NatBinding
+import org.midonet.midolman.state.NatState.{KeyType, NatKey, NatBinding}
@@ -79,7 +78,7 @@
-    val NAT_KEY_TYPES = Bimap[NatKey.Type, String](List(
-        NatKey.FWD_DNAT -> "fwd_dnat",
-        NatKey.FWD_SNAT -> "fwd_snat",
-        NatKey.FWD_STICKY_DNAT -> "fwd_sticky_dnat",
-        NatKey.REV_DNAT -> "rev_dnat",
-        NatKey.REV_SNAT -> "rev_snat",
-        NatKey.REV_STICKY_DNAT -> "rev_sticky_dnat"))
+    val NAT_KEY_TYPES = Bimap[NatState.KeyType, String](List(
+        NatState.FWD_DNAT -> "fwd_dnat",
+        NatState.FWD_SNAT -> "fwd_snat",
+        NatState.FWD_STICKY_DNAT -> "fwd_sticky_dnat",
+        NatState.REV_DNAT -> "rev_dnat",
+        NatState.REV_SNAT -> "rev_snat",
+        NatState.REV_STICKY_DNAT -> "rev_sticky_dnat"))
@@ -87 +86 @@
-    def natKeyTypeFromString(str: String): Option[NatKey.Type] = NAT_KEY_TYPES.inverse.get(str)
+    def natKeyTypeFromString(str: String): Option[KeyType] = NAT_KEY_TYPES.inverse.get(str)
@@ -89 +88 @@
-    def natKeyTypeToString(k: NatKey.Type): Option[String] = NAT_KEY_TYPES.get(k)
+    def natKeyTypeToString(k: KeyType): Option[String] = NAT_KEY_TYPES.get(k)
@@ -353 +352 @@
-}
\ No newline at end of file
+}
diff --git a/midolman/src/main/scala/org/midonet/midolman/state/NATState.scala b/midolman/src/main/scala/org/midonet/midolman/state/NATState.scala
index 33bc284..4a234ca 100644
--- a/midolman/src/main/scala/org/midonet/midolman/state/NATState.scala
+++ b/midolman/src/main/scala/org/midonet/midolman/state/NATState.scala
@@ -17 +17 @@
-import org.midonet.midolman.state.NatState.NatKey.{REV_STICKY_DNAT, FWD_STICKY_DNAT}
+import org.midonet.midolman.state.NatState.{REV_STICKY_DNAT, FWD_STICKY_DNAT}
@@ -21,0 +22,23 @@
+    sealed abstract class KeyType {
+        def inverse: KeyType
+    }
+
+    case object FWD_SNAT extends KeyType {
+        def inverse = REV_SNAT
+    }
+    case object FWD_DNAT extends KeyType {
+        def inverse = REV_DNAT
+    }
+    case object FWD_STICKY_DNAT extends KeyType {
+        def inverse = REV_STICKY_DNAT
+    }
+    case object REV_SNAT extends KeyType {
+        def inverse = FWD_SNAT
+    }
+    case object REV_DNAT extends KeyType {
+        def inverse = FWD_DNAT
+    }
+    case object REV_STICKY_DNAT extends KeyType {
+        def inverse = FWD_STICKY_DNAT
+    }
+
@@ -25,23 +48 @@
-        sealed abstract class Type {
-            def inverse: Type
-        }
-        case object FWD_SNAT extends Type {
-            def inverse = REV_SNAT
-        }
-        case object FWD_DNAT extends Type {
-            def inverse = REV_DNAT
-        }
-        case object FWD_STICKY_DNAT extends Type {
-            def inverse = REV_STICKY_DNAT
-        }
-        case object REV_SNAT extends Type {
-            def inverse = FWD_SNAT
-        }
-        case object REV_DNAT extends Type {
-            def inverse = FWD_DNAT
-        }
-        case object REV_STICKY_DNAT extends Type {
-            def inverse = FWD_STICKY_DNAT
-        }
-
-        def apply(wcMatch: WildcardMatch, deviceId: UUID, keyType: Type): NatKey = {
+        def apply(wcMatch: WildcardMatch, deviceId: UUID, keyType: KeyType): NatKey = {
@@ -101 +102 @@
-    case class NatKey(var keyType: NatKey.Type,
+    case class NatKey(var keyType: KeyType,
@@ -117 +118 @@
-            case NatKey.FWD_SNAT =>
+            case NatState.FWD_SNAT =>
@@ -125 +126 @@
-            case NatKey.FWD_DNAT | NatKey.FWD_STICKY_DNAT =>
+            case NatState.FWD_DNAT | NatState.FWD_STICKY_DNAT =>
@@ -137 +138 @@
-            case NatKey.FWD_SNAT =>
+            case NatState.FWD_SNAT =>
@@ -139 +140 @@
-            case NatKey.FWD_DNAT | NatKey.FWD_STICKY_DNAT =>
+            case NatState.FWD_DNAT | NatState.FWD_STICKY_DNAT =>
@@ -163 +164 @@
-    private def applyDnat(deviceId: UUID, natType: NatKey.Type,
+    private def applyDnat(deviceId: UUID, natType: KeyType,
@@ -198 +199 @@
-    private def reverseDnat(deviceId: UUID, natType: NatKey.Type): Boolean = {
+    private def reverseDnat(deviceId: UUID, natType: KeyType): Boolean = {
@@ -252 +253 @@
-            case NatKey.FWD_DNAT | NatKey.FWD_STICKY_DNAT =>
+            case NatState.FWD_DNAT | NatState.FWD_STICKY_DNAT =>
@@ -256 +257 @@
-            case NatKey.REV_DNAT | NatKey.REV_STICKY_DNAT =>
+            case NatState.REV_DNAT | NatState.REV_STICKY_DNAT =>
@@ -258 +259 @@
-            case NatKey.FWD_SNAT =>
+            case NatState.FWD_SNAT =>
@@ -262 +263 @@
-            case NatKey.REV_SNAT =>
+            case NatState.REV_SNAT =>
diff --git a/midolman/src/main/scala/org/midonet/sdn/flows/FlowTagger.scala b/midolman/src/main/scala/org/midonet/sdn/flows/FlowTagger.scala
index a4dbe78..eed86ce 100644
--- a/midolman/src/main/scala/org/midonet/sdn/flows/FlowTagger.scala
+++ b/midolman/src/main/scala/org/midonet/sdn/flows/FlowTagger.scala
@@ -318,0 +319,2 @@
+
+class FlowTagger {}
diff --git a/midolman/src/test/scala/org/midonet/midolman/FlowControllerTestCase.scala b/midolman/src/test/scala/org/midonet/midolman/FlowControllerTestCase.scala
index f3f8abf..8898e1a 100644
--- a/midolman/src/test/scala/org/midonet/midolman/FlowControllerTestCase.scala
+++ b/midolman/src/test/scala/org/midonet/midolman/FlowControllerTestCase.scala
@@ -255 +255 @@
-            FlowController ! FlowController.Internal.CheckFlowExpiration
+            FlowController ! FlowController.CheckFlowExpiration_
@@ -261,2 +261,2 @@
-                FlowController.Internal.CheckFlowExpiration.getClass(),
-                classOf[FlowController.Internal.FlowMissing]))
+                FlowController.CheckFlowExpiration_.getClass(),
+                classOf[FlowController.FlowMissing_]))
@@ -287 +287 @@
-            FlowController ! FlowController.Internal.CheckFlowExpiration
+            FlowController ! FlowController.CheckFlowExpiration_
@@ -293 +293 @@
-                FlowController.Internal.CheckFlowExpiration.getClass()))
+                FlowController.CheckFlowExpiration_.getClass()))
@@ -315 +315 @@
-            FlowController ! FlowController.Internal.CheckFlowExpiration
+            FlowController ! FlowController.CheckFlowExpiration_
@@ -321 +321 @@
-                FlowController.Internal.CheckFlowExpiration.getClass()))
+                FlowController.CheckFlowExpiration_.getClass()))
diff --git a/midolman/src/test/scala/org/midonet/midolman/actors/DatapathControllerActorTest.scala b/midolman/src/test/scala/org/midonet/midolman/actors/DatapathControllerActorTest.scala
index 6614921..233bb80 100644
--- a/midolman/src/test/scala/org/midonet/midolman/actors/DatapathControllerActorTest.scala
+++ b/midolman/src/test/scala/org/midonet/midolman/actors/DatapathControllerActorTest.scala
@@ -47 +46,0 @@
-    import DatapathController.Internal._
@@ -70 +69 @@
-        InterfacesUpdate(emptyJSet),
+        InterfacesUpdate_(emptyJSet),
@@ -81,5 +80,5 @@
-        ExistingDatapathPorts(null, Set(dpPortGre,dpPortInt)),
-        DatapathClear,
-        GrePortReady(null),
-        VxLanPortReady(null),
-        VtepPortReady(null)
+        ExistingDatapathPorts_(null, Set(dpPortGre,dpPortInt)),
+        DatapathClear_,
+        GrePortReady_(null),
+        VxLanPortReady_(null),
+        VtepPortReady_(null)
@@ -151 +150 @@
-            dpcInit ! DatapathClear
+            dpcInit ! DatapathClear_
@@ -163 +162 @@
-            dpcInit ! DatapathClear
+            dpcInit ! DatapathClear_
diff --git a/midolman/src/test/scala/org/midonet/midolman/layer4/NatTestCase.scala b/midolman/src/test/scala/org/midonet/midolman/layer4/NatTestCase.scala
index 2367a63..1b096b3 100644
--- a/midolman/src/test/scala/org/midonet/midolman/layer4/NatTestCase.scala
+++ b/midolman/src/test/scala/org/midonet/midolman/layer4/NatTestCase.scala
@@ -29,0 +30 @@
+import org.midonet.midolman.state.NatState
@@ -234 +235,2 @@
-                    case NatKey.FWD_SNAT | NatKey.FWD_DNAT | NatKey.FWD_STICKY_DNAT =>
+                    case NatState.FWD_SNAT | NatState.FWD_DNAT | NatState.FWD_STICKY_DNAT =>
+                        key.expiresAfter = 0.seconds
diff --git a/midolman/src/test/scala/org/midonet/midolman/state/FlowStateReplicatorTest.scala b/midolman/src/test/scala/org/midonet/midolman/state/FlowStateReplicatorTest.scala
index 8047164..01c02c2 100644
--- a/midolman/src/test/scala/org/midonet/midolman/state/FlowStateReplicatorTest.scala
+++ b/midolman/src/test/scala/org/midonet/midolman/state/FlowStateReplicatorTest.scala
@@ -100 +100 @@
-        NatKey(NatKey.FWD_SNAT, "192.168.10.1", 10001, "17.16.15.1", 80, 1, UUID.randomUUID()) ->
+        NatKey(NatState.FWD_SNAT, "192.168.10.1", 10001, "17.16.15.1", 80, 1, UUID.randomUUID()) ->
@@ -102 +102 @@
-        NatKey(NatKey.FWD_SNAT, "192.168.10.2", 10002, "17.16.15.2", 443, 2, UUID.randomUUID()) ->
+        NatKey(NatState.FWD_SNAT, "192.168.10.2", 10002, "17.16.15.2", 443, 2, UUID.randomUUID()) ->
diff --git a/midolman/src/test/scala/org/midonet/midolman/state/FlowStateStorageTest.scala b/midolman/src/test/scala/org/midonet/midolman/state/FlowStateStorageTest.scala
index e74781e..a7e4886 100644
--- a/midolman/src/test/scala/org/midonet/midolman/state/FlowStateStorageTest.scala
+++ b/midolman/src/test/scala/org/midonet/midolman/state/FlowStateStorageTest.scala
@@ -44 +44 @@
-        NatKey(NatKey.FWD_SNAT, "192.168.10.1", 10001, "17.16.15.1", 80, 1, UUID.randomUUID()) ->
+        NatKey(NatState.FWD_SNAT, "192.168.10.1", 10001, "17.16.15.1", 80, 1, UUID.randomUUID()) ->
@@ -46 +46 @@
-        NatKey(NatKey.FWD_SNAT, "192.168.10.2", 10002, "17.16.15.2", 443, 2, UUID.randomUUID()) ->
+        NatKey(NatState.FWD_SNAT, "192.168.10.2", 10002, "17.16.15.2", 443, 2, UUID.randomUUID()) ->
diff --git a/midonet-util/build.gradle b/midonet-util/build.gradle
index 8888f62..19665fd 100644
--- a/midonet-util/build.gradle
+++ b/midonet-util/build.gradle
@@ -19,0 +20,4 @@
+cobertura {
+    coverageSourceDirs << sourceSets.main.java.srcDirs
+    coverageSourceDirs << sourceSets.main.scala.srcDirs
+}
diff --git a/odp/build.gradle b/odp/build.gradle
index 0e37b85..bf7a30f 100644
--- a/odp/build.gradle
+++ b/odp/build.gradle
@@ -20,2 +20,5 @@
-    coverageExcludes = ['org/midonet/odp/test/*']
-}
\ No newline at end of file
+    coverageSourceDirs << sourceSets.main.java.srcDirs
+    coverageSourceDirs << sourceSets.main.scala.srcDirs
+
+    coverageExcludes = ['org/midonet/odp/test/.*']
+}
diff --git a/packets/build.gradle b/packets/build.gradle
index 16c0809..33fa43a 100644
--- a/packets/build.gradle
+++ b/packets/build.gradle
@@ -25,0 +26,5 @@
+
+cobertura {
+    coverageSourceDirs << sourceSets.main.java.srcDirs
+    coverageSourceDirs << sourceSets.main.scala.srcDirs
+}

