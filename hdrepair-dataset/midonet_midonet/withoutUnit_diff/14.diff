diff --git a/brain/midonet-brain/conf/logback.xml b/brain/midonet-brain/conf/logback.xml
index b781ced..b0d4c21 100644
--- a/brain/midonet-brain/conf/logback.xml
+++ b/brain/midonet-brain/conf/logback.xml
@@ -73,0 +74,4 @@
+    <!-- Some tweaks to the OVSDB plugin to reduce verbosity -->
+    <logger name="org.opendaylight.ovsdb.plugin" level="WARN"/>
+    <logger name="org.opendaylight.controller.sal.utils.ServiceHelper" level="OFF"/>
+
@@ -75 +79 @@
-    <root level="DEBUG">
+    <root level="INFO">
diff --git a/brain/midonet-brain/src/main/java/org/midonet/brain/southbound/vtep/VtepDataClientImpl.java b/brain/midonet-brain/src/main/java/org/midonet/brain/southbound/vtep/VtepDataClientImpl.java
index 361f24c..87d7dce 100644
--- a/brain/midonet-brain/src/main/java/org/midonet/brain/southbound/vtep/VtepDataClientImpl.java
+++ b/brain/midonet-brain/src/main/java/org/midonet/brain/southbound/vtep/VtepDataClientImpl.java
@@ -471 +471 @@
-        if (!status.isSuccess()) {
+        if (!status.isSuccess() && status.getCode() != StatusCode.NOTFOUND) {
diff --git a/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/MacLocation.scala b/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/MacLocation.scala
index 88060bd..4a66bc4 100644
--- a/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/MacLocation.scala
+++ b/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/MacLocation.scala
@@ -19 +19 @@
-import org.midonet.packets.IPv4Addr
+import org.midonet.packets.{MAC, IPv4Addr}
@@ -24,0 +25,2 @@
+
+    /** A Mac Location with all fields */
@@ -27,0 +30,14 @@
+    }
+
+    /** A Mac Location that also has the given IP */
+    def apply(mac: MAC, ipAddr: IPv4Addr, logicalSwitchName: String,
+              vxlanTunnelEndpoint: IPv4Addr): MacLocation = {
+        new MacLocation(VtepMAC.fromMac(mac), ipAddr, logicalSwitchName,
+                        vxlanTunnelEndpoint)
+    }
+
+    /** A Mac Location that is not associated to any IP */
+    def apply(mac: MAC, logicalSwitchName: String,
+              vxlanTunnelEndpoint: IPv4Addr): MacLocation = {
+        new MacLocation(VtepMAC.fromMac(mac), null, logicalSwitchName,
+                        vxlanTunnelEndpoint)
@@ -62 +78 @@
-        throw new IllegalArgumentException("MAC cannot be null")
+        throw new NullPointerException("MAC is null")
@@ -66 +82 @@
-        throw new IllegalArgumentException("Logical Switch cannot be null")
+        throw new NullPointerException("Logical Switch name is null")
diff --git a/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/VxlanGatewayManager.scala b/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/VxlanGatewayManager.scala
index ca38e36..c4e1126 100644
--- a/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/VxlanGatewayManager.scala
+++ b/brain/midonet-brain/src/main/scala/org/midonet/brain/services/vxgw/VxlanGatewayManager.scala
@@ -33 +32,0 @@
-import org.midonet.brain.southbound.vtep.VtepMAC.fromMac
@@ -82,6 +81,2 @@
-            if (!ml.logicalSwitchName.equals(name)) {
-                log.warn(s"Drops $ml (bad log. switch name)")
-            } else {
-                if (log.isTraceEnabled) {
-                    log.trace("Learn " + ml)
-                }
+            if (ml.logicalSwitchName.equals(name)) {
+                log.trace("Learned: {}", ml)
@@ -99,3 +93,0 @@
-
-    override def toString: String = "VxGW(networkId: " + networkId +
-                                    ", vni: " + vni + ")"
@@ -209 +201 @@
-                            new MacLocation(fromMac(oldMac), ip, lsName, null)
+                            MacLocation(oldMac, ip, lsName, null)
@@ -461 +452,0 @@
-            // This should've been enforced at the API level!
@@ -469 +459,0 @@
-            // This should've been enforced at the API level!
@@ -503,2 +492,0 @@
-      *
-      * TODO: async this?
@@ -509,5 +497,2 @@
-        // isMido tells whether this all, or part of the changes related to
-        // this update are related to a port in MidoNet, and therefore data
-        // structures must be updated by us
-        val isInMidonet = isPortInMidonet(oldPort) || isPortInMidonet(newPort)
-        if (onlyMido && !isInMidonet) {
+        // we only process changes that affect a port in MidoNet
+        if (onlyMido && !isPortInMidonet(oldPort) && !isPortInMidonet(newPort)) {
@@ -517 +502 @@
-        // The tunnel destination of the MAC, based on the newPort
+        // the tunnel destination of the MAC, based on the newPort
@@ -527 +511,0 @@
-        val vMac = fromMac(mac)
@@ -529,3 +513,2 @@
-            // This a typical case when the VM that has the MAC is not actually
-            // at an exterior port in the Network itself, but somewhere else in
-            // the virtual topology
+            // This a typical case when the VM that has the MAC is not at an
+            // exterior port in the Network, but elsewhere in the virt. topology
@@ -540,3 +523,2 @@
-                (arpTable.getByValue(mac) map { ip =>
-                    MacLocation(vMac, ip, lsName, floodingProxy.ipAddr)
-                }).toSet + MacLocation(vMac, null, lsName, floodingProxy.ipAddr)
+                macLocationsForArpSupression(mac, floodingProxy.ipAddr) +
+                    MacLocation (mac, lsName, floodingProxy.ipAddr)
@@ -545,2 +527,2 @@
-            log.info(s"MAC $vMac removed from $lsName")
-            Set(MacLocation(vMac, null, lsName, null))
+            log.info(s"MAC $mac removed from $lsName")
+            Set(MacLocation(mac, lsName, null))
@@ -548,2 +529,0 @@
-            // We know the tunnel dst, let's also add an entry for each IP known
-            // in the MAC, for ARP supression plus one for those not known
@@ -552,9 +532,3 @@
-            val macLocation: MacLocation = MacLocation(vMac, null, lsName,
-                                                       tunnelDst)
-            if (arpTable == null) {
-                Set(macLocation)
-            } else {
-                (arpTable.getByValue(mac) map { ip =>
-                    new MacLocation(vMac, ip, lsName, tunnelDst)
-                }).toSet + macLocation
-            }
+            macLocationsForArpSupression(mac, tunnelDst) +
+                MacLocation(mac, lsName, tunnelDst) // default with no IP
+
@@ -561,0 +536,8 @@
+    }
+
+    private def macLocationsForArpSupression(mac: MAC, endpointIp: IPv4Addr)
+    : Set[MacLocation] = {
+        if (arpTable == null) Set.empty
+        else (arpTable.getByValue (mac) map {
+            ip => MacLocation (mac, ip, lsName, endpointIp)
+        }).toSet
@@ -603,3 +585 @@
-                    vxgw.asObserver.onNext(
-                        new MacLocation(fromMac(mac), ip, lsName, tunIp)
-                    )
+                    vxgw.asObserver.onNext(MacLocation(mac, ip, lsName, tunIp))
@@ -619 +599 @@
-}
\ No newline at end of file
+}
diff --git a/midonet-api/conf/logback.xml.prod b/midonet-api/conf/logback.xml.prod
index 10ba239..f20b05c 100644
--- a/midonet-api/conf/logback.xml.prod
+++ b/midonet-api/conf/logback.xml.prod
@@ -89,0 +90,4 @@
+    <!-- Some tweaks to the OVSDB plugin to reduce verbosity -->
+    <logger name="org.opendaylight.ovsdb.plugin" level="WARN"/>
+    <logger name="org.opendaylight.controller.sal.utils.ServiceHelper" level="OFF"/>
+

