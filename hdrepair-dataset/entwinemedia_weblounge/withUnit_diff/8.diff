diff --git a/src/main/java/ch/o2it/weblounge/test/harness/JSONActionTest.java b/src/main/java/ch/o2it/weblounge/test/harness/JSONActionTest.java
index 730618e..d79aaf0 100644
--- a/src/main/java/ch/o2it/weblounge/test/harness/JSONActionTest.java
+++ b/src/main/java/ch/o2it/weblounge/test/harness/JSONActionTest.java
@@ -35,0 +36 @@
+import java.util.Set;
@@ -58 +59 @@
-    logger.info("Preparing test of greeter action's json output");
+    logger.info("Preparing test of greeter action");
@@ -62,2 +63 @@
-    String language = "english";
-    String greeting = greetings.get(language);
+    Set<String> languages = greetings.keySet();
@@ -66,13 +66,17 @@
-    HttpGet request = new HttpGet(UrlSupport.concat(serverUrl, "greeting/json"));
-    String[][] params = new String[][] {{"language", language}};
-
-    // Send and the request and examine the response
-    logger.info("Sending request to {}", request.getURI());
-    HttpClient httpClient = new DefaultHttpClient();
-    try {
-      HttpResponse response = TestSiteUtils.request(httpClient, request, params);
-      Assert.assertEquals(200, response.getStatusLine().getStatusCode());
-      JSONObject json = TestSiteUtils.parseJSONResponse(response);
-      Assert.assertEquals(greeting, json.getJSONObject("greetings").getString(language));    
-    } finally {
-      httpClient.getConnectionManager().shutdown();
+    logger.info("Testing greeter action's json output");
+    for (String language : languages) {
+      String greeting = greetings.get(language);
+      HttpGet request = new HttpGet(UrlSupport.concat(serverUrl, "greeting/json"));
+      String[][] params = new String[][] {{"language", language}};
+  
+      // Send and the request and examine the response
+      logger.debug("Sending request to {}", request.getURI());
+      HttpClient httpClient = new DefaultHttpClient();
+      try {
+        HttpResponse response = TestSiteUtils.request(httpClient, request, params);
+        Assert.assertEquals(200, response.getStatusLine().getStatusCode());
+        JSONObject json = TestSiteUtils.parseJSONResponse(response);
+        Assert.assertEquals(greeting, json.getJSONObject("greetings").getString(language));    
+      } finally {
+        httpClient.getConnectionManager().shutdown();
+      }
diff --git a/src/main/java/ch/o2it/weblounge/test/harness/XMLActionTest.java b/src/main/java/ch/o2it/weblounge/test/harness/XMLActionTest.java
index 00e8a23..789f6c1 100644
--- a/src/main/java/ch/o2it/weblounge/test/harness/XMLActionTest.java
+++ b/src/main/java/ch/o2it/weblounge/test/harness/XMLActionTest.java
@@ -36,0 +37 @@
+import java.util.Set;
@@ -59 +60 @@
-    logger.info("Preparing test of greeter action's xml output");
+    logger.info("Preparing test of greeter action");
@@ -63,2 +64 @@
-    String language = "english";
-    String greeting = greetings.get(language);
+    Set<String> languages = greetings.keySet();
@@ -67,14 +67,18 @@
-    HttpGet request = new HttpGet(UrlSupport.concat(serverUrl, "greeting/xml"));
-    String[][] params = new String[][] {{"language", language}};
-
-    // Send and the request and examine the response
-    logger.info("Sending request to {}", request.getURI());
-    HttpClient httpClient = new DefaultHttpClient();
-    try {
-      HttpResponse response = TestSiteUtils.request(httpClient, request, params);
-      Assert.assertEquals(200, response.getStatusLine().getStatusCode());
-      Document xml = TestSiteUtils.parseXMLResponse(response);
-      String xpath = "//greeting[@language=\"" + language + "\"]/text()";
-      Assert.assertEquals(greeting, XPathHelper.valueOf(xml, xpath));    
-    } finally {
-      httpClient.getConnectionManager().shutdown();
+    logger.info("Testing greeter action's xml output");
+    for (String language : languages) {
+      String greeting = greetings.get(language);
+      HttpGet request = new HttpGet(UrlSupport.concat(serverUrl, "greeting/xml"));
+      String[][] params = new String[][] {{"language", language}};
+  
+      // Send and the request and examine the response
+      logger.debug("Sending request to {}", request.getURI());
+      HttpClient httpClient = new DefaultHttpClient();
+      try {
+        HttpResponse response = TestSiteUtils.request(httpClient, request, params);
+        Assert.assertEquals(200, response.getStatusLine().getStatusCode());
+        Document xml = TestSiteUtils.parseXMLResponse(response);
+        String xpath = "//greeting[@language=\"" + language + "\"]/text()";
+        Assert.assertEquals(greeting, XPathHelper.valueOf(xml, xpath));    
+      } finally {
+        httpClient.getConnectionManager().shutdown();
+      }
diff --git a/src/main/java/ch/o2it/weblounge/test/site/GreeterAction.java b/src/main/java/ch/o2it/weblounge/test/site/GreeterAction.java
index 36afb81..d568c5f 100644
--- a/src/main/java/ch/o2it/weblounge/test/site/GreeterAction.java
+++ b/src/main/java/ch/o2it/weblounge/test/site/GreeterAction.java
@@ -103,0 +104 @@
+      doc.setXmlStandalone(true);

