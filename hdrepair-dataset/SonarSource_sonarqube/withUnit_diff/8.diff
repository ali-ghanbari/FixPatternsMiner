diff --git a/server/sonar-server/src/main/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDates.java b/server/sonar-server/src/main/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDates.java
index 2db5dc0..dcd1fea 100644
--- a/server/sonar-server/src/main/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDates.java
+++ b/server/sonar-server/src/main/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDates.java
@@ -47 +47 @@
-    massUpdate.select("SELECT i.created_at, i.updated_at, i.issue_change_creation_date_ms, i.id FROM issue_changes i WHERE created_at_ms IS NULL");
+    massUpdate.select("SELECT i.created_at, i.updated_at, i.issue_change_creation_date, i.id FROM issue_changes i WHERE created_at_ms IS NULL");
diff --git a/server/sonar-server/src/test/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDatesTest.java b/server/sonar-server/src/test/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDatesTest.java
index 5cd281b..ecc00bb 100644
--- a/server/sonar-server/src/test/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDatesTest.java
+++ b/server/sonar-server/src/test/java/org/sonar/server/db/migrations/v51/FeedIssueChangesLongDatesTest.java
@@ -51 +51 @@
-    assertThat(countWithAllDateFieldsNull).isEqualTo(1);
+    assertThat(countWithAllDateFieldsNull).isEqualTo(2);
diff --git a/sonar-core/src/main/resources/org/sonar/core/issue/db/IssueChangeMapper.xml b/sonar-core/src/main/resources/org/sonar/core/issue/db/IssueChangeMapper.xml
index c4fb6ca..c1cfc09 100644
--- a/sonar-core/src/main/resources/org/sonar/core/issue/db/IssueChangeMapper.xml
+++ b/sonar-core/src/main/resources/org/sonar/core/issue/db/IssueChangeMapper.xml
@@ -19,3 +19,6 @@
-  <insert id="insert" parameterType="IssueChange" useGeneratedKeys="false" keyProperty="id" >
-    INSERT INTO issue_changes (kee, issue_key, user_login, change_type, change_data, created_at, updated_at, issue_change_creation_date)
-    VALUES (#{kee,jdbcType=VARCHAR}, #{issueKey,jdbcType=VARCHAR}, #{userLogin,jdbcType=VARCHAR}, #{changeType,jdbcType=VARCHAR}, #{changeData,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{issueChangeCreationDate,jdbcType=TIMESTAMP})
+  <insert id="insert" parameterType="IssueChange" useGeneratedKeys="false" keyProperty="id">
+    INSERT INTO issue_changes (kee, issue_key, user_login, change_type, change_data, created_at, updated_at,
+    issue_change_creation_date)
+    VALUES (#{kee,jdbcType=VARCHAR}, #{issueKey,jdbcType=VARCHAR}, #{userLogin,jdbcType=VARCHAR},
+    #{changeType,jdbcType=VARCHAR}, #{changeData,jdbcType=VARCHAR}, #{createdAt,jdbcType=BIGINT},
+    #{updatedAt,jdbcType=BIGINT}, #{issueChangeCreationDate,jdbcType=BIGINT})
@@ -24 +27 @@
-  <delete id="delete" parameterType="string" >
+  <delete id="delete" parameterType="string">
@@ -28 +31 @@
-  <update id="update" parameterType="map" >
+  <update id="update" parameterType="map">
@@ -48 +51,2 @@
-    inner join (select p.id,p.kee from projects p where (p.root_id=#{componentId} and p.qualifier &lt;&gt; 'BRC') or (p.id=#{componentId})) p on p.id=i.component_id
+    inner join (select p.id,p.kee from projects p where (p.root_id=#{componentId} and p.qualifier &lt;&gt; 'BRC') or
+    (p.id=#{componentId})) p on p.id=i.component_id

