diff --git a/integration-test/src/test/java/org/sagebionetworks/IT060SynapseJavaClientDoiTest.java b/integration-test/src/test/java/org/sagebionetworks/IT060SynapseJavaClientDoiTest.java
index e7bff99..ceba157 100644
--- a/integration-test/src/test/java/org/sagebionetworks/IT060SynapseJavaClientDoiTest.java
+++ b/integration-test/src/test/java/org/sagebionetworks/IT060SynapseJavaClientDoiTest.java
@@ -27,2 +27,2 @@
-	private static long MAX_WAIT = 10000; // 10 seconds
-	private static long PAUSE = 2000;     // Pause for 2 seconds
+	private static long MAX_WAIT = 10000; // 12 seconds
+	private static long PAUSE = 2000;     // Pause between waits is 2 seconds
@@ -103 +103 @@
-		assertTrue(DoiStatus.READY.equals(doi.getDoiStatus()) || DoiStatus.ERROR.equals(doi.getDoiStatus()));
+		assertEquals(DoiStatus.READY, doi.getDoiStatus());
@@ -134 +134 @@
-		assertTrue(DoiStatus.READY.equals(doi.getDoiStatus()) || DoiStatus.ERROR.equals(doi.getDoiStatus()));
+		assertEquals(DoiStatus.READY, doi.getDoiStatus());
diff --git a/lib/lib-doi/src/main/java/org/sagebionetworks/doi/EzidConstants.java b/lib/lib-doi/src/main/java/org/sagebionetworks/doi/EzidConstants.java
index 3b57bb2..a3a9b69 100644
--- a/lib/lib-doi/src/main/java/org/sagebionetworks/doi/EzidConstants.java
+++ b/lib/lib-doi/src/main/java/org/sagebionetworks/doi/EzidConstants.java
@@ -11 +11 @@
-	public static final String DOI_PREFIX = "doi:10.5072/";
+	public static final String DOI_PREFIX = "doi:10.5072/FK2.";
diff --git a/lib/lib-doi/src/test/java/org/sagebionetworks/doi/EzidClientIntegTest.java b/lib/lib-doi/src/test/java/org/sagebionetworks/doi/EzidClientIntegTest.java
index dbaa709..098f94a 100644
--- a/lib/lib-doi/src/test/java/org/sagebionetworks/doi/EzidClientIntegTest.java
+++ b/lib/lib-doi/src/test/java/org/sagebionetworks/doi/EzidClientIntegTest.java
@@ -17 +17 @@
-		final String doi = "doi:10.5072/FK2." + id;
+		final String doi = EzidConstants.DOI_PREFIX + id;
@@ -65 +65 @@
-		final String doi = "doi:10.5072/FK2." + "3829383478";
+		final String doi = EzidConstants.DOI_PREFIX + "3829383478";
diff --git a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/doi/EntityDoiManagerImplAutowiredTest.java b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/doi/EntityDoiManagerImplAutowiredTest.java
index 55dea9f..2aeb2a1 100644
--- a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/doi/EntityDoiManagerImplAutowiredTest.java
+++ b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/doi/EntityDoiManagerImplAutowiredTest.java
@@ -6 +5,0 @@
-import static org.mockito.Mockito.mock;
@@ -15,2 +13,0 @@
-import org.sagebionetworks.doi.DoiClient;
-import org.sagebionetworks.doi.EzidAsyncClient;
@@ -26,2 +22,0 @@
-import org.springframework.aop.framework.Advised;
-import org.springframework.aop.support.AopUtils;
@@ -31 +25,0 @@
-import org.springframework.test.util.ReflectionTestUtils;
@@ -35,0 +30,4 @@
+
+	// Max wait time for the DOI status to turn green
+	private static long MAX_WAIT = 10000; // 12 seconds
+	private static long PAUSE = 2000;     // Pause between waits is 2 seconds
@@ -54,11 +51,0 @@
-
-		// Inject a mock DOI client
-		// If the DOI already exists, EZID will return an error
-		// We want to avoid the error, thus the mocking
-		DoiClient mockDoiClient = mock(EzidAsyncClient.class);
-		EntityDoiManager toInject = entityDoiManager;
-		if(AopUtils.isAopProxy(toInject) && toInject instanceof Advised) {
-			Object target = ((Advised)toInject).getTargetSource().getTarget();
-			toInject = (EntityDoiManager)target;
-		}
-		ReflectionTestUtils.setField(toInject, "ezidAsyncClient", mockDoiClient);
@@ -88,2 +75,2 @@
-		Doi doiCreate = entityDoiManager.createDoi(
-				testUserInfo.getIndividualGroup().getName(), nodeId, null);
+		final String userName = testUserInfo.getIndividualGroup().getName();
+		Doi doiCreate = entityDoiManager.createDoi(userName, nodeId, null);
@@ -100,2 +87 @@
-		Doi doiGet = entityDoiManager.getDoi(
-				testUserInfo.getIndividualGroup().getName(), nodeId, null);
+		Doi doiGet = entityDoiManager.getDoi(userName, nodeId, null);
@@ -110 +96,12 @@
-		assertEquals(DoiStatus.IN_PROCESS, doiGet.getDoiStatus());
+		assertNotNull(doiGet.getDoiStatus());
+
+		// Wait for status to turn green
+		DoiStatus doiStatus = doiGet.getDoiStatus();
+		long time = 0L;
+		while (time < MAX_WAIT && DoiStatus.IN_PROCESS.equals(doiStatus)) {
+			Thread.sleep(PAUSE);
+			time = time + PAUSE;
+			doiGet = entityDoiManager.getDoi(userName, nodeId, null);
+			doiStatus = doiGet.getDoiStatus();
+		}
+		assertEquals(DoiStatus.READY, doiStatus);

