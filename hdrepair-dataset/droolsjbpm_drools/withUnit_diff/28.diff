diff --git a/drools-compiler/src/main/java/org/drools/lang/descr/RuleDescr.java b/drools-compiler/src/main/java/org/drools/lang/descr/RuleDescr.java
index 79584de..fe1d269 100644
--- a/drools-compiler/src/main/java/org/drools/lang/descr/RuleDescr.java
+++ b/drools-compiler/src/main/java/org/drools/lang/descr/RuleDescr.java
@@ -67,0 +68 @@
+        this.consequence = "";
diff --git a/drools-compiler/src/test/java/org/drools/lang/api/DescrBuilderTest.java b/drools-compiler/src/test/java/org/drools/lang/api/DescrBuilderTest.java
index aa3e2d1..81013cc 100644
--- a/drools-compiler/src/test/java/org/drools/lang/api/DescrBuilderTest.java
+++ b/drools-compiler/src/test/java/org/drools/lang/api/DescrBuilderTest.java
@@ -248,0 +249,52 @@
+    public void testRuleRHSOptional() throws InstantiationException,
+                                       IllegalAccessException {
+        PackageDescr pkg = DescrFactory.newPackage()
+                .name( "org.drools" )
+                .newRule().name( "r1" )
+                    .lhs()
+                        .pattern("StockTick").constraint( "company == \"RHT\"" ).end()
+                    .end()
+                .end()
+                .getDescr();
+
+        KnowledgePackage kpkg = compilePkgDescr( pkg );
+        assertEquals( "org.drools",
+                      kpkg.getName() );
+        
+        KnowledgeBase kbase = KnowledgeBaseFactory.newKnowledgeBase();
+        kbase.addKnowledgePackages( Collections.singletonList( kpkg ) );
+        
+        StatefulKnowledgeSession ksession = kbase.newStatefulKnowledgeSession();
+        ksession.insert( new StockTick(1, "RHT", 80, 1 ) );
+        int rules = ksession.fireAllRules();
+        assertEquals( 1, rules );
+    }
+    
+    @Test
+    public void testRuleRHSComment() throws InstantiationException,
+                                       IllegalAccessException {
+        PackageDescr pkg = DescrFactory.newPackage()
+                .name( "org.drools" )
+                .newRule().name( "r1" )
+                    .lhs()
+                        .pattern("StockTick").constraint( "company == \"RHT\"" ).end()
+                    .end()
+                    .rhs( "// some comment" )
+                .end()
+                .getDescr();
+
+        KnowledgePackage kpkg = compilePkgDescr( pkg );
+        assertEquals( "org.drools",
+                      kpkg.getName() );
+        
+        KnowledgeBase kbase = KnowledgeBaseFactory.newKnowledgeBase();
+        kbase.addKnowledgePackages( Collections.singletonList( kpkg ) );
+        
+        StatefulKnowledgeSession ksession = kbase.newStatefulKnowledgeSession();
+        ksession.insert( new StockTick(1, "RHT", 80, 1 ) );
+        int rules = ksession.fireAllRules();
+        assertEquals( 1, rules );
+    }
+    
+    
+    @Test

