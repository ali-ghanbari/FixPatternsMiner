diff --git a/doc/en/user/source/data/app-schema/cql-functions.rst b/doc/en/user/source/data/app-schema/cql-functions.rst
index 9c53b4d..3d6827d 100644
--- a/doc/en/user/source/data/app-schema/cql-functions.rst
+++ b/doc/en/user/source/data/app-schema/cql-functions.rst
@@ -14,0 +15 @@
+* Single quotes are represented in CQL string literals as two single quotes, just as in SQL. For example, ``'yyyy-MM-dd''T''HH:mm:ss''Z'''`` for the string ``yyyy-MM-dd'T'HH:mm:ss'Z'``.
@@ -211 +212 @@
-    formatting pattern supported by `SimpleDateFormat <http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html>`_, for example ``'yyyy-MM-dd'``.
+    formatting pattern supported by `SimpleDateFormat <http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html>`_, for example ``'yyyy-MM-dd'``. Use two single quotes to include a literal single quote in a CQL string literal, for example ``'yyyy-MM-dd''T''HH:mm:ss''Z'''``.
@@ -222 +223 @@
-            <OCQL>FormatDateTimezone('yyyy-MM-dd', POSITION, 'UTC')</OCQL>
+            <OCQL>FormatDateTimezone('yyyy-MM-dd''T''HH:mm:ss''Z''', POSITION, 'UTC')</OCQL>
diff --git a/src/main/src/main/java/org/geoserver/catalog/ResourcePool.java b/src/main/src/main/java/org/geoserver/catalog/ResourcePool.java
index a0fa692..104a301 100644
--- a/src/main/src/main/java/org/geoserver/catalog/ResourcePool.java
+++ b/src/main/src/main/java/org/geoserver/catalog/ResourcePool.java
@@ -1265 +1265 @@
-            return new SingleGridCoverage2DReader((GridCoverage2DReader) reader, coverageName);
+            return SingleGridCoverage2DReader.wrap((GridCoverage2DReader) reader, coverageName);
diff --git a/src/main/src/test/java/org/geoserver/catalog/ResourcePoolTest.java b/src/main/src/test/java/org/geoserver/catalog/ResourcePoolTest.java
index b691e6e..bbfd7fc 100644
--- a/src/main/src/test/java/org/geoserver/catalog/ResourcePoolTest.java
+++ b/src/main/src/test/java/org/geoserver/catalog/ResourcePoolTest.java
@@ -23,0 +24 @@
+import javax.xml.namespace.QName;
@@ -37,0 +39 @@
+import org.geotools.coverage.grid.io.StructuredGridCoverage2DReader;
@@ -62,0 +65,2 @@
+    protected static QName TIMERANGES = new QName(MockData.SF_URI, "timeranges", MockData.SF_PREFIX);
+    
@@ -76,0 +81,2 @@
+        
+        testData.addRasterLayer(TIMERANGES, "timeranges.zip", null, null, SystemTestData.class, getCatalog());
@@ -288,0 +295,13 @@
+    
+    @Test
+    public void testPreserveStructuredReader() throws IOException {
+        // we have to make sure time ranges native name is set to trigger the bug in question
+        CoverageInfo ci = getCatalog().getCoverageByName(getLayerId(TIMERANGES));
+        assertTrue(ci.getGridCoverageReader(null, null) instanceof StructuredGridCoverage2DReader);
+        String name = ci.getGridCoverageReader(null, null).getGridCoverageNames()[0];
+        ci.setNativeCoverageName(name);
+        getCatalog().save(ci);
+        
+        ci = getCatalog().getCoverageByName(getLayerId(TIMERANGES));
+        assertTrue(ci.getGridCoverageReader(null, null) instanceof StructuredGridCoverage2DReader);
+    }

