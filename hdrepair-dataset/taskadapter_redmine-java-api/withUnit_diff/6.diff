diff --git a/src/main/java/com/taskadapter/redmineapi/bean/CustomField.java b/src/main/java/com/taskadapter/redmineapi/bean/CustomField.java
index bb7d218..ecafdfe 100644
--- a/src/main/java/com/taskadapter/redmineapi/bean/CustomField.java
+++ b/src/main/java/com/taskadapter/redmineapi/bean/CustomField.java
@@ -94 +94 @@
-		if (values != null ? !values.equals(that.value) : that.values != null)
+		if (values != null ? !values.equals(that.values) : that.values != null)
diff --git a/src/test/java/com/taskadapter/redmineapi/bean/CustomFieldTest.java b/src/test/java/com/taskadapter/redmineapi/bean/CustomFieldTest.java
new file mode 100644
index 0000000..9b0b435
--- /dev/null
+++ b/src/test/java/com/taskadapter/redmineapi/bean/CustomFieldTest.java
@@ -0,0 +1,31 @@
+package com.taskadapter.redmineapi.bean;
+
+import org.junit.Test;
+
+import java.util.Arrays;
+
+import static org.hamcrest.core.IsEqual.equalTo;
+import static org.hamcrest.core.IsNot.not;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertThat;
+
+public class CustomFieldTest {
+    @Test
+    public void valuesAreEqual() {
+        assertThat(getField("A"), equalTo(getField("A")));
+        assertThat(getField("A", "B"), equalTo(getField("A", "B")));
+    }
+
+    @Test
+    public void valuesNotEqual() {
+        assertThat(getField(), not(equalTo(getField("something"))));
+        assertThat(getField("A"), not(equalTo(getField("B"))));
+        assertThat(getField("A", "B"), not(equalTo(getField("B", "A"))));
+    }
+
+    private CustomField getField(String... values) {
+        CustomField field = new CustomField();
+        field.setValues(Arrays.asList(values));
+        return field;
+    }
+}

