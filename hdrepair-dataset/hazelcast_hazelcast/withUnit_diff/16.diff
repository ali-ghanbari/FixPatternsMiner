diff --git a/hazelcast/src/main/java/com/hazelcast/map/impl/operation/PutBackupOperation.java b/hazelcast/src/main/java/com/hazelcast/map/impl/operation/PutBackupOperation.java
index 6246aa9..dd2452a 100644
--- a/hazelcast/src/main/java/com/hazelcast/map/impl/operation/PutBackupOperation.java
+++ b/hazelcast/src/main/java/com/hazelcast/map/impl/operation/PutBackupOperation.java
@@ -52,0 +53 @@
+        ttl = recordInfo != null ? recordInfo.getTtl() : ttl;
diff --git a/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java b/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java
index 866420a..31b3c96 100644
--- a/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java
+++ b/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java
@@ -1061,0 +1062,22 @@
+
+    @Test
+    @Category(NightlyTest.class)
+    public void testExpiration_onBackupPartitions_whenPuttingWithTTL() throws Exception {
+        String mapName = randomMapName();
+        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);
+        HazelcastInstance[] nodes = factory.newInstances();
+        IMap<Integer, Integer> map = nodes[0].getMap(mapName);
+
+        //1. put keys with TTL.
+        for (int i = 0; i < 60; i++) {
+            map.put(i, i, 5, TimeUnit.SECONDS);
+        }
+
+        // 2. Shutdown one node.
+        // Since we want to see previous backup partitions as owners.
+        nodes[1].shutdown();
+
+        // 3. Background task should sweep all keys.
+        assertSizeEventually(0, map);
+    }
+

