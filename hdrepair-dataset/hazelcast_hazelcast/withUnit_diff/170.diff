diff --git a/hazelcast/src/main/java/com/hazelcast/multimap/txn/TxnCommitBackupOperation.java b/hazelcast/src/main/java/com/hazelcast/multimap/txn/TxnCommitBackupOperation.java
index d6d1d79..59c9e54 100644
--- a/hazelcast/src/main/java/com/hazelcast/multimap/txn/TxnCommitBackupOperation.java
+++ b/hazelcast/src/main/java/com/hazelcast/multimap/txn/TxnCommitBackupOperation.java
@@ -57 +57 @@
-        getOrCreateContainer().unlock(dataKey, getCallerUuid(), threadId);
+        getOrCreateContainer().unlock(dataKey, caller, threadId);
diff --git a/hazelcast/src/test/java/com/hazelcast/multimap/TxnMultiMapTest.java b/hazelcast/src/test/java/com/hazelcast/multimap/TxnMultiMapTest.java
index c59b5e9..7c8e1ed 100644
--- a/hazelcast/src/test/java/com/hazelcast/multimap/TxnMultiMapTest.java
+++ b/hazelcast/src/test/java/com/hazelcast/multimap/TxnMultiMapTest.java
@@ -184,0 +185,25 @@
+
+    @Test
+    public void testIssue1276Lock() throws InterruptedException {
+        Long key = 1L;
+        Long value = 1L;
+        String mapName = "myMultimap";
+        final TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);
+
+        HazelcastInstance instance1 = factory.newHazelcastInstance();
+        HazelcastInstance instance2 = factory.newHazelcastInstance();
+
+        for (int i=0; i<2; i++) {
+            TransactionContext ctx1 = instance1.newTransactionContext();
+            ctx1.beginTransaction();
+            BaseMultiMap<Long, Long> txProfileTasks1 = ctx1.getMultiMap(mapName);
+            txProfileTasks1.put(key, value);
+            ctx1.commitTransaction();
+
+            TransactionContext ctx2 = instance2.newTransactionContext();
+            ctx2.beginTransaction();
+            BaseMultiMap<Long, Long> txProfileTasks2 = ctx2.getMultiMap(mapName);
+            txProfileTasks2.remove(key, value);
+            ctx2.commitTransaction();
+        }
+    }

