diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/impl/client/txn/TransactionContextProxy.java b/hazelcast-client/src/main/java/com/hazelcast/client/impl/client/txn/TransactionContextProxy.java
index 7fc96c3..ac54ce9 100644
--- a/hazelcast-client/src/main/java/com/hazelcast/client/impl/client/txn/TransactionContextProxy.java
+++ b/hazelcast-client/src/main/java/com/hazelcast/client/impl/client/txn/TransactionContextProxy.java
@@ -68,0 +69 @@
+            System.out.println("Transaction started on " + connection);
diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/impl/client/txn/ClientTxnTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/impl/client/txn/ClientTxnTest.java
index 1685720..dc77f6a 100644
--- a/hazelcast-client/src/test/java/com/hazelcast/client/impl/client/txn/ClientTxnTest.java
+++ b/hazelcast-client/src/test/java/com/hazelcast/client/impl/client/txn/ClientTxnTest.java
@@ -20,0 +21 @@
+import com.hazelcast.client.util.AbstractLoadBalancer;
@@ -23,0 +25,3 @@
+import com.hazelcast.core.Member;
+import com.hazelcast.core.MembershipAdapter;
+import com.hazelcast.core.MembershipEvent;
@@ -27 +30,0 @@
-import com.hazelcast.test.annotation.ProblematicTest;
@@ -37 +39,0 @@
-import java.util.concurrent.TimeUnit;
@@ -38,0 +41 @@
+import static junit.framework.TestCase.assertNull;
@@ -41,2 +43,0 @@
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
@@ -47 +48 @@
-public class ClientTxnTest {
+public class ClientTxnTest extends HazelcastTestSupport {
@@ -54 +55 @@
-    public void init(){
+    public void init() {
@@ -57,0 +59,11 @@
+        //always start the txn on first member
+        config.setLoadBalancer(new AbstractLoadBalancer() {
+            @Override
+            public Member next() {
+                Member[] members = getMembers();
+                if (members == null || members.length == 0) {
+                    return null;
+                }
+                return members[0];
+            }
+        });
@@ -70 +82 @@
-        final String queueName = "testTxnRollback";
+        final String queueName = randomString();
@@ -72 +84,10 @@
-        CountDownLatch latch = new CountDownLatch(1);
+        CountDownLatch txnRollbackLatch = new CountDownLatch(1);
+        final CountDownLatch memberRemovedLatch = new CountDownLatch(1);
+
+        hz.getCluster().addMembershipListener(new MembershipAdapter() {
+            @Override
+            public void memberRemoved(MembershipEvent membershipEvent) {
+                memberRemovedLatch.countDown();
+            }
+        });
+
@@ -77 +98 @@
-            queue.offer("item");
+            queue.offer(randomString());
@@ -83 +104 @@
-        } catch (Exception e){
+        } catch (Exception e) {
@@ -85 +106 @@
-            latch.countDown();
+            txnRollbackLatch.countDown();
@@ -88 +109,2 @@
-        assertTrue(latch.await(10, TimeUnit.SECONDS));
+        assertOpenEventually(txnRollbackLatch);
+        assertOpenEventually(memberRemovedLatch);
@@ -96 +117,0 @@
-    @Category(ProblematicTest.class)
@@ -98 +119 @@
-        final String queueName = "testTxnRollbackOnServerCrash";
+        final String queueName = randomString();
@@ -100 +121,2 @@
-        CountDownLatch latch = new CountDownLatch(1);
+        CountDownLatch txnRollbackLatch = new CountDownLatch(1);
+        final CountDownLatch memberRemovedLatch = new CountDownLatch(1);
@@ -106,2 +128,7 @@
-        String key = HazelcastTestSupport.generateKeyOwnedBy(server);
-        queue.offer(key);
+        queue.offer(randomString());
+        hz.getCluster().addMembershipListener(new MembershipAdapter() {
+            @Override
+            public void memberRemoved(MembershipEvent membershipEvent) {
+                memberRemovedLatch.countDown();
+            }
+        });
@@ -110 +137 @@
-        try{
+        try {
@@ -113 +140 @@
-        } catch (Exception e){
+        } catch (Exception e) {
@@ -115 +142 @@
-            latch.countDown();
+            txnRollbackLatch.countDown();
@@ -118 +145,2 @@
-        assertTrue(latch.await(10, TimeUnit.SECONDS));
+        assertOpenEventually(txnRollbackLatch);
+        assertOpenEventually(memberRemovedLatch);
diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/io/ClientExecutionPoolSizeLowTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/io/ClientExecutionPoolSizeLowTest.java
index b1ddcab..739ffae 100644
--- a/hazelcast-client/src/test/java/com/hazelcast/client/io/ClientExecutionPoolSizeLowTest.java
+++ b/hazelcast-client/src/test/java/com/hazelcast/client/io/ClientExecutionPoolSizeLowTest.java
@@ -9,0 +10 @@
+import com.hazelcast.test.annotation.Repeat;

