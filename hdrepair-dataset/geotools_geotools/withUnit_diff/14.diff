diff --git a/modules/library/main/src/main/java/org/geotools/styling/SLDParser.java b/modules/library/main/src/main/java/org/geotools/styling/SLDParser.java
index d1df188..4b1b384 100644
--- a/modules/library/main/src/main/java/org/geotools/styling/SLDParser.java
+++ b/modules/library/main/src/main/java/org/geotools/styling/SLDParser.java
@@ -1879 +1879 @@
-                    Expression color = parseCssParameter(child, false);
+                    Expression color = parseCssParameter(child, true);
diff --git a/modules/library/main/src/test/java/org/geotools/styling/SLDParserTest.java b/modules/library/main/src/test/java/org/geotools/styling/SLDParserTest.java
index 4f0eeb3..f1f5a66 100644
--- a/modules/library/main/src/test/java/org/geotools/styling/SLDParserTest.java
+++ b/modules/library/main/src/test/java/org/geotools/styling/SLDParserTest.java
@@ -22,0 +23 @@
+import java.awt.Color;
@@ -27,0 +29 @@
+import java.io.StringBufferInputStream;
@@ -30,0 +33,3 @@
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
@@ -199,0 +205,14 @@
+    
+    static String color = "00AA00";
+    
+    static String formattedCssStrokeParameter = "<Stroke>" +
+    		"\n\t<CssParameter name=\"stroke\">#" +
+    		"\n\t\t<ogc:Function name=\"env\">" +
+		"\n\t\t\t<ogc:Literal>stroke_color</ogc:Literal>" +
+		"\n\t\t\t<ogc:Literal>" +
+		color +
+		"</ogc:Literal>" +
+		"\n\t\t</ogc:Function>" +
+		"\n\t</CssParameter>" +
+		"</Stroke>";
+		
@@ -273 +292 @@
-    
+        
@@ -321,0 +341,11 @@
+    @Test
+    public void testStrokeColorWithEnv() throws Exception {
+        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
+        org.w3c.dom.Document node = builder.parse(new StringBufferInputStream(
+                formattedCssStrokeParameter));
+        SLDParser parser = new SLDParser(styleFactory);
+        Stroke stroke = parser.parseStroke(node.getDocumentElement());
+        // <strConcat([#], [env([stroke_color], [" + color + "])])>";
+        Assert.assertEquals("#"+color,stroke.getColor().evaluate(Color.decode("#"+color)));
+    }
+    

