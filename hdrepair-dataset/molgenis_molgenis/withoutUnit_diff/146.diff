diff --git a/molgenis-omx-core/src/main/java/org/molgenis/omx/dataset/DataSetTableIterator.java b/molgenis-omx-core/src/main/java/org/molgenis/omx/dataset/DataSetTableIterator.java
index 1dfe64f..929ecf4 100644
--- a/molgenis-omx-core/src/main/java/org/molgenis/omx/dataset/DataSetTableIterator.java
+++ b/molgenis-omx-core/src/main/java/org/molgenis/omx/dataset/DataSetTableIterator.java
@@ -70,0 +71 @@
+            tuple.set("partOfDataset", currentRowToGet.getPartOfDataSet().getIdentifier());
diff --git a/molgenis-omx-dataexplorer/src/main/resources/js/entityexplorer.js b/molgenis-omx-dataexplorer/src/main/resources/js/entityexplorer.js
index b024ef5..25cd5b5 100644
--- a/molgenis-omx-dataexplorer/src/main/resources/js/entityexplorer.js
+++ b/molgenis-omx-dataexplorer/src/main/resources/js/entityexplorer.js
@@ -86,2 +86,27 @@
-			});				
-			
+			});
+            //create a map of protocols with the datasets they are used in
+            var protocolsMap = {};
+            var datasets = restApi.get('/api/v1/dataset');
+            $.each(datasets.items, function(key, dataset) {
+                var protocolUsed = dataset.protocolUsed.href;
+                protocolsMap = getSubProtocols(dataset.identifier, protocolUsed, protocolsMap);
+            });
+
+            function getSubProtocols (datasetIdentifier, rootProtocolUri, protocolsMap){
+                var rootProtocol = restApi.get(rootProtocolUri, ["subprotocols"]);
+                //check if the protocol was already found in another dataset
+                //add dataset to list of datasets in which the protocol occurs
+                var datasetIdentifiers = protocolsMap[rootProtocol];
+                if(!datasetIdentifiers) {
+                    datasetIdentifiers = [];
+                }
+                datasetIdentifiers.push(datasetIdentifier);
+                protocolsMap[rootProtocol.identifier] = datasetIdentifiers;
+                $.each(rootProtocol.subprotocols.items, function(key, protocol) {
+                      if(protocol.subprotocols.length>0){
+                          protocolsMap = getSubProtocols(datasetIdentifier, protocol.href, protocolsMap);
+                      }
+                });
+                return protocolsMap;
+            }
+
@@ -89,8 +114,9 @@
-			restApi.getAsync('/api/v1/protocol', ['features'], null, function(protocols) {
-				var items = [];
-				items.push('<div class="accordion" id="accordion">');
-				
-				var nrProtocols = 0;
-				var firstProtocol = true;
-				$.each(protocols.items, function(key, protocol) {
-					// determine features that reference the given entity
+            restApi.getAsync('/api/v1/protocol', ['features'], null, function(protocols) {
+                var items = [];
+                items.push('<div class="accordion" id="accordion">');
+
+                var nrProtocols = 0;
+                var firstProtocol = true;
+                $.each(protocols.items, function(key, protocol) {
+                    var datasets = protocolsMap[protocol.identifier];
+                   	// determine features that reference the given entity
@@ -153,6 +179,9 @@
-								if(searchHit.columnValueMap[feature.identifier]){
-									items.push('<td>' + formatTableCellValue(searchHit.columnValueMap[feature.identifier],feature.dataType) + '</td>');
-								}
-								else{
-									items.push('<td/>');
-								}
+                                //only include data that was found in a dataset where the current protocol is part of
+								if(datasets.indexOf(searchHit.columnValueMap['partOfDataset'])!=-1){
+                                    if(searchHit.columnValueMap[feature.identifier]){
+                                        items.push('<td>' + formatTableCellValue(searchHit.columnValueMap[feature.identifier],feature.dataType) + '</td>');
+                                    }
+                                    else{
+                                        items.push('<td/>');
+                                    }
+                                }
@@ -164,3 +193,6 @@
-							if(typeof ns.dataExplorerUrl !== 'undefined'){
-								items.push('<td><a href="'+ns.dataExplorerUrl+'?dataset=' + searchHit.documentType + '" target="_blank">View data set</a></td>');
-							}
+                            //only include data that was found in a dataset where the current protocol is part of
+                            if(datasets.indexOf(searchHit.columnValueMap['partOfDataset'])!=-1){
+                                if(typeof ns.dataExplorerUrl !== 'undefined'){
+                                    items.push('<td><a href="'+ns.dataExplorerUrl+'?dataset=' + searchHit.documentType + '" target="_blank">View data set</a></td>');
+                                }
+                            }

