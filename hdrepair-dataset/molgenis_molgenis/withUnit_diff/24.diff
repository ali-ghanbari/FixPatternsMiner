diff --git a/molgenis-compute-core/src/main/java/org/molgenis/compute5/generators/EnvironmentGenerator.java b/molgenis-compute-core/src/main/java/org/molgenis/compute5/generators/EnvironmentGenerator.java
index dc7765e..01dbbe6 100644
--- a/molgenis-compute-core/src/main/java/org/molgenis/compute5/generators/EnvironmentGenerator.java
+++ b/molgenis-compute-core/src/main/java/org/molgenis/compute5/generators/EnvironmentGenerator.java
@@ -186 +186 @@
-						continue;
+						break;
diff --git a/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/parameters.csv b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/parameters.csv
new file mode 100644
index 0000000..d466958
--- /dev/null
+++ b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/parameters.csv
@@ -0,0 +1,5 @@
+guest,happening
+George,vacation
+George,"make a nice computeje 5"
+Lennart,vacation
+Lennart,"test computeje 5"
diff --git a/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step1.sh b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step1.sh
new file mode 100644
index 0000000..390ba71
--- /dev/null
+++ b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step1.sh
@@ -0,0 +1,9 @@
+#string gu
+#string hap
+#output out1
+#output out2
+
+# Let's do something nice
+echo "${gu} is going to ${hap}"
+out1="${gu}"
+out2="${hap}"
diff --git a/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step2.sh b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step2.sh
new file mode 100644
index 0000000..3116583
--- /dev/null
+++ b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/protocols/step2.sh
@@ -0,0 +1,18 @@
+#string guest
+#list strings
+#list strings2
+
+echo "Result of step1.sh:"
+for s in "${strings[@]}"
+do
+    echo ${s}
+done
+
+for s in "${strings2[@]}"
+do
+    echo ${s}
+done
+
+
+
+echo "(FOR TESTING PURPOSES: your runid is ${runid})"
diff --git a/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/workflow.csv b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/workflow.csv
new file mode 100644
index 0000000..8a0784e
--- /dev/null
+++ b/molgenis-compute-core/src/main/resources/workflows/benchmark.5.1.a/workflow.csv
@@ -0,0 +1,3 @@
+step,protocol,dependencies
+step1,protocols/step1.sh,gu=guest;hap=happening
+step2,protocols/step2.sh,strings=step1.out1;strings2=step1.out2
diff --git a/molgenis-compute-core/src/test/java/org/molgenis/compute5/ComputeCommandLineTest.java b/molgenis-compute-core/src/test/java/org/molgenis/compute5/ComputeCommandLineTest.java
index 5d5f304..35c2f7f 100644
--- a/molgenis-compute-core/src/test/java/org/molgenis/compute5/ComputeCommandLineTest.java
+++ b/molgenis-compute-core/src/test/java/org/molgenis/compute5/ComputeCommandLineTest.java
@@ -660,0 +661,64 @@
+	public void testRunLocally5_1_a() throws Exception
+	{
+		System.out.println("--- Start TestRunLocally ---");
+
+		File f = new File(outputDir);
+		FileUtils.deleteDirectory(f);
+		Assert.assertFalse(f.exists());
+
+		f = new File(".compute.properties");
+		FileUtils.deleteQuietly(f);
+		Assert.assertFalse(f.exists());
+
+		ComputeCommandLine.main(new String[]{
+				"--generate",
+				"--run",
+				"--workflow",
+				"src/main/resources/workflows/benchmark.5.1.a/workflow.csv",
+				"--parameters",
+				"src/main/resources/workflows/benchmark.5.1.a/parameters.csv",
+				"--rundir",
+				"target/test/benchmark/run"
+		});
+
+		System.out.println("--- Test Created Files ---");
+
+		File file = new File(outputDir + "/step1_0.sh.started");
+		if (!file.exists())
+		{
+			Assert.fail("step1_0.sh.started is not generated");
+		}
+
+		file = new File(outputDir + "/step1_1.sh.started");
+		if (!file.exists())
+		{
+			Assert.fail("step1_1.sh.started is not generated");
+		}
+
+		file = new File(outputDir + "/step2_0.sh.started");
+		if (!file.exists())
+		{
+			Assert.fail("step2_0.sh.started is not generated");
+		}
+
+		file = new File(outputDir + "/step1_0.sh.finished");
+		if (!file.exists())
+		{
+			Assert.fail("step1_0.sh.finished is not generated");
+		}
+
+		file = new File(outputDir + "/step1_1.sh.finished");
+		if (!file.exists())
+		{
+			Assert.fail("step1_1.sh.finished is not generated");
+		}
+
+		file = new File(outputDir + "/step2_0.sh.finished");
+		if (!file.exists())
+		{
+			Assert.fail("step2_0.sh.finished is not generated");
+		}
+	}
+
+
+	@Test

