diff --git a/molgenis-core/src/main/java/org/molgenis/util/EntityPager.java b/molgenis-core/src/main/java/org/molgenis/util/EntityPager.java
index 550fdb0..0443bca 100644
--- a/molgenis-core/src/main/java/org/molgenis/util/EntityPager.java
+++ b/molgenis-core/src/main/java/org/molgenis/util/EntityPager.java
@@ -35 +35 @@
-		if (this.start + this.num >= this.total - 1) return null;
+		if (this.start + this.num > this.total - 1) return null;
diff --git a/molgenis-core/src/test/java/org/molgenis/util/EntityPagerTest.java b/molgenis-core/src/test/java/org/molgenis/util/EntityPagerTest.java
new file mode 100644
index 0000000..53088e0
--- /dev/null
+++ b/molgenis-core/src/test/java/org/molgenis/util/EntityPagerTest.java
@@ -0,0 +1,59 @@
+package org.molgenis.util;
+
+import static org.testng.Assert.assertEquals;
+import static org.testng.Assert.assertNull;
+
+import org.testng.annotations.Test;
+
+public class EntityPagerTest
+{
+	@Test
+	public void getNextStart()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(2, 5, 10, null);
+		assertEquals(entityPager.getNextStart(), Integer.valueOf(7));
+	}
+
+	@Test
+	public void getNextStart_limit()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(2, 5, 4, null);
+		assertNull(entityPager.getNextStart());
+	}
+
+	@Test
+	public void getNextStart_borderLeft()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(0, 3, 10, null);
+		assertEquals(entityPager.getNextStart(), Integer.valueOf(3));
+	}
+
+	@Test
+	public void getNextStart_borderRight()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(0, 1, 2, null);
+		assertEquals(entityPager.getNextStart(), Integer.valueOf(1));
+	}
+
+	@Test
+	public void getPrevStart()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(8, 5, 10, null);
+		assertEquals(entityPager.getPrevStart(), Integer.valueOf(3));
+	}
+
+	@Test
+	public void getPrevStart_offset()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(0, 3, 10, null);
+		assertNull(entityPager.getPrevStart());
+	}
+
+	@Test
+	public void getPrevStart_borderLeft()
+	{
+		EntityPager<Entity> entityPager = new EntityPager<Entity>(3, 3, 10, null);
+		assertEquals(entityPager.getPrevStart(), Integer.valueOf(0));
+	}
+
+}

