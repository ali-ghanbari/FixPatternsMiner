diff --git a/ide/src/main/resources/ide.js b/ide/src/main/resources/ide.js
index a731ba7..b37d975 100644
--- a/ide/src/main/resources/ide.js
+++ b/ide/src/main/resources/ide.js
@@ -1,3 +1 @@
-$(document)
-.ready(
-function() {
+$(document).ready(function() {
@@ -5,18 +3,18 @@
-// offsetX Y set in the main page as global variable.
-var tree = $("#tree").jstree({
-"core" : {
-"animation" : 0,
-"load_open" : true
-},
-"json_data" : {
-"ajax" : {
-"url" : "tree"
-}
-},
-"themes" : {
-"theme" : "apple",
-// "dots" : false,
-// "icons" : false
-},
-"plugins" : [ "themes", "json_data", "ui" ]
-});
+	// offsetX Y set in the main page as global variable.
+	var tree = $("#tree").jstree({
+		"core" : {
+			"animation" : 0,
+			"load_open" : true
+		},
+		"json_data" : {
+			"ajax" : {
+				"url" : "tree"
+			}
+		},
+		"themes" : {
+			"theme" : "apple",
+			// "dots" : false,
+			// "icons" : false
+		},
+		"plugins" : ["themes", "json_data", "ui"]
+	});
@@ -24 +22 @@
-tree.bind("select_node.jstree", function(e, data) {
+	tree.bind("select_node.jstree", function(e, data) {
@@ -26 +24 @@
-});
+	});
@@ -28,4 +26,4 @@
-tree.bind("hover_node.jstree", function(e, data) {
-if (!lock) {
-setSelected(data);
-}
+	tree.bind("hover_node.jstree", function(e, data) {
+		if(!lock) {
+			setSelected(data);
+		}
@@ -33 +31,18 @@
-});
+	});
+	var root;
+	tree.bind("loaded.jstree", function(event, data) {
+		root = tree.jstree('get_json')[0];
+		tree.jstree("open_all");
+	});
+	tree.bind("refresh.jstree", function(event, data) {
+		root = tree.jstree('get_json')[0];
+		tree.jstree("open_all");
+	});
+	setSelected = function(node) {
+		var rect;
+		var type;
+		var ref;
+		var name;
+		var label;
+		var value;
+		var l10n;
@@ -35,9 +50,16 @@
-var root;
-tree.bind("loaded.jstree", function(event, data) {
-root = tree.jstree('get_json')[0];
-tree.jstree("open_all");
-});
-tree.bind("refresh.jstree", function(event, data) {
-root = tree.jstree('get_json')[0];
-tree.jstree("open_all");
-});
+		if(node.metadata) {// from tree parsing, json node
+			rect = node.metadata.rect;
+			type = node.metadata.type;
+			ref = node.metadata.reference;
+			name = node.metadata.name;
+			label = node.metadata.label;
+			value = node.metadata.value;
+			l10n = node.metadata.l10n
+		} else {// from listener, jstree node
+			rect = node.rslt.obj.data("rect");
+			type = node.rslt.obj.data('type');
+			ref = node.rslt.obj.data('reference');
+			name = node.rslt.obj.data('name');
+			label = node.rslt.obj.data('label');
+			value = node.rslt.obj.data('value');
+			l10n = node.rslt.obj.data('l10n');
@@ -45,8 +67,4 @@
-setSelected = function(node) {
-var rect;
-var type;
-var ref;
-var name;
-var label;
-var value;
-var l10n;
+		}
+		tree.jstree('deselect_all');
+		tree.jstree('select_node', '#' + ref);
+		var translationFound = (l10n.matches != 0);
@@ -54,16 +72,13 @@
-if (node.metadata) { // from tree parsing, json node
-rect = node.metadata.rect;
-type = node.metadata.type;
-ref = node.metadata.reference;
-name = node.metadata.name;
-label = node.metadata.label;
-value = node.metadata.value;
-l10n = node.metadata.l10n
-} else { // from listener, jstree node
-rect = node.rslt.obj.data("rect");
-type = node.rslt.obj.data('type');
-ref = node.rslt.obj.data('reference');
-name = node.rslt.obj.data('name');
-label = node.rslt.obj.data('label');
-value = node.rslt.obj.data('value');
-l10n = node.rslt.obj.data('l10n');
+		highlight(rect.x, rect.y, rect.h, rect.w, translationFound);
+		showDetails(type, ref, name, label, value, rect, l10n);
+		showActions(type, ref);
+	}
+	showActions = function(type, ref) {
+		// check action per type.
+		$('#reference').html("<input type='hidden' name='reference' value='" + ref + "'>");
+	}
+	highlight = function(x, y, h, w, translationFound) {
+		$('#highlight').css('left', x + realOffsetX + 'px');
+		$('#highlight').css('top', y + realOffsetY + 'px');
+		$('#highlight').css('height', h + 'px');
+		$('#highlight').css('width', w + 'px');
@@ -71,4 +86,7 @@
-}
-tree.jstree('deselect_all');
-tree.jstree('select_node', '#' + ref);
-var translationFound = (l10n.matches != 0);
+		var color;
+		if(translationFound) {
+			color = "blue";
+		} else {
+			color = "yellow";
+		}
+		$('#highlight').css("background-color", color);
@@ -76,5 +94,3 @@
-highlight(rect.x, rect.y, rect.h, rect.w,
-translationFound);
-showDetails(type, ref, name, label, value, rect, l10n);
-showActions(type, ref);
-}
+	}
+	showDetails = function(type, ref, na, label, value, rect, l10n) {
+		var prettyL10N = "";
@@ -82,6 +98,4 @@
-showActions = function(type, ref) {
-// check action per type.
-$('#reference').html(
-"<input type='hidden' name='reference' value='"
-+ ref + "'>");
-}
+		if(l10n) {
+			prettyL10N = "<h3>L10N</h3>";
+			var matches = l10n.matches;
+			prettyL10N += "<p><b>Matches</b>: " + matches + "</p>";
@@ -89,5 +103,8 @@
-highlight = function(x, y, h, w, translationFound) {
-$('#highlight').css('left', x + realOffsetX + 'px');
-$('#highlight').css('top', y + realOffsetY + 'px');
-$('#highlight').css('height', h + 'px');
-$('#highlight').css('width', w + 'px');
+			if(matches > 0) {
+				prettyL10N += "<p><b>Key</b>: " + l10n.key + "</p>";
+				var langs = l10n.langs;
+				for(var name in langs) {
+					var result = langs[name];
+					for(var a in result) {
+						prettyL10N += "<p><b>" + a + "</b> : " + result[a] + "</p>";
+					}
@@ -95,7 +112,2 @@
-var color;
-if (translationFound) {
-color = "blue";
-} else {
-color = "yellow";
-}
-$('#highlight').css("background-color", color);
+				}
+			}
@@ -103 +115,3 @@
-}
+		} else {
+			prettyL10N = "no l10n for --" + name + "--";
+		}
@@ -105,3 +119 @@
-showDetails = function(type, ref, na, label, value, rect,
-l10n) {
-var prettyL10N = "";
+		$('#details').html("<h3>Details</h3>" + "<p><b>Type</b>: " + type + "</p>" + "<p><b>Reference</b>: " + ref + "</p>" + "<p><b>Name</b>: " + na + "</p>" + "<p><b>Label</b>: " + label + "</p>" + "<p><b>Value</b>: " + value + "</p>" + "<p><b>Rect</b>: x=" + rect.x + ",y=" + rect.y + ",h=" + rect.h + "w=" + rect.w + "</p>" + prettyL10N);
@@ -109,4 +121,3 @@
-if (l10n) {
-prettyL10N = "<h3>L10N</h3>";
-var matches = l10n.matches;
-prettyL10N += "<p><b>Matches</b>: " + matches + "</p>";
+	};
+	var root;
+	$("#mouseOver").mousemove(function(e) {
@@ -114,9 +125,14 @@
-if (matches > 0) {
-prettyL10N += "<p><b>Key</b>: " + l10n.key+ "</p>";
-var langs = l10n.langs;
-for ( var name in langs) {
-var result = langs[name];
-for ( var a in result) {
-prettyL10N += "<p><b>" + a + "</b> : "
-+ result[a]+"</p>";
-}
+		if(!lock) {
+			var x = e.pageX / scale - realOffsetX;
+			var y = e.pageY / scale - realOffsetY;
+			// x = x / scale;
+			// y = y / scale;
+			console.log(x + "," + y);
+			var finder = new CandidateFinder(x, y, root);
+			var node = finder.getNode();
+			if(node) {
+				setSelected(node);
+			} else {
+				console.log('couldn t find element at ' + x + ' , ' + y + root);
+			}
+		}
@@ -124,2 +140 @@
-}
-}
+	});
@@ -127,3 +142,12 @@
-} else {
-prettyL10N = "no l10n for --" + name + "--";
-}
+	$(document).keydown(function(e) {
+		if(e.ctrlKey) {
+			toggleLock();
+		}
+	});
+	var lock = false;
+	toggleLock = function() {
+		lock = !lock;
+	};
+	function CandidateFinder(x, y, rootNode) {
+		this.x = x;
+		this.y = y;
@@ -131,11 +155,2 @@
-$('#details').html(
-"<h3>Details</h3>" + "<p><b>Type</b>: "
-+ type + "</p>"
-+ "<p><b>Reference</b>: " + ref + "</p>"
-+ "<p><b>Name</b>: " + na + "</p>"
-+ "<p><b>Label</b>: " + label + "</p>"
-+ "<p><b>Value</b>: " + value + "</p>"
-+ "<p><b>Rect</b>: x=" + rect.x + ",y="
-+ rect.y + ",h=" + rect.h + "w="
-+ rect.w + "</p>"
-+ prettyL10N );
+		this.matchScore = -1;
+		this.candidate = null;
@@ -143 +158,8 @@
-};
+		this.rootNode = rootNode;
+		// (this.x , this.y) is inside the area covered by
+		// this node.
+		this._hasCorrectPosition = function(node) {
+			var currentX = node.metadata.rect.x;
+			var currentY = node.metadata.rect.y;
+			var currentH = node.metadata.rect.h;
+			var currentW = node.metadata.rect.w;
@@ -145,4 +167,6 @@
-var root;
-$("#mouseOver")
-.mousemove(
-function(e) {
+			if((currentX <= this.x) && (this.x <= (currentX + currentW))) {
+				if((currentY <= this.y) && (this.y <= (currentY + currentH))) {
+					return true;
+				}
+			}
+			return false;
@@ -150,22 +174,15 @@
-if (!lock) {
-var x = e.pageX / scale
-- realOffsetX;
-var y = e.pageY / scale
-- realOffsetY;
-// x = x / scale;
-// y = y / scale;
-console.log(x + "," + y);
-var finder = new CandidateFinder(x,
-y, root);
-var node = finder.getNode();
-if (node) {
-setSelected(node);
-} else {
-console
-.log('couldn t find element at '
-+ x
-+ ' , '
-+ y
-+ root);
-}
-}
+		};
+		this._assignIfBetterCandidate = function(newNode) {
+			if(this._hasCorrectPosition(newNode)) {
+				var surface = (newNode.metadata.rect.h * newNode.metadata.rect.w);
+				if(this.candidate) {
+					if(surface < this.matchScore) {
+						this.matchScore = surface;
+						this.candidate = newNode;
+					}
+				} else {
+					this.matchScore = surface;
+					this.candidate = newNode;
+				}
+			}
+		};
@@ -173 +190,4 @@
-});
+		this.getNode = function() {
+			this._getCandidate(this.rootNode);
+			return this.candidate;
+		};
@@ -175,68 +195,10 @@
-$(document).keydown(function(e) {
-if (e.ctrlKey) {
-toggleLock();
-}
-});
-
-var lock = false;
-toggleLock = function() {
-lock = !lock;
-};
-
-function CandidateFinder(x, y, rootNode) {
-this.x = x;
-this.y = y;
-
-this.matchScore = -1;
-this.candidate = null;
-
-this.rootNode = rootNode;
-// (this.x , this.y) is inside the area covered by
-// this node.
-this._hasCorrectPosition = function(node) {
-var currentX = node.metadata.rect.x;
-var currentY = node.metadata.rect.y;
-var currentH = node.metadata.rect.h;
-var currentW = node.metadata.rect.w;
-
-if ((currentX <= this.x)
-&& (this.x <= (currentX + currentW))) {
-if ((currentY <= this.y)
-&& (this.y <= (currentY + currentH))) {
-return true;
-}
-}
-return false;
-
-};
-this._assignIfBetterCandidate = function(newNode) {
-if (this._hasCorrectPosition(newNode)) {
-var surface = (newNode.metadata.rect.h * newNode.metadata.rect.w);
-if (this.candidate) {
-if (surface < this.matchScore) {
-this.matchScore = surface;
-this.candidate = newNode;
-}
-} else {
-this.matchScore = surface;
-this.candidate = newNode;
-}
-}
-};
-
-this.getNode = function() {
-this._getCandidate(this.rootNode);
-return this.candidate;
-};
-
-this._getCandidate = function(from) {
-this._assignIfBetterCandidate(from);
-if (from.children) {
-for ( var i = 0; i < from.children.length; i++) {
-var child = from.children[i];
-this._getCandidate(child);
-}
-}
-};
-
-}
+		this._getCandidate = function(from) {
+			this._assignIfBetterCandidate(from);
+			if(from.children) {
+				for(var i = 0; i < from.children.length; i++) {
+					var child = from.children[i];
+					this._getCandidate(child);
+				}
+			}
+		};
+	}
@@ -261 +222,0 @@
-
@@ -263,10 +223,0 @@
-<<<<<<< HEAD
-var width = window.innerWidth;
-var leftForFrame = width * (1-treeAndDetailInPercent);
-return leftForFrame;
-=======
-	var width = window.innerWidth;
-	var leftForFrame =  width * (1-treeAndDetailInPercent);
-	return leftForFrame;
->>>>>>> master
-};
@@ -273,0 +225,4 @@
+	var width = window.innerWidth;
+	var leftForFrame = width * (1 - treeAndDetailInPercent);
+	return leftForFrame;
+};
@@ -276 +230,0 @@
-
@@ -277,0 +232,8 @@
+	device = d;
+	orientation = o;
+	var FRAME_IPAD_H = 1108;
+	var FRAME_IPAD_W = 852;
+	var SCREEN_IPAD_H = 1024;
+	var SCREEN_IPAD_W = 768;
+	var SCREEN_TO_TOP_IPAD = 42;
+	var SCREEN_TO_LEFT_IPAD = 42;
@@ -279,8 +241,6 @@
-device =d;
-orientation = o;
-var FRAME_IPAD_H = 1108;
-var FRAME_IPAD_W = 852;
-var SCREEN_IPAD_H = 1024;
-var SCREEN_IPAD_W = 768;
-var SCREEN_TO_TOP_IPAD = 42;
-var SCREEN_TO_LEFT_IPAD = 42;
+	var FRAME_IPHONE_H = 716;
+	var FRAME_IPHONE_W = 368;
+	var SCREEN_IPHONE_H = 480;
+	var SCREEN_IPHONE_W = 320;
+	var SCREEN_TO_TOP_IPHONE = 118;
+	var SCREEN_TO_LEFT_IPHONE = 24;
@@ -288,24 +248,17 @@
-var FRAME_IPHONE_H = 716;
-var FRAME_IPHONE_W = 368;
-var SCREEN_IPHONE_H = 480;
-var SCREEN_IPHONE_W = 320;
-var SCREEN_TO_TOP_IPHONE = 118;
-var SCREEN_TO_LEFT_IPHONE = 24;
-
-if (device === 'ipad') {
-frame_h = FRAME_IPAD_H;
-frame_w = FRAME_IPAD_W;
-screen_h = SCREEN_IPAD_H;
-screen_w = SCREEN_IPAD_W;
-to_top = SCREEN_TO_TOP_IPAD;
-to_left = SCREEN_TO_LEFT_IPAD;
-} else if (device === 'iphone') {
-frame_h = FRAME_IPHONE_H;
-frame_w = FRAME_IPHONE_W;
-screen_h = SCREEN_IPHONE_H;
-screen_w = SCREEN_IPHONE_W;
-to_top = SCREEN_TO_TOP_IPHONE;
-to_left = SCREEN_TO_LEFT_IPHONE;
-} else {
-console.log("error, wrong device :" + device);
-}
+	if(device === 'ipad') {
+		frame_h = FRAME_IPAD_H;
+		frame_w = FRAME_IPAD_W;
+		screen_h = SCREEN_IPAD_H;
+		screen_w = SCREEN_IPAD_W;
+		to_top = SCREEN_TO_TOP_IPAD;
+		to_left = SCREEN_TO_LEFT_IPAD;
+	} else if(device === 'iphone') {
+		frame_h = FRAME_IPHONE_H;
+		frame_w = FRAME_IPHONE_W;
+		screen_h = SCREEN_IPHONE_H;
+		screen_w = SCREEN_IPHONE_W;
+		to_top = SCREEN_TO_TOP_IPHONE;
+		to_left = SCREEN_TO_LEFT_IPHONE;
+	} else {
+		console.log("error, wrong device :" + device);
+	}
@@ -314 +266,0 @@
-
@@ -316,8 +268 @@
-<<<<<<< HEAD
-var neededSpace = frame_w;
-if (orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT'
-|| orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPELEFT') {
-neededSpace = frame_h;
-}
-var leftInPixel = findFrameSizeInPixels();
-=======
+
@@ -325,2 +270 @@
-	if (orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT'
-			|| orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPELEFT') {
+	if(orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT' || orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPELEFT') {
@@ -330 +274,4 @@
->>>>>>> master
+	scale = leftInPixel / neededSpace;
+	if(scale > 1) {
+		scale = 1;
+	}
@@ -332,4 +279,3 @@
-scale = leftInPixel / neededSpace;
-if (scale > 1) {
-scale = 1;
-}
+	$('#simulator').css('-moz-transform', 'scale(' + scale + ')');
+	$('#screen').css('top', to_top + 'px');
+	$('#screen').css('left', to_left + 'px');
@@ -337,3 +283,6 @@
-$('#simulator').css('-moz-transform', 'scale(' + scale + ')');
-$('#screen').css('top', to_top + 'px');
-$('#screen').css('left', to_left + 'px');
+	var angle = 0;
+	var mouseOver_w = screen_w;
+	var mouseOver_h = screen_h;
+	var width = frame_w;
+	realOffsetX = margin + to_left;
+	realOffsetY = margin + to_top;
@@ -341,4 +290,4 @@
-var angle = 0;
-var mouseOver_w = screen_w;
-var mouseOver_h = screen_h;
-var width = frame_w;
+	if(orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT') {
+		angle = 90;
+		$('#rotationCenter').css('left', (frame_h + margin) + 'px');
+		$('#rotationCenter').css('top', margin + 'px');
@@ -346,2 +295,6 @@
-realOffsetX = margin + to_left;
-realOffsetY = margin + to_top;
+		// for landscape, w becomes h and h becomes w.
+		mouseOver_w = screen_h;
+		mouseOver_h = screen_w;
+		realOffsetX = margin + to_top;
+		realOffsetY = margin + to_left;
+		width = frame_h;
@@ -349,4 +302,9 @@
-if (orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT') {
-angle = 90;
-$('#rotationCenter').css('left', (frame_h + margin) + 'px');
-$('#rotationCenter').css('top', margin + 'px');
+	} else if(orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPELEFT') {
+		angle = -90;
+		$('#rotationCenter').css('left', margin + 'px');
+		$('#rotationCenter').css('top', (frame_w + margin) + 'px');
+		mouseOver_w = screen_h;
+		mouseOver_h = screen_w;
+		realOffsetX = margin + to_top;
+		realOffsetY = margin + to_left;
+		width = frame_h;
@@ -354,3 +312,4 @@
-// for landscape, w becomes h and h becomes w.
-mouseOver_w = screen_h;
-mouseOver_h = screen_w;
+	} else if(orientation === 'UIA_DEVICE_ORIENTATION_PORTRAIT') {
+		angle = 0;
+		$('#rotationCenter').css('left', margin + 'px');
+		$('#rotationCenter').css('top', margin + 'px');
@@ -358,2 +317,4 @@
-realOffsetX = margin + to_top;
-realOffsetY = margin + to_left;
+	} else if(orientation === 'UIA_DEVICE_ORIENTATION_PORTRAIT_UPSIDEDOWN') {
+		angle = 180;
+		$('#rotationCenter').css('left', frame_w + margin + 'px');
+		$('#rotationCenter').css('top', frame_h + margin + 'px');
@@ -361 +322 @@
-width = frame_h;
+	}
@@ -363,6 +324,4 @@
-} else if (orientation === 'UIA_DEVICE_ORIENTATION_LANDSCAPELEFT') {
-angle = -90;
-$('#rotationCenter').css('left', margin + 'px');
-$('#rotationCenter').css('top', (frame_w + margin) + 'px');
-mouseOver_w = screen_h;
-mouseOver_h = screen_w;
+	$('#mouseOver').css('top', realOffsetY + 'px');
+	$('#mouseOver').css('left', realOffsetX + 'px');
+	$('#mouseOver').css('height', mouseOver_h + 'px');
+	$('#mouseOver').css('width', mouseOver_w + 'px');
@@ -370,25 +329 @@
-realOffsetX = margin + to_top;
-realOffsetY = margin + to_left;
-
-width = frame_h;
-
-} else if (orientation === 'UIA_DEVICE_ORIENTATION_PORTRAIT') {
-angle = 0;
-$('#rotationCenter').css('left', margin + 'px');
-$('#rotationCenter').css('top', margin + 'px');
-
-} else if (orientation === 'UIA_DEVICE_ORIENTATION_PORTRAIT_UPSIDEDOWN') {
-angle = 180;
-$('#rotationCenter').css('left', frame_w + margin + 'px');
-$('#rotationCenter').css('top', frame_h + margin + 'px');
-
-}
-
-$('#mouseOver').css('top', realOffsetY + 'px');
-$('#mouseOver').css('left', realOffsetX + 'px');
-$('#mouseOver').css('height', mouseOver_h + 'px');
-$('#mouseOver').css('width', mouseOver_w + 'px');
-
-$('#rotationCenter').css('-moz-transform', 'rotate(' + angle + 'deg)');
-
-
+	$('#rotationCenter').css('-moz-transform', 'rotate(' + angle + 'deg)');
@@ -399 +334 @@
-resize();
+	resize();
diff --git a/server/src/main/java/org/uiautomation/ios/server/instruments/CommunicationChannel.java b/server/src/main/java/org/uiautomation/ios/server/instruments/CommunicationChannel.java
index 4491d01..c9daf3f 100644
--- a/server/src/main/java/org/uiautomation/ios/server/instruments/CommunicationChannel.java
+++ b/server/src/main/java/org/uiautomation/ios/server/instruments/CommunicationChannel.java
@@ -42 +42 @@
-      return condition.await(60,TimeUnit.SECONDS);
+      return condition.await(60, TimeUnit.SECONDS);

