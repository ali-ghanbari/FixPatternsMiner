diff --git a/src/main/java/net/floodlightcontroller/devicemanager/Device.java b/src/main/java/net/floodlightcontroller/devicemanager/Device.java
index d25d619..69bd9b6 100755
--- a/src/main/java/net/floodlightcontroller/devicemanager/Device.java
+++ b/src/main/java/net/floodlightcontroller/devicemanager/Device.java
@@ -369 +369 @@
-                + IPv4.fromIPv4AddressCollection(networkAddresses.keySet()) + "]";
+                + "[" + IPv4.fromIPv4AddressCollection(networkAddresses.keySet()) + "]";
diff --git a/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java b/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java
index 6fbc303..fec599b 100644
--- a/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java
+++ b/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java
@@ -336,3 +336,7 @@
-        // Sleep to make sure the aging thread has run
-        Thread.sleep(Math.max(DeviceManagerImpl.DEVICE_NA_MAX_AGE, DeviceManagerImpl.DEVICE_AP_MAX_AGE)*1000);
-        deviceManager.removeAgedDevices(new Date());
+        // Wait until device's network address expired.
+        Date boundaryTime = new Date(new Date().getTime() + DeviceManagerImpl.DEVICE_MAX_AGE*1000);
+        while (deviceManager.getDeviceByDataLayerAddress(dataLayerSource).getNetworkAddresses().size() != 0) {
+        	Date curTime = new Date();
+        	assertFalse(curTime.after(boundaryTime));
+        	deviceManager.removeAgedDevices(curTime);
+        }
@@ -349,7 +353,8 @@
-        // Sleep a bit longer seconds to allow device age
-        Thread.sleep((DeviceManagerImpl.DEVICE_MAX_AGE - 
-                      Math.max(DeviceManagerImpl.DEVICE_NA_MAX_AGE, DeviceManagerImpl.DEVICE_AP_MAX_AGE))*1000);
-        deviceManager.removeAgedDevices(new Date());
-
-        assertNull(deviceManager.getDeviceByDataLayerAddress(dataLayerSource));
-
+        // Wait until device expired.
+        boundaryTime = new Date(new Date().getTime() + DeviceManagerImpl.DEVICE_MAX_AGE*1000);
+        while (deviceManager.getDeviceByDataLayerAddress(dataLayerSource) != null) {
+        	Date curTime = new Date();
+        	assertFalse(curTime.after(boundaryTime));
+        	deviceManager.removeAgedDevices(curTime);
+        }
+ 

