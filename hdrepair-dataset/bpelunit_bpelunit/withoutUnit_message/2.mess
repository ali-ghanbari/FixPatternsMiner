NamespaceContextImpl: fixed bug with multiple prefixes for same URI

The class has been written to supposedly handle the case when there are
several prefixes for the same URI, but fails to do so correctly. I spent
a good 2 hours to debug this, so I might as well document it :-).

The bug works like this. Suppose we had something like:

  <doc xmlns:foo="abc" xmlns:bar="abc">...</doc>

Suppose we call setNamespace("foo", "abc") first, and then
setNamespace("bar", "abc"). It'd work like this:

- It'd wrongly check if an entry for "foo" exists. The problem is
  that foo is the prefix, *not* the namespace that is really supposed
  to be the key of the internal map.

- Since it doesn't exist, it'd create the prefix list, add "foo" to
  it and set the entry for that namespace. This part is correct.

- Now it'd check whether an entry for "bar" exists. It doesn't, obviously.

- Since it doesn't exist, it clobbers the entry we set previously for
  that namespace with a new prefix list which only has "bar" in it.
  It's completely forgotten about the "foo" prefix now.

The fix is simple enough: just make sure we check the entry exists
using the *namespace* and not the *prefix*, as in the rest of the class.

