diff --git a/coopr-server/src/test/java/co/cask/coopr/BaseTest.java b/coopr-server/src/test/java/co/cask/coopr/BaseTest.java
index aa28890..6425550 100644
--- a/coopr-server/src/test/java/co/cask/coopr/BaseTest.java
+++ b/coopr-server/src/test/java/co/cask/coopr/BaseTest.java
@@ -100,0 +101 @@
+    conf.set(Constants.INTERNAL_PORT, "7777");
diff --git a/coopr-server/src/test/java/co/cask/coopr/common/queue/internal/ElementsTrackingQueueTestBase.java b/coopr-server/src/test/java/co/cask/coopr/common/queue/internal/ElementsTrackingQueueTestBase.java
index 1f4b2d2..ae15f63 100644
--- a/coopr-server/src/test/java/co/cask/coopr/common/queue/internal/ElementsTrackingQueueTestBase.java
+++ b/coopr-server/src/test/java/co/cask/coopr/common/queue/internal/ElementsTrackingQueueTestBase.java
@@ -171 +171 @@
-  @Test(timeout = 30000)
+  @Test(timeout = 40000)
diff --git a/coopr-server/src/test/java/co/cask/coopr/http/MutualAuthServerTest.java b/coopr-server/src/test/java/co/cask/coopr/http/MutualAuthServerTest.java
index f3df3fa..a42712a 100644
--- a/coopr-server/src/test/java/co/cask/coopr/http/MutualAuthServerTest.java
+++ b/coopr-server/src/test/java/co/cask/coopr/http/MutualAuthServerTest.java
@@ -67 +67 @@
-    conf.set(Constants.INTERNAL_PORT, "0");
+    internalHandlerServer.stopAndWait();
@@ -113,3 +113,3 @@
-    HttpResponse response = doSecureGet(String.format("https://%s:%d%s/tasks/take", HOSTNAME,
-                                                      internalHandlerServer.getBindAddress().getPort(),
-                                                      Constants.API_BASE), gson.toJson(takeRequest));
+    HttpResponse response = doSecurePost(String.format("https://%s:%d%s/tasks/take", HOSTNAME,
+                                                       internalHandlerServer.getBindAddress().getPort(),
+                                                       Constants.API_BASE), gson.toJson(takeRequest));
@@ -120,0 +121,19 @@
+    String tenantId = USER1_ACCOUNT.getTenantId();
+    ClusterTask clusterTask = new ClusterTask(
+      ProvisionerAction.CREATE, TaskId.fromString("1-1-1"), "node_id", "service", ClusterAction.CLUSTER_CREATE);
+    clusterStore.writeClusterTask(clusterTask);
+    ClusterJob clusterJob = new ClusterJob(JobId.fromString("1-1"), ClusterAction.CLUSTER_CREATE);
+    clusterStore.writeClusterJob(clusterJob);
+    TaskConfig taskConfig = new TaskConfig(
+      NodeProperties.builder().build(),
+      Entities.ProviderExample.JOYENT,
+      ImmutableMap.<String, NodeProperties>of(),
+      new TaskServiceAction("svcA", new ServiceAction("shell", ImmutableMap.<String, String>of())),
+      new JsonObject(),
+      new JsonObject()
+    );
+    SchedulableTask schedulableTask= new SchedulableTask(clusterTask, taskConfig);
+    provisionerQueues.add(tenantId, new Element(clusterTask.getTaskId(), gson.toJson(schedulableTask)));
+
+    final TakeTaskRequest takeRequest = new TakeTaskRequest("worker1", PROVISIONER_ID, TENANT_ID);
+
@@ -123,3 +142,3 @@
-        return doSecureGet(String.format("http://%s:%d%s/tasks/finish", HOSTNAME,
-                                         internalHandlerServer.getBindAddress().getPort(),
-                                         Constants.API_BASE), "test body");
+        return doSecurePost(String.format("http://%s:%d%s/tasks/finish", HOSTNAME,
+                                          internalHandlerServer.getBindAddress().getPort(),
+                                          Constants.API_BASE), gson.toJson(takeRequest));
@@ -131 +150 @@
-  private static HttpResponse doSecureGet(String url, String body) throws Exception {
+  private static HttpResponse doSecurePost(String url, String body) throws Exception {
@@ -140,2 +158,0 @@
-
-

