diff --git a/engine/src/main/java/org/camunda/bpm/engine/impl/bpmn/parser/BpmnParse.java b/engine/src/main/java/org/camunda/bpm/engine/impl/bpmn/parser/BpmnParse.java
index f2782c4..0aa8e69 100644
--- a/engine/src/main/java/org/camunda/bpm/engine/impl/bpmn/parser/BpmnParse.java
+++ b/engine/src/main/java/org/camunda/bpm/engine/impl/bpmn/parser/BpmnParse.java
@@ -2249,0 +2250,2 @@
+
+      parseExecutionListenersOnScope(boundaryEventElement, nestedActivity);
diff --git a/engine/src/test/java/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.java b/engine/src/test/java/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.java
index 5a29979..2593b23 100644
--- a/engine/src/test/java/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.java
+++ b/engine/src/test/java/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.java
@@ -4 +4 @@
- * 
+ *
@@ -6 +6 @@
- * 
+ *
@@ -20,0 +21 @@
+import org.camunda.bpm.engine.runtime.Job;
@@ -32 +33 @@
-  
+
@@ -38 +39 @@
-    
+
@@ -42 +43 @@
-    
+
@@ -47 +48 @@
-    
+
@@ -52 +53 @@
-    
+
@@ -54 +55 @@
-    
+
@@ -60 +61 @@
-    
+
@@ -64 +65 @@
-    
+
@@ -69 +70 @@
-    
+
@@ -73 +74 @@
-    
+
@@ -76 +77 @@
-  
+
@@ -80 +81 @@
-    
+
@@ -86 +87 @@
-    
+
@@ -96 +97 @@
-    
+
@@ -101 +102 @@
-    
+
@@ -106 +107 @@
-    
+
@@ -108,2 +109,2 @@
-  
-  
+
+
@@ -114 +115 @@
-    
+
@@ -116 +117 @@
-    
+
@@ -120 +121 @@
-    
+
@@ -124 +125 @@
-  
+
@@ -127 +128 @@
-    
+
@@ -129 +130 @@
-    
+
@@ -135 +136 @@
-    
+
@@ -141 +142 @@
-    
+
@@ -144,0 +146,28 @@
+
+  @Deployment(resources = {"org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.testOnBoundaryEvents.bpmn20.xml"})
+  public void testOnBoundaryEvents() {
+    RecorderExecutionListener.clear();
+
+    ProcessInstance processInstance = runtimeService.startProcessInstanceByKey("process");
+
+    Job firstTimer = managementService.createJobQuery().timers().singleResult();
+
+    managementService.executeJob(firstTimer.getId());
+
+    Job secondTimer = managementService.createJobQuery().timers().singleResult();
+
+    managementService.executeJob(secondTimer.getId());
+
+    assertProcessEnded(processInstance.getId());
+
+    List<RecordedEvent> recordedEvents = RecorderExecutionListener.getRecordedEvents();
+    assertEquals(2, recordedEvents.size());
+
+    assertEquals("timer1", recordedEvents.get(0).getActivityId());
+    assertEquals("start boundary listener", recordedEvents.get(0).getParameter());
+    assertEquals("start", recordedEvents.get(0).getEventName());
+
+    assertEquals("timer2", recordedEvents.get(1).getActivityId());
+    assertEquals("end boundary listener", recordedEvents.get(1).getParameter());
+    assertEquals("end", recordedEvents.get(1).getEventName());
+  }
diff --git a/engine/src/test/resources/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.testOnBoundaryEvents.bpmn20.xml b/engine/src/test/resources/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.testOnBoundaryEvents.bpmn20.xml
new file mode 100644
index 0000000..b621026
--- /dev/null
+++ b/engine/src/test/resources/org/camunda/bpm/engine/test/examples/bpmn/executionlistener/ExecutionListenerTest.testOnBoundaryEvents.bpmn20.xml
@@ -0,0 +1,53 @@
+<definitions 
+  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
+  xmlns:camunda="http://activiti.org/bpmn"
+  targetNamespace="Examples">
+
+  <process id="process">
+
+    <startEvent id="start" />
+
+    <sequenceFlow sourceRef="start" targetRef="task1" />
+
+    <userTask id="task1" />
+
+    <sequenceFlow sourceRef="task1" targetRef="end1" />
+
+    <endEvent id="end1" />
+
+    <boundaryEvent id="timer1" attachedToRef="task1">
+      <extensionElements>
+        <camunda:executionListener event="start" class="org.camunda.bpm.engine.test.examples.bpmn.executionlistener.RecorderExecutionListener">
+          <camunda:field name="parameter" stringValue="start boundary listener" />
+        </camunda:executionListener>
+      </extensionElements>
+      <timerEventDefinition>
+        <timeDuration>PT5M</timeDuration>
+      </timerEventDefinition>
+    </boundaryEvent>
+
+    <sequenceFlow sourceRef="timer1" targetRef="task2" />
+
+    <userTask id="task2" />
+
+    <sequenceFlow sourceRef="task2" targetRef="end2" />
+
+    <endEvent id="end2" />
+
+    <boundaryEvent id="timer2" attachedToRef="task2">
+      <extensionElements>
+        <camunda:executionListener event="end" class="org.camunda.bpm.engine.test.examples.bpmn.executionlistener.RecorderExecutionListener">
+          <camunda:field name="parameter" stringValue="end boundary listener" />
+        </camunda:executionListener>
+      </extensionElements>
+      <timerEventDefinition>
+        <timeDuration>PT5M</timeDuration>
+      </timerEventDefinition>
+    </boundaryEvent>
+
+    <sequenceFlow sourceRef="timer2" targetRef="end3" />
+
+    <endEvent id="end3" />
+
+  </process>
+</definitions>
\ No newline at end of file

