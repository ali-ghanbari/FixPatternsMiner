diff --git a/engine/src/main/java/org/camunda/bpm/container/impl/jmx/deployment/scanning/VfsProcessApplicationScanner.java b/engine/src/main/java/org/camunda/bpm/container/impl/jmx/deployment/scanning/VfsProcessApplicationScanner.java
index 6442401..b74a6f6 100644
--- a/engine/src/main/java/org/camunda/bpm/container/impl/jmx/deployment/scanning/VfsProcessApplicationScanner.java
+++ b/engine/src/main/java/org/camunda/bpm/container/impl/jmx/deployment/scanning/VfsProcessApplicationScanner.java
@@ -107 +107 @@
-          return ProcessApplicationScanningUtil.isDeployable(file.getName());
+          return file.isFile() && ProcessApplicationScanningUtil.isDeployable(file.getName());
diff --git a/engine/src/test/java/org/camunda/bpm/container/impl/jmx/deployment/util/VfsProcessApplicationScannerTest.java b/engine/src/test/java/org/camunda/bpm/container/impl/jmx/deployment/util/VfsProcessApplicationScannerTest.java
new file mode 100644
index 0000000..db13947
--- /dev/null
+++ b/engine/src/test/java/org/camunda/bpm/container/impl/jmx/deployment/util/VfsProcessApplicationScannerTest.java
@@ -0,0 +1,54 @@
+/* Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.camunda.bpm.container.impl.jmx.deployment.util;
+
+import org.camunda.bpm.container.impl.jmx.deployment.scanning.ProcessApplicationScanningUtil;
+import org.junit.Test;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.util.Map;
+
+import static org.junit.Assert.*;
+
+
+/**
+ * @author Clint Manning
+ */
+public class VfsProcessApplicationScannerTest {
+
+  @Test
+  public void testScanProcessArchivePathForResources() throws MalformedURLException {
+
+    // given: scanning the relative test resource root
+    URLClassLoader classLoader = new URLClassLoader(new URL[]{new URL("file:")});
+    String processRootPath = "classpath:org/camunda/bpm/container/impl/jmx/deployment/process/";
+    Map<String, byte[]> scanResult = ProcessApplicationScanningUtil.findResources(classLoader, processRootPath, null);
+
+    // expect: finds only the BPMN process file and not treats the 'bpmn' folder
+    assertEquals(1, scanResult.size());
+    String processFileName = "VfsProcessScannerTest.bpmn20.xml";
+    assertTrue("'" + processFileName + "' found", contains(scanResult, processFileName));
+    assertFalse("'bpmn' folder in resource path not found", contains(scanResult, "bpmn"));
+  }
+
+  private boolean contains(Map<String, byte[]> scanResult, String suffix) {
+    for (String string : scanResult.keySet()) {
+      if (string.endsWith(suffix)) {
+        return true;
+      }
+    }
+    return false;
+  }
+}
diff --git a/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/VfsProcessScannerTest.bpmn20.xml b/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/VfsProcessScannerTest.bpmn20.xml
new file mode 100644
index 0000000..aa106fe
--- /dev/null
+++ b/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/VfsProcessScannerTest.bpmn20.xml
@@ -0,0 +1,7 @@
+<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" targetNamespace="Examples">
+  <process id="simpleProcess">
+    <startEvent id="theStart"/>
+    <sequenceFlow sourceRef="theStart" targetRef="theEnd"/>
+    <endEvent id="theEnd"/>
+  </process>
+</definitions>
\ No newline at end of file
diff --git a/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/bpmn/test/processResource.txt b/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/bpmn/test/processResource.txt
new file mode 100644
index 0000000..f696cf0
--- /dev/null
+++ b/engine/src/test/resources/org/camunda/bpm/container/impl/jmx/deployment/process/bpmn/test/processResource.txt
@@ -0,0 +1 @@
+test file for the VfsProcessApplicationScannerTest
\ No newline at end of file

