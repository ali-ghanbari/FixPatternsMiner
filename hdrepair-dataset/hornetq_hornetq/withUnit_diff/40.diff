diff --git a/src/main/org/hornetq/api/core/management/HornetQServerControl.java b/src/main/org/hornetq/api/core/management/HornetQServerControl.java
index 44f989f..cbd9eed 100644
--- a/src/main/org/hornetq/api/core/management/HornetQServerControl.java
+++ b/src/main/org/hornetq/api/core/management/HornetQServerControl.java
@@ -522 +522 @@
-   AddressSettings getAddressSettings(String address);
+   AddressSettings getAddressSettings(String address) throws Exception;
diff --git a/tests/src/org/hornetq/tests/integration/management/HornetQServerControlUsingCoreTest.java b/tests/src/org/hornetq/tests/integration/management/HornetQServerControlUsingCoreTest.java
index c507dad..02f1a48 100644
--- a/tests/src/org/hornetq/tests/integration/management/HornetQServerControlUsingCoreTest.java
+++ b/tests/src/org/hornetq/tests/integration/management/HornetQServerControlUsingCoreTest.java
@@ -15,0 +16 @@
+import org.hornetq.api.core.SimpleString;
@@ -25,0 +27 @@
+import org.hornetq.core.settings.impl.AddressFullMessagePolicy;
@@ -26,0 +29 @@
+import org.hornetq.utils.json.JSONObject;
@@ -502 +505,11 @@
-         public void addAddressSettings(@Parameter(desc = "an address match", name = "addressMatch") String addressMatch, @Parameter(desc = "the dead letter address setting", name = "DLA") String DLA, @Parameter(desc = "the expiry address setting", name = "expiryAddress") String expiryAddress, @Parameter(desc = "are any queues created for this address a last value queue", name = "lastValueQueue") boolean lastValueQueue, @Parameter(desc = "the delivery attempts", name = "deliveryAttempts") int deliveryAttempts, @Parameter(desc = "the max size in bytes", name = "maxSizeBytes") long maxSizeBytes, @Parameter(desc = "the page size in bytes", name = "pageSizeBytes") int pageSizeBytes, @Parameter(desc = "the redelivery delay", name = "redeliveryDelay") long redeliveryDelay, @Parameter(desc = "the redistribution delay", name = "redistributionDelay") long redistributionDelay, @Parameter(desc = "do we send to the DLA when there is no where to route the message", name = "sendToDLAOnNoRoute") boolean sendToDLAOnNoRoute, @Parameter(desc = "the ploicy to use when the address is full", name = "addressFullMessagePolicy") String addressFullMessagePolicy) throws Exception
+         public void addAddressSettings(@Parameter(desc = "an address match", name = "addressMatch") String addressMatch,
+                                        @Parameter(desc = "the dead letter address setting", name = "DLA") String DLA, 
+                                        @Parameter(desc = "the expiry address setting", name = "expiryAddress") String expiryAddress, 
+                                        @Parameter(desc = "are any queues created for this address a last value queue", name = "lastValueQueue") boolean lastValueQueue,
+                                        @Parameter(desc = "the delivery attempts", name = "deliveryAttempts") int deliveryAttempts, 
+                                        @Parameter(desc = "the max size in bytes", name = "maxSizeBytes") long maxSizeBytes, 
+                                        @Parameter(desc = "the page size in bytes", name = "pageSizeBytes") int pageSizeBytes, 
+                                        @Parameter(desc = "the redelivery delay", name = "redeliveryDelay") long redeliveryDelay,
+                                        @Parameter(desc = "the redistribution delay", name = "redistributionDelay") long redistributionDelay,
+                                        @Parameter(desc = "do we send to the DLA when there is no where to route the message", name = "sendToDLAOnNoRoute") boolean sendToDLAOnNoRoute,
+                                        @Parameter(desc = "the ploicy to use when the address is full", name = "addressFullMessagePolicy") String addressFullMessagePolicy) throws Exception
@@ -504 +517 @@
-            //To change body of implemented methods use File | Settings | File Templates.
+            proxy.invokeOperation("addAddressSettings", addressMatch, DLA, expiryAddress, lastValueQueue, deliveryAttempts, maxSizeBytes, pageSizeBytes, redeliveryDelay, redistributionDelay, sendToDLAOnNoRoute, addressFullMessagePolicy);
@@ -507 +520 @@
-         public AddressSettings getAddressSettings(String address)
+         public AddressSettings getAddressSettings(String address) throws Exception
@@ -509 +522,14 @@
-            return null;  //To change body of implemented methods use File | Settings | File Templates.
+            String res = (String)proxy.invokeOperation("getAddressSettingsAsJSON", address);
+            JSONObject object = new JSONObject(res);
+            AddressSettings settings = new AddressSettings();
+            settings.setDeadLetterAddress(SimpleString.toSimpleString(object.getString("DLA")));
+            settings.setExpiryAddress(SimpleString.toSimpleString(object.getString("expiryAddress")));
+            settings.setLastValueQueue(object.getBoolean("lastValueQueue"));
+            settings.setMaxDeliveryAttempts(object.getInt("maxDeliveryAttempts"));
+            settings.setMaxSizeBytes(object.getLong("maxSizeBytes"));
+            settings.setPageSizeBytes(object.getInt("pageSizeBytes"));
+            settings.setRedeliveryDelay(object.getLong("redeliveryDelay"));
+            settings.setRedistributionDelay(object.getLong("redistributionDelay"));
+            settings.setSendToDLAOnNoRoute(object.getBoolean("sendToDLAOnNoRoute"));
+            settings.setAddressFullMessagePolicy(AddressFullMessagePolicy.valueOf(object.getString("addressFullMessagePolicy")));
+            return settings;
@@ -512 +538 @@
-         public void removeAddressSettings(String addressMatch)
+         public void removeAddressSettings(String addressMatch) throws Exception
@@ -514 +540 @@
-            //To change body of implemented methods use File | Settings | File Templates.
+            proxy.invokeOperation("removeAddressSettings", addressMatch);

