diff --git a/src/main/org/hornetq/core/remoting/server/impl/RemotingServiceImpl.java b/src/main/org/hornetq/core/remoting/server/impl/RemotingServiceImpl.java
index e226cd6..a3275fc 100644
--- a/src/main/org/hornetq/core/remoting/server/impl/RemotingServiceImpl.java
+++ b/src/main/org/hornetq/core/remoting/server/impl/RemotingServiceImpl.java
@@ -68 +68 @@
-   private static final long CONNECTION_TTL_CHECK_INTERVAL = 2000;
+   public static final long CONNECTION_TTL_CHECK_INTERVAL = 2000;
diff --git a/tests/src/org/hornetq/tests/integration/remoting/PingTest.java b/tests/src/org/hornetq/tests/integration/remoting/PingTest.java
index 38e1b19..e2ac1a3 100644
--- a/tests/src/org/hornetq/tests/integration/remoting/PingTest.java
+++ b/tests/src/org/hornetq/tests/integration/remoting/PingTest.java
@@ -30,0 +31,2 @@
+import org.hornetq.core.remoting.Interceptor;
+import org.hornetq.core.remoting.Packet;
@@ -31,0 +34,2 @@
+import org.hornetq.core.remoting.impl.wireformat.PacketImpl;
+import org.hornetq.core.remoting.server.impl.RemotingServiceImpl;
@@ -292,0 +297,16 @@
+      // server must received at least one ping from the client to pass
+      // so that the server connection TTL is configured with the client value
+      final CountDownLatch pingOnServerLatch = new CountDownLatch(1);
+      server.getRemotingService().addInterceptor(new Interceptor()
+      {
+         
+         public boolean intercept(Packet packet, RemotingConnection connection) throws HornetQException
+         {
+            if (packet.getType() == PacketImpl.PING)
+            {
+               pingOnServerLatch.countDown();
+            }
+            return true;
+         }
+      });
+
@@ -343,0 +364 @@
+      
@@ -344,0 +366 @@
+      assertTrue("server has not received any ping from the client" , pingOnServerLatch.await(2000, TimeUnit.MILLISECONDS));
@@ -345,0 +368,2 @@
+      // we let the server receives at least 1 ping (so that it uses the client ConnectionTTL value)
+      
@@ -352 +376 @@
-      assertTrue(serverLatch.await(8 * CLIENT_FAILURE_CHECK_PERIOD, TimeUnit.MILLISECONDS));
+      assertTrue(serverLatch.await(2 * RemotingServiceImpl.CONNECTION_TTL_CHECK_INTERVAL, TimeUnit.MILLISECONDS));

