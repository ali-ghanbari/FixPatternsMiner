diff --git a/src/main/org/jboss/messaging/core/remoting/server/impl/RemotingServiceImpl.java b/src/main/org/jboss/messaging/core/remoting/server/impl/RemotingServiceImpl.java
index 7dff504..45fe58c 100644
--- a/src/main/org/jboss/messaging/core/remoting/server/impl/RemotingServiceImpl.java
+++ b/src/main/org/jboss/messaging/core/remoting/server/impl/RemotingServiceImpl.java
@@ -372 +372 @@
-      if (connectionTTL <= 0 || clientFailureCheckPeriod <= 0)
+      if ((connectionTTL <= 0 || clientFailureCheckPeriod <= 0) && connectionTTL != -1 && clientFailureCheckPeriod != -1)
diff --git a/tests/src/org/jboss/messaging/tests/integration/remoting/PingTest.java b/tests/src/org/jboss/messaging/tests/integration/remoting/PingTest.java
index 1fecd8d..c76429e 100644
--- a/tests/src/org/jboss/messaging/tests/integration/remoting/PingTest.java
+++ b/tests/src/org/jboss/messaging/tests/integration/remoting/PingTest.java
@@ -110 +110 @@
-      
+
@@ -112 +112,2 @@
-      
+      csf.setConnectionTTL(CLIENT_FAILURE_CHECK_PERIOD * 2);
+
@@ -141 +142 @@
-      Thread.sleep(CLIENT_FAILURE_CHECK_PERIOD * 3);
+      Thread.sleep(CLIENT_FAILURE_CHECK_PERIOD * 10);
@@ -147,5 +148 @@
-      RemotingConnection serverConn2 = server
-                                                       .getRemotingService()
-                                                       .getConnections()
-                                                       .iterator()
-                                                       .next();
+      RemotingConnection serverConn2 = server.getRemotingService().getConnections().iterator().next();
@@ -166,2 +163,2 @@
-      
-      csf.setClientFailureCheckPeriod(CLIENT_FAILURE_CHECK_PERIOD);
+      csf.setClientFailureCheckPeriod(-1);
+      csf.setConnectionTTL(-1);
@@ -197 +194 @@
-      Thread.sleep(CLIENT_FAILURE_CHECK_PERIOD * 3);
+      Thread.sleep(ClientSessionFactoryImpl.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD);
@@ -203,5 +200 @@
-      RemotingConnection serverConn2 = server
-                                                       .getRemotingService()
-                                                       .getConnections()
-                                                       .iterator()
-                                                       .next();
+      RemotingConnection serverConn2 = server.getRemotingService().getConnections().iterator().next();
@@ -222 +215 @@
-      
+
@@ -224,2 +217,2 @@
-      csf.setConnectionTTL((long)(CLIENT_FAILURE_CHECK_PERIOD * 1.5));
-      
+      csf.setConnectionTTL(CLIENT_FAILURE_CHECK_PERIOD * 2);
+
@@ -237 +230 @@
-      
+
@@ -239 +232 @@
-            
+
@@ -261 +254 @@
-      for (int i = 0; i < 40; i++)
+      for (int i = 0; i < 1000; i++)
@@ -269 +262 @@
-         Thread.sleep(CLIENT_FAILURE_CHECK_PERIOD);
+         Thread.sleep(10);
@@ -271,2 +263,0 @@
-      
-      Thread.sleep(3 * CLIENT_FAILURE_CHECK_PERIOD);
@@ -287 +278 @@
-   * Test the client triggering failure due to no pong received in time
+   * Test the client triggering failure due to no ping from server received in time
@@ -289,2 +280,2 @@
-   public void testClientFailureNoPong() throws Exception
-   {      
+   public void testClientFailureNoServerPing() throws Exception
+   {
@@ -294 +285 @@
-      
+
@@ -296 +287 @@
-      csf.setConnectionTTL((long)(CLIENT_FAILURE_CHECK_PERIOD * 1.5));
+      csf.setConnectionTTL(CLIENT_FAILURE_CHECK_PERIOD * 2);
@@ -321 +312 @@
-      
+
@@ -325 +316 @@
-      
+
@@ -327,3 +318,12 @@
-      
-      Thread.sleep(4 * CLIENT_FAILURE_CHECK_PERIOD);
-      
+
+      for (int i = 0; i < 1000; i++)
+      {
+         // a few tries to avoid a possible race caused by GCs or similar issues
+         if (server.getRemotingService().getConnections().isEmpty() && clientListener.getException() != null)
+         {
+            break;
+         }
+
+         Thread.sleep(10);
+      }
+            
@@ -331,2 +331,2 @@
-      
-      assertEquals(0, server.getRemotingService().getConnections().size());
+      //Server connection will be closed too, when client closes client side connection after failure is detected
+      assertTrue(server.getRemotingService().getConnections().isEmpty());
@@ -334,0 +335,5 @@
+
+      tearDown();
+
+      setUp();
+

