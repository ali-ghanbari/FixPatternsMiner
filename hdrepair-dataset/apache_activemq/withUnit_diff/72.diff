diff --git a/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java b/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
index 43201f3..3507b88 100755
--- a/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
+++ b/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
@@ -319 +318,0 @@
-                        node.incrementRedeliveryCounter();
diff --git a/activemq-core/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java b/activemq-core/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java
index ef82cec..58ffe55 100644
--- a/activemq-core/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java
+++ b/activemq-core/src/test/java/org/apache/activemq/JmsRollbackRedeliveryTest.java
@@ -73,3 +72,0 @@
-        final int nbMessages = 10;
-        final String destinationName = "Destination";
-
@@ -182 +179,2 @@
-    public void testRedeliveryOnSessionCloseWithNoRollback() throws Exception {
+    // AMQ-1593
+    public void testValidateRedeliveryCountOnRollback() throws Exception {
@@ -184 +182,2 @@
-        ConnectionFactory connectionFactory = 
+        final int numMessages = 1;
+       ConnectionFactory connectionFactory = 
@@ -189 +188 @@
-        populateDestination(nbMessages, destinationName, connection);
+        populateDestination(numMessages, destinationName, connection);
@@ -193,3 +192,3 @@
-            Map<String, Boolean> rolledback = new ConcurrentHashMap<String, Boolean>();
-            while (received.get() < nbMessages) {
-                Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
+            final int maxRetries = new RedeliveryPolicy().getMaximumRedeliveries();
+            while (received.get() < maxRetries) {
+                Session session = connection.createSession(true, Session.SESSION_TRANSACTED);
@@ -201,5 +200,3 @@
-                    if (msg != null && rolledback.put(msg.getText(), Boolean.TRUE) != null) {
-                        LOG.info("Received message " + msg.getText() + " (" + received.getAndIncrement() + ")" + msg.getJMSMessageID());
-                        assertTrue(msg.getJMSRedelivered());
-                        session.commit();
-                    }
+                    LOG.info("Received message " + msg.getText() + " (" + received.getAndIncrement() + ")" + msg.getJMSMessageID());
+                    assertEquals("redelivery property matches deliveries", received.get(), msg.getLongProperty("JMSXDeliveryCount"));
+                    session.rollback();
@@ -211,0 +209,30 @@
+    // AMQ-1593
+    public void testValidateRedeliveryCountOnRollbackWithPrefetch0() throws Exception {
+
+        final int numMessages = 1;
+       ConnectionFactory connectionFactory = 
+            new ActiveMQConnectionFactory(brokerUrl + "?jms.prefetchPolicy.queuePrefetch=0");
+        Connection connection = connectionFactory.createConnection();
+        connection.start();
+
+        populateDestination(numMessages, destinationName, connection);
+
+        {
+            AtomicInteger received = new AtomicInteger();
+            final int maxRetries = new RedeliveryPolicy().getMaximumRedeliveries();
+            while (received.get() < maxRetries) {
+                Session session = connection.createSession(true, Session.SESSION_TRANSACTED);
+                Destination destination = session.createQueue(destinationName);
+
+                MessageConsumer consumer = session.createConsumer(destination);            
+                TextMessage msg = (TextMessage) consumer.receive(1000);
+                if (msg != null) {
+                    LOG.info("Received message " + msg.getText() + " (" + received.getAndIncrement() + ")" + msg.getJMSMessageID());
+                    assertEquals("redelivery property matches deliveries", received.get(), msg.getLongProperty("JMSXDeliveryCount"));
+                    session.rollback();
+                }
+                session.close();
+            }
+        }
+    }
+
diff --git a/activemq-core/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java b/activemq-core/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java
index cf9796b..1307c09 100755
--- a/activemq-core/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java
+++ b/activemq-core/src/test/java/org/apache/activemq/network/SimpleNetworkTest.java
@@ -143 +143 @@
-            assertNotNull(remoteConsumer.receive(500));
+            assertNotNull("message count: " + i, remoteConsumer.receive(1000));

