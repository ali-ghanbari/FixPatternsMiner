diff --git a/activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java b/activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java
index 89be5cb..2e7f516 100755
--- a/activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java
+++ b/activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java
@@ -108 +107,0 @@
-        super.stop();
diff --git a/activemq-core/src/test/java/org/apache/activemq/broker/ft/MasterSlaveSlaveDieTest.java b/activemq-core/src/test/java/org/apache/activemq/broker/ft/MasterSlaveSlaveDieTest.java
index 0f83bbd..e168971 100644
--- a/activemq-core/src/test/java/org/apache/activemq/broker/ft/MasterSlaveSlaveDieTest.java
+++ b/activemq-core/src/test/java/org/apache/activemq/broker/ft/MasterSlaveSlaveDieTest.java
@@ -20,0 +21 @@
+import java.util.concurrent.atomic.AtomicBoolean;
@@ -23,0 +25,2 @@
+import org.apache.activemq.broker.BrokerPlugin;
+import org.apache.activemq.broker.BrokerPluginSupport;
@@ -25,0 +29,2 @@
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
@@ -27,0 +33,2 @@
+    
+    private static final Log LOG = LogFactory.getLog(MasterSlaveSlaveDieTest.class);
@@ -28,0 +36,17 @@
+    private final AtomicBoolean pluginStopped = new AtomicBoolean(false);
+    class Plugin extends BrokerPluginSupport {
+
+        @Override
+        public void start() throws Exception {
+            LOG.info("plugin start");
+            super.start();
+        }
+
+        @Override
+        public void stop() throws Exception {
+            LOG.info("plugin stop");
+            pluginStopped.set(true);
+            super.stop();
+        }
+        
+    }
@@ -35 +59,2 @@
-
+        master.setPlugins(new BrokerPlugin[] { new Plugin() });
+        
@@ -40,2 +65,2 @@
-        SocketProxy masterProxy = new SocketProxy(masterUri);
-        slave.setMasterConnectorURI(masterProxy.getUrl().toString());
+        //SocketProxy masterProxy = new SocketProxy(masterUri);
+        slave.setMasterConnectorURI(masterUri.toString());
@@ -60,6 +85,3 @@
-        // kill socket to master
-        masterProxy.close();
-        
-        // in case a stop is too controlled an exit
-        //slave.stop();
-        Thread.sleep(5000);
+        LOG.info("killing slave..");
+        slave.stop();
+        slave.waitUntilStopped();
@@ -67,2 +89,3 @@
-        assertTrue(master.isStarted());
-
+        LOG.info("checking master still alive");
+        assertTrue("master is still alive", master.isStarted());
+        assertFalse("plugin was not yet stopped", pluginStopped.get());

