diff --git a/fixture/src/org/immutables/generate/silly/SillyOrdinal.java b/fixture/src/org/immutables/generate/silly/SillyOrdinal.java
index c2c5719..cd1fe3a 100644
--- a/fixture/src/org/immutables/generate/silly/SillyOrdinal.java
+++ b/fixture/src/org/immutables/generate/silly/SillyOrdinal.java
@@ -22 +22 @@
-@GenerateImmutable(builder = false)
+@GenerateImmutable
diff --git a/fixture/test/org/immutables/generate/silly/ValuesTest.java b/fixture/test/org/immutables/generate/silly/ValuesTest.java
index 5e6f231..d00d8ca 100644
--- a/fixture/test/org/immutables/generate/silly/ValuesTest.java
+++ b/fixture/test/org/immutables/generate/silly/ValuesTest.java
@@ -24 +24 @@
-  
+
@@ -39 +39 @@
-    
+
@@ -45 +45,26 @@
-  
+
+  @Test
+  public void ordinalDomain() {
+    ImmutableSillyOrdinal.Domain domain = new ImmutableSillyOrdinal.Domain();
+
+    ImmutableSillyOrdinal a = ImmutableSillyOrdinal.of("a");
+
+    ImmutableSillyOrdinal a1 = ImmutableSillyOrdinal.builder()
+        .domain(domain)
+        .name("a")
+        .build();
+
+    ImmutableSillyOrdinal a2 = ImmutableSillyOrdinal.builder()
+        .domain(domain)
+        .name("a")
+        .build();
+
+    check(a.domain()).not(domain);
+    check(a.domain()).same(ImmutableSillyOrdinal.Domain.get());
+    check(a1.domain()).same(domain);
+
+    check(a).not(a1);
+    check(a1).same(a2);
+    check(domain.length()).is(1);
+  }
+
diff --git a/generate/src/org/immutables/generate/template/immutable.tjs b/generate/src/org/immutables/generate/template/immutable.tjs
index bde6901..b5a9dba 100644
--- a/generate/src/org/immutables/generate/template/immutable.tjs
+++ b/generate/src/org/immutables/generate/template/immutable.tjs
@@ -470 +470 @@
-    [apply generateAfterConstruction(type)]
+    [apply generateAfterConstruction(type, true)]
@@ -554 +554 @@
-[template generateAfterConstruction(type, builder)]
+[template generateAfterConstruction(type, usingBuilder)]
@@ -561 +561 @@
-    [if (builder)]
+    [if (usingBuilder)]

