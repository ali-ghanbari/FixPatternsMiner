diff --git a/src/main/java/org/wikimedia/analytics/kraken/jgraph/Funnel.java b/src/main/java/org/wikimedia/analytics/kraken/jgraph/Funnel.java
index ef8cc06..ab440a1 100644
--- a/src/main/java/org/wikimedia/analytics/kraken/jgraph/Funnel.java
+++ b/src/main/java/org/wikimedia/analytics/kraken/jgraph/Funnel.java
@@ -255 +255 @@
-			if (j == path.size()) {
+			if (j == path.size()-1) {
diff --git a/src/test/java/org/wikimedia/analytics/kraken/jgraph/FunnelTest.java b/src/test/java/org/wikimedia/analytics/kraken/jgraph/FunnelTest.java
index cfb0afa..b65d6dd 100644
--- a/src/test/java/org/wikimedia/analytics/kraken/jgraph/FunnelTest.java
+++ b/src/test/java/org/wikimedia/analytics/kraken/jgraph/FunnelTest.java
@@ -12 +11,0 @@
-
@@ -14 +13 @@
-//import static org.junit.Assert.*;
+import static org.junit.Assert.*;
@@ -58,2 +57,2 @@
-			endVertices.add(new URL("http://en.wikipedia.org/C"));
-			endVertices.add(new URL("http://en.wikipedia.org/E"));
+			endVertices.add(new URL("http://en.wikipedia.org/wiki/C"));
+			endVertices.add(new URL("http://en.wikipedia.org/wiki/E"));
@@ -61 +60 @@
-			e.printStackTrace();
+			e.printStackTrace(); 
@@ -63 +62 @@
-		assert funnel.endVertices.containsAll(endVertices);
+		assertTrue(funnel.endVertices.containsAll(endVertices));
@@ -72,2 +71,2 @@
-			startVertices.add(new URL("http://en.wikipedia.org/A"));
-			startVertices.add(new URL("http://en.wikipedia.org/D"));
+			startVertices.add(new URL("http://en.wikipedia.org/wiki/A"));
+			startVertices.add(new URL("http://en.wikipedia.org/wiki/D"));
@@ -82,2 +81,2 @@
-		assert (funnel.startVertices.indexOf(new URL("http://en.wikipedia.org/A")) > -1);
-		assert (funnel.startVertices.indexOf(new URL("http://en.wikipedia.org/D")) > -1);
+		assertTrue(funnel.startVertices.indexOf(new URL("http://en.wikipedia.org/wiki/A")) > -1);
+		assertTrue(funnel.startVertices.indexOf(new URL("http://en.wikipedia.org/wiki/D")) > -1);
@@ -88 +87 @@
-		assert funnel.isDag();
+		assertTrue(funnel.isDag());
@@ -97 +96 @@
-		assert (funnel.paths.size() == 2);
+		assertTrue(funnel.paths.size() == 2);
@@ -102,3 +101,3 @@
-		path0.add(new URL("http://en.wikipedia.org/A"));
-		path0.add(new URL("http://en.wikipedia.org/B"));
-		path0.add(new URL("http://en.wikipedia.org/C"));
+		path0.add(new URL("http://en.wikipedia.org/wiki/A"));
+		path0.add(new URL("http://en.wikipedia.org/wiki/B"));
+		path0.add(new URL("http://en.wikipedia.org/wiki/C"));
@@ -107,3 +106,3 @@
-		path1.add(new URL("http://en.wikipedia.org/D"));
-		path1.add(new URL("http://en.wikipedia.org/B"));
-		path1.add(new URL("http://en.wikipedia.org/E"));
+		path1.add(new URL("http://en.wikipedia.org/wiki/D"));
+		path1.add(new URL("http://en.wikipedia.org/wiki/B"));
+		path1.add(new URL("http://en.wikipedia.org/wiki/E"));
@@ -115,6 +114,2 @@
-		assert (results.size() == 2);
-		Collection<Boolean> obsValues = results.values();
-//		Collection<Boolean> testValues = new ArrayList<Boolean>();
-//		testValues.add(true);
-//		testValues.add(true);
-		assert (!obsValues.contains(false));
+		assertTrue(results.size() == 2);
+		assertTrue(!results.values().contains(false));

