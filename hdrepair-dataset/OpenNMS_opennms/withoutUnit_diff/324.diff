diff --git a/opennms-services/src/main/java/org/opennms/netmgt/eventd/adaptors/tcp/TcpEventReceiver.java b/opennms-services/src/main/java/org/opennms/netmgt/eventd/adaptors/tcp/TcpEventReceiver.java
index f8a5363..0f71fb3 100644
--- a/opennms-services/src/main/java/org/opennms/netmgt/eventd/adaptors/tcp/TcpEventReceiver.java
+++ b/opennms-services/src/main/java/org/opennms/netmgt/eventd/adaptors/tcp/TcpEventReceiver.java
@@ -64 +64 @@
- * configured port (port 5814 by default).
+ * configured port (port 5817 by default).
diff --git a/opennms-tools/groovy-tools/src/main/groovy/showMonitoredServices.groovy b/opennms-tools/groovy-tools/src/main/groovy/showMonitoredServices.groovy
new file mode 100755
index 0000000..9f3dafe
--- /dev/null
+++ b/opennms-tools/groovy-tools/src/main/groovy/showMonitoredServices.groovy
@@ -0,0 +1,45 @@
+#!/usr/bin/env groovy
+
+
+import org.opennms.core.utils.*;
+import org.springframework.context.support.*;
+import org.springframework.transaction.*;
+import org.springframework.transaction.support.*;
+import org.opennms.netmgt.dao.MonitoredServiceDao;
+
+class InTransaction implements TransactionCallback {
+  Closure m_callback;
+
+    InTransaction(Closure callback) {
+       m_callback = callback;
+    }
+
+    public Object doInTransaction(TransactionStatus status) {
+       m_callback.call(status);
+    }
+
+}
+
+  
+
+System.setProperty("rrd.base.dir", new File(".").getAbsolutePath());
+System.setProperty("rrd.binary", "/usr/bin/rrdtool");
+
+context = BeanUtils.getFactory("daoContext", ClassPathXmlApplicationContext.class);
+
+TransactionTemplate transTemplate = context.getBean("transactionTemplate", TransactionTemplate.class);
+MonitoredServiceDao dao = context.getBean("monitoredServiceDao", MonitoredServiceDao.class);
+
+inTransaction = new InTransaction() {
+    dao.findAll().each {
+        println "${it.nodeId}:${it.ipAddress}:${it.serviceName}"
+    }
+}
+
+transTemplate.execute(inTransaction);
+
+
+
+System.exit(0);
+
+

