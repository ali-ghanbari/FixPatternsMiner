diff --git a/app/com/baasbox/Global.java b/app/com/baasbox/Global.java
index f6664bd..9ac2bc4 100644
--- a/app/com/baasbox/Global.java
+++ b/app/com/baasbox/Global.java
@@ -295 +295 @@
-	private ObjectNode prepareError(RequestHeader request, String error) {
+	public ObjectNode prepareError(RequestHeader request, String error) {
diff --git a/app/com/baasbox/controllers/MyAssets.scala b/app/com/baasbox/controllers/MyAssets.scala
new file mode 100644
index 0000000..534b6fd
--- /dev/null
+++ b/app/com/baasbox/controllers/MyAssets.scala
@@ -0,0 +1,33 @@
+/*
+ * Copyright (c) 2014.
+ *
+ * BaasBox - info-at-baasbox.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.baasbox.controllers;
+
+
+import play.api.mvc._;
+import play.api.libs.concurrent.Execution.Implicits._;
+
+object MyAssets extends Controller {
+	def at(path: String, file: String) = EssentialAction { request =>
+		controllers.Assets.at(path, file)(request).map { result =>
+			if (result.header.status == NOT_FOUND) {
+				NotFound("Resource " + path + file + ", method GET was not found on this server.")
+			} else result
+		}
+	}
+}
\ No newline at end of file
diff --git a/conf/routes b/conf/routes
index 3618c36..6b65a2e 100644
--- a/conf/routes
+++ b/conf/routes
@@ -419 +419 @@
-GET 	/*file						controllers.Assets.at(path="/public/", file)
+GET 	/*file						com.baasbox.controllers.MyAssets.at(path="/public/", file)

