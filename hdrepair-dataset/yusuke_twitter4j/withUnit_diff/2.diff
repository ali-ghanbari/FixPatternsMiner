diff --git a/twitter4j-core/src/main/java/twitter4j/internal/http/HTMLEntity.java b/twitter4j-core/src/main/java/twitter4j/internal/http/HTMLEntity.java
index d0ca657..aa1b66d 100644
--- a/twitter4j-core/src/main/java/twitter4j/internal/http/HTMLEntity.java
+++ b/twitter4j-core/src/main/java/twitter4j/internal/http/HTMLEntity.java
@@ -74 +74 @@
-            if (-1 != semicolonIndex && 10 > (semicolonIndex - index)) {
+            if (-1 != semicolonIndex) {
diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
index 663f641..d2f5c36 100644
--- a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
@@ -28,0 +29 @@
+import twitter4j.internal.org.json.JSONObject;
@@ -428 +429,9 @@
-        Status status = twitterAPI2.showStatus(1000l);
+//        JSONObject json = new JSONObject();
+//        json.append("text", " <%}&lt; foobar <&Cynthia>");
+//        System.out.println(json.toString());
+//        System.out.println(json.getString("text"));
+        Status status;
+        status = DataObjectFactory.createStatus("{\"text\":\"\\\\u5e30%u5e30 &lt;%}& foobar &lt;&Cynthia&gt;\",\"contributors\":null,\"geo\":null,\"retweeted\":false,\"in_reply_to_screen_name\":null,\"truncated\":false,\"entities\":{\"urls\":[],\"hashtags\":[],\"user_mentions\":[]},\"in_reply_to_status_id_str\":null,\"id\":12029015787307008,\"in_reply_to_user_id_str\":null,\"source\":\"web\",\"favorited\":false,\"in_reply_to_status_id\":null,\"in_reply_to_user_id\":null,\"created_at\":\"Tue Dec 07 06:21:55 +0000 2010\",\"retweet_count\":0,\"id_str\":\"12029015787307008\",\"place\":null,\"user\":{\"location\":\"location:\",\"statuses_count\":13405,\"profile_background_tile\":false,\"lang\":\"en\",\"profile_link_color\":\"0000ff\",\"id\":6358482,\"following\":true,\"favourites_count\":2,\"protected\":false,\"profile_text_color\":\"000000\",\"contributors_enabled\":false,\"description\":\"Hi there, I do test a lot!new\",\"verified\":false,\"profile_sidebar_border_color\":\"87bc44\",\"name\":\"twit4j\",\"profile_background_color\":\"9ae4e8\",\"created_at\":\"Sun May 27 09:52:09 +0000 2007\",\"followers_count\":24,\"geo_enabled\":true,\"profile_background_image_url\":\"http://a3.twimg.com/profile_background_images/179009017/t4j-reverse.gif\",\"follow_request_sent\":false,\"url\":\"http://yusuke.homeip.net/twitter4j/\",\"utc_offset\":-32400,\"time_zone\":\"Alaska\",\"notifications\":false,\"friends_count\":4,\"profile_use_background_image\":true,\"profile_sidebar_fill_color\":\"e0ff92\",\"screen_name\":\"twit4j\",\"id_str\":\"6358482\",\"profile_image_url\":\"http://a3.twimg.com/profile_images/1184543043/t4j-reverse_normal.jpeg\",\"show_all_inline_media\":false,\"listed_count\":3},\"coordinates\":null}");
+        assertEquals("\\u5e30%u5e30 <%}& foobar <&Cynthia>", status.getText());
+
+        status = twitterAPI2.showStatus(1000l);
@@ -432,6 +441,5 @@
-        try {
-            Status status2 = unauthenticated.showStatus(1000l);
-            assertEquals(52, status2.getUser().getId());
-            assertNotNull(status.getRateLimitStatus());
-            assertNotNull(DataObjectFactory.getRawJSON(status2));
-            assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
+        Status status2 = twitterAPI1.showStatus(1000l);
+        assertEquals(52, status2.getUser().getId());
+        assertNotNull(status.getRateLimitStatus());
+        assertNotNull(DataObjectFactory.getRawJSON(status2));
+        assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
@@ -439,17 +447,9 @@
-            status2 = unauthenticated.showStatus(999383469l);
-            assertNotNull(DataObjectFactory.getRawJSON(status2));
-            assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
-            assertEquals("01010100 01110010 01101001 01110101 01101101 01110000 01101000       <3", status2.getText());
-            status2 = unauthenticated.showStatus(12029015787307008l);
-            assertNotNull(DataObjectFactory.getRawJSON(status2));
-            assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
-            assertEquals("\\u5e30%u5e30 <%}& foobar <&Cynthia>", status2.getText());
-        } catch (TwitterException te) {
-            assertEquals(400, te.getStatusCode());
-        }
-
-        status = twitterAPI2.showStatus(1000l);
-        assertEquals(status, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status)));
-        assertNotNull(DataObjectFactory.getRawJSON(status));
-        assertTrue(-1 <= status.getRetweetCount());
-        assertFalse(status.isRetweetedByMe());
+        status2 = twitterAPI1.showStatus(999383469l);
+        assertNotNull(DataObjectFactory.getRawJSON(status2));
+        assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
+        assertEquals("01010100 01110010 01101001 01110101 01101101 01110000 01101000       <3", status2.getText());
+        status2 = twitterAPI1.showStatus(12029015787307008l);
+        assertNotNull(DataObjectFactory.getRawJSON(status2));
+        assertEquals(status2, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status2)));
+        System.out.println(DataObjectFactory.getRawJSON(status2));
+        assertEquals("\\u5e30%u5e30 <%}& foobar <&Cynthia>", status2.getText());
diff --git a/twitter4j-core/src/test/java/twitter4j/http/HTMLEntityTest.java b/twitter4j-core/src/test/java/twitter4j/http/HTMLEntityTest.java
index 1537db8..294e2a2 100644
--- a/twitter4j-core/src/test/java/twitter4j/http/HTMLEntityTest.java
+++ b/twitter4j-core/src/test/java/twitter4j/http/HTMLEntityTest.java
@@ -71,0 +72,7 @@
+        original = "\\u5e30%u5e30 &lt;%}& foobar &lt;&Cynthia&gt;";
+        expected = "\\u5e30%u5e30 <%}& foobar <&Cynthia>";
+        assertEquals(expected, HTMLEntity.unescape(original));
+        buf = new StringBuffer(original);
+        HTMLEntity.unescape(buf);
+        assertEquals(expected, buf.toString());
+

