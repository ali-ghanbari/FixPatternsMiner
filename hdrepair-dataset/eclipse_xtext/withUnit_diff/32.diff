diff --git a/plugins/org.eclipse.xtext.common.types/src/org/eclipse/xtext/common/types/access/impl/ClasspathTypeProvider.java b/plugins/org.eclipse.xtext.common.types/src/org/eclipse/xtext/common/types/access/impl/ClasspathTypeProvider.java
index 99c33b1..baa7201 100644
--- a/plugins/org.eclipse.xtext.common.types/src/org/eclipse/xtext/common/types/access/impl/ClasspathTypeProvider.java
+++ b/plugins/org.eclipse.xtext.common.types/src/org/eclipse/xtext/common/types/access/impl/ClasspathTypeProvider.java
@@ -169 +169 @@
-			if (index == -1) {
+			if (index <= 0) {
diff --git a/tests/org.eclipse.xtend.core.tests/src/org/eclipse/xtend/core/tests/typesystem/ErrorTest.xtend b/tests/org.eclipse.xtend.core.tests/src/org/eclipse/xtend/core/tests/typesystem/ErrorTest.xtend
index 3801697..5e04ceb 100644
--- a/tests/org.eclipse.xtend.core.tests/src/org/eclipse/xtend/core/tests/typesystem/ErrorTest.xtend
+++ b/tests/org.eclipse.xtend.core.tests/src/org/eclipse/xtend/core/tests/typesystem/ErrorTest.xtend
@@ -870,0 +871,19 @@
+	
+	@Test
+	def void testErrorModel_57() throws Exception {
+		'''
+			package x class Y {
+				static int j
+				int i
+				new() {
+					this(j)
+				}
+				new(int i) {
+					this.i = i
+				}
+				def static invokeMe() {
+					j = 47 new .i
+				}
+			}
+		'''.processWithoutException
+	}
diff --git a/tests/org.eclipse.xtend.core.tests/xtend-gen/org/eclipse/xtend/core/tests/typesystem/ErrorTest.java b/tests/org.eclipse.xtend.core.tests/xtend-gen/org/eclipse/xtend/core/tests/typesystem/ErrorTest.java
index 2aaf3ce..3aa8cd8 100644
--- a/tests/org.eclipse.xtend.core.tests/xtend-gen/org/eclipse/xtend/core/tests/typesystem/ErrorTest.java
+++ b/tests/org.eclipse.xtend.core.tests/xtend-gen/org/eclipse/xtend/core/tests/typesystem/ErrorTest.java
@@ -1625,0 +1626,43 @@
+  @Test
+  public void testErrorModel_57() throws Exception {
+    StringConcatenation _builder = new StringConcatenation();
+    _builder.append("package x class Y {");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("static int j");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("int i");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("new() {");
+    _builder.newLine();
+    _builder.append("\t\t");
+    _builder.append("this(j)");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("}");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("new(int i) {");
+    _builder.newLine();
+    _builder.append("\t\t");
+    _builder.append("this.i = i");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("}");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("def static invokeMe() {");
+    _builder.newLine();
+    _builder.append("\t\t");
+    _builder.append("j = 47 new .i");
+    _builder.newLine();
+    _builder.append("\t");
+    _builder.append("}");
+    _builder.newLine();
+    _builder.append("}");
+    _builder.newLine();
+    this.processWithoutException(_builder);
+  }
+  

