diff --git a/osmorc/src_test/org/osmorc/TestUtil.java b/osmorc/src_test/org/osmorc/TestUtil.java
index 09d1115..73289dc 100644
--- a/osmorc/src_test/org/osmorc/TestUtil.java
+++ b/osmorc/src_test/org/osmorc/TestUtil.java
@@ -186 +185,0 @@
-      DumbService.getInstance(project).waitForSmartMode();
diff --git a/osmorc/src_test/org/osmorc/inspection/InvalidImportInspectionTest.java b/osmorc/src_test/org/osmorc/inspection/InvalidImportInspectionTest.java
index 8b5bc4a..83505d6 100644
--- a/osmorc/src_test/org/osmorc/inspection/InvalidImportInspectionTest.java
+++ b/osmorc/src_test/org/osmorc/inspection/InvalidImportInspectionTest.java
@@ -28,0 +29 @@
+import com.intellij.openapi.application.ApplicationManager;
@@ -30,0 +32 @@
+import com.intellij.openapi.project.DumbService;
@@ -31,0 +34 @@
+import com.intellij.openapi.util.Computable;
@@ -32,0 +36 @@
+import com.intellij.psi.stubs.StubUpdatingIndex;
@@ -36 +40 @@
-import static org.hamcrest.Matchers.*;
+import com.intellij.util.indexing.FileBasedIndex;
@@ -38 +41,0 @@
-import static org.junit.Assert.assertThat;
@@ -44,0 +48,3 @@
+
+import static org.hamcrest.Matchers.*;
+import static org.junit.Assert.assertThat;
@@ -68,0 +75,4 @@
+
+      DumbService.getInstance(fixture.getProject()).waitForSmartMode();
+      FileBasedIndex.getInstance().ensureUpToDate(StubUpdatingIndex.INDEX_ID, fixture.getProject(), null);
+
@@ -79,0 +90 @@
+
@@ -84,3 +95 @@
-        PsiFile psiFile = TestUtil.loadPsiFile(fixture.getProject(), "t1", "t1/Importer.java");
-
-        List<ProblemDescriptor> list = TestUtil.runInspection(new InvalidImportInspection(), psiFile, fixture.getProject());
+      List<ProblemDescriptor> list = runTest("t1", "t1/Importer.java");
@@ -110 +119,11 @@
-    @SuppressWarnings({"ConstantConditions"})
+  private List<ProblemDescriptor> runTest(final String moduleName, final String filePathInSource) {
+    return ApplicationManager.getApplication().runReadAction(new Computable<List<ProblemDescriptor>>(){
+      public List<ProblemDescriptor> compute() {
+        PsiFile psiFile = TestUtil.loadPsiFile(fixture.getProject(), moduleName, filePathInSource);
+
+        return TestUtil.runInspection(new InvalidImportInspection(), psiFile, fixture.getProject());
+      }
+    });
+  }
+
+  @SuppressWarnings({"ConstantConditions"})
@@ -117,3 +136 @@
-        PsiFile psiFile = TestUtil.loadPsiFile(fixture.getProject(), "t2", "t2/Importer.java");
-
-        List<ProblemDescriptor> list = TestUtil.runInspection(new InvalidImportInspection(), psiFile, fixture.getProject());
+    List<ProblemDescriptor> list = runTest("t2", "t2/Importer.java");
@@ -141,3 +158 @@
-        PsiFile psiFile = TestUtil.loadPsiFile(fixture.getProject(), "t3", "t3/Importer.java");
-
-        List<ProblemDescriptor> list = TestUtil.runInspection(new InvalidImportInspection(), psiFile, fixture.getProject());
+      List<ProblemDescriptor> list = runTest("t3", "t3/Importer.java");
@@ -165,3 +180 @@
-        PsiFile psiFile = TestUtil.loadPsiFile(fixture.getProject(), "t4", "t4/Importer.java");
-
-        List<ProblemDescriptor> list = TestUtil.runInspection(new InvalidImportInspection(), psiFile, fixture.getProject());
+      List<ProblemDescriptor> list = runTest("t4", "t4/Importer.java");
@@ -172 +185 @@
-    private IdeaProjectTestFixture fixture;
+    private final IdeaProjectTestFixture fixture;

