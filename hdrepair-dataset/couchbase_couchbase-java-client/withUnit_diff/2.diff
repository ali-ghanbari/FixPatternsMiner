diff --git a/src/main/java/com/couchbase/client/internal/ViewFuture.java b/src/main/java/com/couchbase/client/internal/ViewFuture.java
index 4678e17..4c9a100 100644
--- a/src/main/java/com/couchbase/client/internal/ViewFuture.java
+++ b/src/main/java/com/couchbase/client/internal/ViewFuture.java
@@ -94 +93,0 @@
-    notifyListeners();
diff --git a/src/test/java/com/couchbase/client/ViewTest.java b/src/test/java/com/couchbase/client/ViewTest.java
index ddc4383..0ee8fa5 100644
--- a/src/test/java/com/couchbase/client/ViewTest.java
+++ b/src/test/java/com/couchbase/client/ViewTest.java
@@ -335,0 +336,30 @@
+  @Test
+  public void testViewFutureWithListener() throws Exception {
+    final Query query = new Query();
+    query.setReduce(false);
+    query.setIncludeDocs(true);
+
+    HttpFuture<View> future =
+      client.asyncGetView(DESIGN_DOC_W_REDUCE, VIEW_NAME_W_REDUCE);
+
+    final CountDownLatch latch = new CountDownLatch(1);
+    future.addListener(new HttpCompletionListener() {
+      @Override
+      public void onComplete(HttpFuture<?> f) throws Exception {
+        View view = (View) f.get();
+        HttpFuture<ViewResponse> queryFuture = client.asyncQuery(view, query);
+        queryFuture.addListener(new HttpCompletionListener() {
+          @Override
+          public void onComplete(HttpFuture<?> f) throws Exception {
+            ViewResponse resp = (ViewResponse) f.get();
+            if (resp.size() == ITEMS.size()) {
+              latch.countDown();
+            }
+          }
+        });
+      }
+    });
+
+    assertTrue(latch.await(3, TimeUnit.SECONDS));
+  }
+

