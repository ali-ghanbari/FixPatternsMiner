diff --git a/common/test/unit/com/thoughtworks/go/domain/PipelineLabelTest.java b/common/test/unit/com/thoughtworks/go/domain/PipelineLabelTest.java
index 36e2d48..7a834ee 100644
--- a/common/test/unit/com/thoughtworks/go/domain/PipelineLabelTest.java
+++ b/common/test/unit/com/thoughtworks/go/domain/PipelineLabelTest.java
@@ -21,0 +22 @@
+import com.thoughtworks.go.config.materials.svn.SvnMaterial;
@@ -224 +225 @@
-        assertThat(res, is("release-" + GIT_REVISION.substring(0, 4)  + "-" + SVN_REVISION));
+        assertThat(res, is("release-" + GIT_REVISION.substring(0, 4) + "-" + SVN_REVISION));
@@ -231,0 +233,30 @@
+    }
+
+    @Test
+    public void canNotMatchWithTruncationWhenMaterialNameHasAColon() throws Exception {
+        final String[][] expectedGroups = { { "git:one", "7" } };
+        String res = assertLabelGroupsMatchingAndReplace("release-${git:one[:7]}", expectedGroups);
+        assertThat(res, is("release-${git:one[:7]}"));
+    }
+
+    @Test
+    public void shouldReplaceTheTemplateWithSpecialCharacters() throws Exception {
+        ensureLabelIsReplaced("SVNMaterial");
+        ensureLabelIsReplaced("SVN-Material");
+        ensureLabelIsReplaced("SVN_Material");
+        ensureLabelIsReplaced("SVN!Material");
+        ensureLabelIsReplaced("SVN__##Material_1023_WithNumbers");
+        ensureLabelIsReplaced("SVN_Material-_!!_");
+        ensureLabelIsReplaced("svn_Material'WithQuote");
+        ensureLabelIsReplaced("SVN_Material.With.Period");
+        ensureLabelIsReplaced("SVN_Material#With#Hash");
+        ensureLabelIsReplaced("SVN_Material:With:Colon");
+        ensureLabelIsReplaced("SVN_Material~With~Tilde");
+
+        ensureLabelIsNOTReplaced("SVN*MATERIAL");
+        ensureLabelIsNOTReplaced("SVN+Material");
+        ensureLabelIsNOTReplaced("SVN^Material");
+        ensureLabelIsNOTReplaced("SVN_Material(With)Parentheses");
+        ensureLabelIsNOTReplaced("SVN_Material{With}Braces");
+        ensureLabelIsNOTReplaced("SVN**Material");
+        ensureLabelIsNOTReplaced("SVN\\Material_With_Backslash");
@@ -287,0 +319,19 @@
+
+    private void ensureLabelIsReplaced(String name) {
+        PipelineLabel label = getReplacedLabelFor(name, String.format("release-${%s}", name));
+        assertThat(label.toString(), is("release-" + ModificationsMother.currentRevision()));
+    }
+
+    private void ensureLabelIsNOTReplaced(String name) {
+        String labelFormat = String.format("release-${%s}", name);
+        PipelineLabel label = getReplacedLabelFor(name, labelFormat);
+        assertThat(label.toString(), is(labelFormat));
+    }
+
+    private PipelineLabel getReplacedLabelFor(String name, String labelFormat) {
+        MaterialRevisions materialRevisions = ModificationsMother.oneUserOneFile();
+        PipelineLabel label = PipelineLabel.create(labelFormat);
+        ((SvnMaterial) materialRevisions.getRevisions().get(0).getMaterial()).setName(new CaseInsensitiveString(name));
+        label.updateLabel(materialRevisions.getNamedRevisions());
+        return label;
+    }
diff --git a/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java b/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java
index 0b77ba9..132a09b 100644
--- a/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java
+++ b/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java
@@ -45 +45 @@
-    public static final Pattern PATTERN = Pattern.compile("(?i)\\$\\{([\\w\\.]+)(\\[:(\\d+)\\])?\\}");
+    public static final Pattern PATTERN = Pattern.compile("(?i)\\$\\{([a-zA-Z0-9_\\-\\.!~'#:]+)(\\[:(\\d+)\\])?\\}");

