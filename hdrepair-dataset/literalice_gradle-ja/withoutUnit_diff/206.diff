diff --git a/subprojects/core/src/main/groovy/org/gradle/api/tasks/JavaExec.java b/subprojects/core/src/main/groovy/org/gradle/api/tasks/JavaExec.java
index df833ac..63f8fb3 100644
--- a/subprojects/core/src/main/groovy/org/gradle/api/tasks/JavaExec.java
+++ b/subprojects/core/src/main/groovy/org/gradle/api/tasks/JavaExec.java
@@ -50,0 +51 @@
+        setMain(getMain()); // make convention mapping work (at least for 'main')
diff --git a/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/ApplicationIntegrationTest.groovy b/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/ApplicationIntegrationTest.groovy
index df592a5..94cc313 100644
--- a/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/ApplicationIntegrationTest.groovy
+++ b/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/ApplicationIntegrationTest.groovy
@@ -96 +96 @@
-    def "install complains if install directory exists and doesn't look like previous install"() {
+    def "installApp complains if install directory exists and doesn't look like previous install"() {
@@ -100 +100 @@
-install.destinationDir = buildDir
+installApp.destinationDir = buildDir
@@ -104 +104 @@
-        def result = executer.withTasks('install').runWithFailure()
+        def result = executer.withTasks('installApp').runWithFailure()
diff --git a/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/SamplesApplicationIntegrationTest.groovy b/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/SamplesApplicationIntegrationTest.groovy
index c2ce9df..f8d0442 100644
--- a/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/SamplesApplicationIntegrationTest.groovy
+++ b/subprojects/integ-test/src/integTest/groovy/org/gradle/integtests/SamplesApplicationIntegrationTest.groovy
@@ -38 +38 @@
-        executer.inDirectory(sample.dir).withTasks('install').run()
+        executer.inDirectory(sample.dir).withTasks('installApp').run()
diff --git a/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPlugin.groovy b/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPlugin.groovy
index 9e9162c..ed4eb25 100644
--- a/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPlugin.groovy
+++ b/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPlugin.groovy
@@ -40,0 +41,3 @@
+    private Project project
+    private ApplicationPluginConvention pluginConvention
+
@@ -41,0 +45 @@
+        this.project = project
@@ -43,5 +46,0 @@
-        def applicationPluginConvention = new ApplicationPluginConvention(project)
-        applicationPluginConvention.applicationName = project.name
-        project.convention.plugins.application = applicationPluginConvention
-        configureRunTask(project)
-        configureCreateScriptsTask(project, applicationPluginConvention)
@@ -49,3 +48,5 @@
-        def distSpec = createDistSpec(project, applicationPluginConvention)
-        configureInstallTask(project, applicationPluginConvention, distSpec)
-        configureDistZipTask(project, applicationPluginConvention, distSpec)
+        addPluginConvention()
+        addRunTask()
+        addCreateScriptsTask()
+        addInstallTask()
+        addDistZipTask()
@@ -54,14 +55,4 @@
-    private CopySpec createDistSpec(Project project, ApplicationPluginConvention applicationPluginConvention) {
-        def jar = project.tasks[JavaPlugin.JAR_TASK_NAME]
-        def startScripts = project.tasks[TASK_START_SCRIPTS_NAME]
-
-        project.copySpec {
-            into("lib") {
-                from(jar.outputs.files)
-                from(project.configurations.runtime)
-            }
-            into("bin") {
-                from(startScripts.outputs.files)
-                fileMode = 0755
-            }
-        }
+    private void addPluginConvention() {
+        pluginConvention = new ApplicationPluginConvention(project)
+        pluginConvention.applicationName = project.name
+        project.convention.plugins.application = pluginConvention
@@ -70 +61 @@
-    private void configureRunTask(Project project) {
+    private void addRunTask() {
@@ -74,0 +66 @@
+        run.conventionMapping.main = { pluginConvention.mainClassName }
@@ -78 +70 @@
-    private void configureCreateScriptsTask(Project project, ApplicationPluginConvention applicationPluginConvention) {
+    private void addCreateScriptsTask() {
@@ -82,2 +74,2 @@
-        startScripts.conventionMapping.mainClassName = { applicationPluginConvention.mainClassName }
-        startScripts.conventionMapping.applicationName = { applicationPluginConvention.applicationName }
+        startScripts.conventionMapping.mainClassName = { pluginConvention.mainClassName }
+        startScripts.conventionMapping.applicationName = { pluginConvention.applicationName }
@@ -87 +79 @@
-    private void configureInstallTask(Project project, ApplicationPluginConvention pluginConvention, CopySpec distSpec) {
+    private void addInstallTask() {
@@ -91 +83 @@
-        installTask.with(distSpec)
+        installTask.with(createDistSpec())
@@ -108 +100 @@
-    private void configureDistZipTask(Project project, ApplicationPluginConvention applicationPluginConvention, CopySpec distSpec) {
+    private void addDistZipTask() {
@@ -112,2 +104,2 @@
-        distZipTask.conventionMapping.baseName = { applicationPluginConvention.applicationName }
-        def prefix = { applicationPluginConvention.applicationPrefix }
+        distZipTask.conventionMapping.baseName = { pluginConvention.applicationName }
+        def prefix = { pluginConvention.applicationPrefix }
@@ -115 +107,17 @@
-            with(distSpec)
+            with(createDistSpec())
+        }
+    }
+
+    private CopySpec createDistSpec() {
+        def jar = project.tasks[JavaPlugin.JAR_TASK_NAME]
+        def startScripts = project.tasks[TASK_START_SCRIPTS_NAME]
+
+        project.copySpec {
+            into("lib") {
+                from(jar.outputs.files)
+                from(project.configurations.runtime)
+            }
+            into("bin") {
+                from(startScripts.outputs.files)
+                fileMode = 0755
+            }
diff --git a/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPluginConvention.groovy b/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPluginConvention.groovy
index 9f2c6ea..309003b 100644
--- a/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPluginConvention.groovy
+++ b/subprojects/plugins/src/main/groovy/org/gradle/api/plugins/ApplicationPluginConvention.groovy
@@ -19 +18,0 @@
-import org.gradle.api.tasks.JavaExec
@@ -33 +32 @@
-     * The full qualified name of the main class.
+     * The fully qualified name of the application's main class.
@@ -37,2 +35,0 @@
-    private String installDir
-
@@ -41 +38 @@
-    ApplicationPluginConvention(final Project project) {
+    ApplicationPluginConvention(Project project) {
@@ -43,11 +39,0 @@
-    }
-
-    /**
-     * Sets the full qualified name of the main class of an application.
-     */
-    public void setMainClassName(String mainClassName) {
-        this.mainClassName = mainClassName
-        def runTask = project.getTasks().withType(JavaExec).find {task ->
-            task.name == ApplicationPlugin.TASK_RUN_NAME
-        };
-        runTask.main = mainClassName

