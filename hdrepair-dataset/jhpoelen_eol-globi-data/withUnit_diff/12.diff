diff --git a/eol-globi-rest/src/main/java/org/eol/globi/server/util/ResultFormatterCSV.java b/eol-globi-rest/src/main/java/org/eol/globi/server/util/ResultFormatterCSV.java
index 20103c1..5ff1d6b 100644
--- a/eol-globi-rest/src/main/java/org/eol/globi/server/util/ResultFormatterCSV.java
+++ b/eol-globi-rest/src/main/java/org/eol/globi/server/util/ResultFormatterCSV.java
@@ -141 +141 @@
-            resultBuilder.append(node.getTextValue());
+            resultBuilder.append(node.asText());
diff --git a/eol-globi-rest/src/test/java/org/eol/globi/server/util/ResultFormatterCSVTest.java b/eol-globi-rest/src/test/java/org/eol/globi/server/util/ResultFormatterCSVTest.java
new file mode 100644
index 0000000..e82ff27
--- /dev/null
+++ b/eol-globi-rest/src/test/java/org/eol/globi/server/util/ResultFormatterCSVTest.java
@@ -0,0 +1,22 @@
+package org.eol.globi.server.util;
+
+import org.junit.Test;
+
+import static org.hamcrest.core.Is.is;
+import static org.junit.Assert.assertThat;
+
+public class ResultFormatterCSVTest {
+
+    @Test
+    public void toCSV() throws ResultFormattingException {
+        String format = new ResultFormatterCSV().format("{ \"columns\" : [ \"loc.latitude\", \"loc.longitude\" ], \"data\" : [ [ -25.0, 135.0 ], [ 40.9777996, -79.5252906 ] ]}");
+        assertThat(format, is("\"loc.latitude\",\"loc.longitude\"\n-25.0,135.0\n40.9777996,-79.5252906\n"));
+    }
+
+    @Test
+    public void toCSVText() throws ResultFormattingException {
+        String format = new ResultFormatterCSV().format("{ \"columns\" : [ \"loc.latitude\", \"loc.longitude\" ], \"data\" : [ [ \"one\", \"two\" ], [ \"three\", \"four\" ] ]}");
+        assertThat(format, is("\"loc.latitude\",\"loc.longitude\"\n\"one\",\"two\"\n\"three\",\"four\"\n"));
+    }
+
+}

