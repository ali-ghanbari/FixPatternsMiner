diff --git a/wicket/src/main/java/org/apache/wicket/ajax/markup/html/form/AjaxSubmitLink.java b/wicket/src/main/java/org/apache/wicket/ajax/markup/html/form/AjaxSubmitLink.java
index 60df0a7..28c64b3 100644
--- a/wicket/src/main/java/org/apache/wicket/ajax/markup/html/form/AjaxSubmitLink.java
+++ b/wicket/src/main/java/org/apache/wicket/ajax/markup/html/form/AjaxSubmitLink.java
@@ -31,28 +30,0 @@
- * <p/>
- * It works by splitting the javascript/Ajax calls from the normal non-ajax requests by generating:
- * 
- * <pre>
- * &lt;a href=&quot;normal action url&quot; onclick=&quot;ajax javascript script; return
- * false;&quot;&gt;link&lt;/a&gt;
- * </pre>
- * 
- * If/when javascript is turned off in the browser, or it doesn't support javascript, then the
- * browser will not respond to the onclick event, using the href directly. Wicket will then use a
- * normal request target, and call the serverside onClick with a null {@link AjaxRequestTarget}.
- * 
- * If javascript is enabled, Wicket will send an ajax request, and process it serverside with an
- * {@link AjaxRequestTarget} that is supplied to the server-side onClick method. The "return false"
- * in the &lt;a href&gt; onclick handler ensures the browser doesn't perform the normal request too.
- * 
- * The latter is nicely illustrated with this:
- * 
- * <pre>
- * &lt;a href=&quot;javascript:alert('href event handler');&quot;
- * onclick=&quot;alert('onclick event handler');&quot;&gt;clicking me gives two
- * alerts&lt;/a&gt;
- * 
- * &lt;a href=&quot;javascript:alert('href event handler');&quot;
- * onclick=&quot;alert('onclick event handler');return false;&quot;&gt;clicking me
- * gives only one alert&lt;/a&gt;
- * </pre>
- * 

