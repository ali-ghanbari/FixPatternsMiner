diff --git a/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/BigDecimalType.java b/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/BigDecimalType.java
index e1bd808..e5a0e8d 100644
--- a/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/BigDecimalType.java
+++ b/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/BigDecimalType.java
@@ -47 +47 @@
-        writer.writeValue(object.toString());
+    	writer.writeValue(((BigDecimal) object).toPlainString());
diff --git a/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/BigDecimalStringTest.java b/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/BigDecimalStringTest.java
new file mode 100644
index 0000000..da1079f
--- /dev/null
+++ b/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/BigDecimalStringTest.java
@@ -0,0 +1,37 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.cxf.aegis.type;
+
+import java.math.BigDecimal;
+
+import org.junit.Test;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+public class BigDecimalStringTest {
+
+    @Test
+    public void runMyTest() {
+        BigDecimal scientificNotation = new BigDecimal("0.000000001");
+        assertTrue(scientificNotation.toString().contains("E"));
+        assertFalse(scientificNotation.toPlainString().contains("E"));
+    }
+}

