diff --git a/modules/openlmis-web/src/main/java/org/openlmis/web/view/csv/OpenLmisCsvView.java b/modules/openlmis-web/src/main/java/org/openlmis/web/view/csv/OpenLmisCsvView.java
index 2aeb2ba..3fd197b 100644
--- a/modules/openlmis-web/src/main/java/org/openlmis/web/view/csv/OpenLmisCsvView.java
+++ b/modules/openlmis-web/src/main/java/org/openlmis/web/view/csv/OpenLmisCsvView.java
@@ -24 +24 @@
-    String fileName = "O" + System.currentTimeMillis() + ".csv";
+    String fileName = "O" + order.getId() + ".csv";
diff --git a/modules/openlmis-web/src/main/webapp/public/js/order/controller/view-order-list-controller.js b/modules/openlmis-web/src/main/webapp/public/js/order/controller/view-order-list-controller.js
index fd8917b..dded0b7 100644
--- a/modules/openlmis-web/src/main/webapp/public/js/order/controller/view-order-list-controller.js
+++ b/modules/openlmis-web/src/main/webapp/public/js/order/controller/view-order-list-controller.js
@@ -13,0 +14 @@
+    enableColumnResize:true,
@@ -25 +26 @@
-        "<span ng-show=\"!row.entity.productsOrdered\"  ng-cell-text>No Orders</span></div>"}
+        "<span ng-show=\"!row.entity.productsOrdered\"  ng-cell-text>No products in this order</span></div>"}
diff --git a/modules/shipment/src/test/java/org/openlmis/order/dto/OrderDTOTest.java b/modules/shipment/src/test/java/org/openlmis/order/dto/OrderDTOTest.java
new file mode 100644
index 0000000..80f89ac
--- /dev/null
+++ b/modules/shipment/src/test/java/org/openlmis/order/dto/OrderDTOTest.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright © 2013 VillageReach.  All Rights Reserved.  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
+ *
+ * If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+package org.openlmis.order.dto;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.openlmis.order.domain.Order;
+import org.openlmis.rnr.builder.RequisitionBuilder;
+import org.openlmis.rnr.dto.RnrDTO;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+import org.powermock.modules.junit4.PowerMockRunner;
+
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+import static com.natpryce.makeiteasy.MakeItEasy.a;
+import static com.natpryce.makeiteasy.MakeItEasy.make;
+import static com.natpryce.makeiteasy.MakeItEasy.with;
+import static org.hamcrest.CoreMatchers.is;
+import static org.junit.Assert.assertThat;
+import static org.openlmis.rnr.builder.RequisitionBuilder.defaultRnr;
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+import static org.powermock.api.mockito.PowerMockito.when;
+
+
+@RunWith(PowerMockRunner.class)
+@PrepareForTest(RnrDTO.class)
+public class OrderDTOTest {
+
+  @Test
+  public void shouldGetOrdersForView() throws Exception {
+    mockStatic(RnrDTO.class);
+
+    final Order order1 = new Order();
+    Date createdDate = new Date();
+    order1.setCreatedDate(createdDate);
+    order1.setRnr(make(a(defaultRnr)));
+
+    final Order order2 = new Order();
+    order2.setRnr(make(a(defaultRnr, with(RequisitionBuilder.periodId, 2))));
+
+    final RnrDTO dtoForOrder1 = new RnrDTO();
+    dtoForOrder1.setId(1);
+    final RnrDTO dtoForOrder2 = new RnrDTO();
+    dtoForOrder2.setId(2);
+
+    when(RnrDTO.prepareForOrderView(order1.getRnr())).thenReturn(dtoForOrder1);
+    when(RnrDTO.prepareForOrderView(order2.getRnr())).thenReturn(dtoForOrder2);
+
+    List<Order> orders = new ArrayList<Order>() {{
+      add(order1);
+      add(order2);
+    }};
+
+    List<OrderDTO> orderDTOs = OrderDTO.getOrdersForView(orders);
+
+    assertThat(orderDTOs.get(0).getRnr(), is(dtoForOrder1));
+    assertThat(orderDTOs.get(1).getRnr(), is(dtoForOrder2));
+    assertThat(orderDTOs.get(0).getCreatedDate(), is(createdDate));
+  }
+}
diff --git a/modules/shipment/src/test/resources/org/openlmis/order/dto/OrderDTOTest.java b/modules/shipment/src/test/resources/org/openlmis/order/dto/OrderDTOTest.java
deleted file mode 100644
index d6b3e7f..0000000
--- a/modules/shipment/src/test/resources/org/openlmis/order/dto/OrderDTOTest.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Copyright © 2013 VillageReach.  All Rights Reserved.  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
- *
- * If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
-package org.openlmis.order.dto;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.openlmis.order.domain.Order;
-import org.openlmis.rnr.builder.RequisitionBuilder;
-import org.openlmis.rnr.dto.RnrDTO;
-import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.powermock.modules.junit4.PowerMockRunner;
-
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-
-import static com.natpryce.makeiteasy.MakeItEasy.a;
-import static com.natpryce.makeiteasy.MakeItEasy.make;
-import static com.natpryce.makeiteasy.MakeItEasy.with;
-import static org.hamcrest.CoreMatchers.is;
-import static org.junit.Assert.assertThat;
-import static org.openlmis.rnr.builder.RequisitionBuilder.defaultRnr;
-import static org.powermock.api.mockito.PowerMockito.mockStatic;
-import static org.powermock.api.mockito.PowerMockito.when;
-
-
-@RunWith(PowerMockRunner.class)
-@PrepareForTest(RnrDTO.class)
-public class OrderDTOTest {
-
-  @Test
-  public void shouldGetOrdersForView() throws Exception {
-    mockStatic(RnrDTO.class);
-
-    final Order order1 = new Order();
-    Date createdDate = new Date();
-    order1.setCreatedDate(createdDate);
-    order1.setRnr(make(a(defaultRnr)));
-
-    final Order order2 = new Order();
-    order2.setRnr(make(a(defaultRnr, with(RequisitionBuilder.periodId, 2))));
-
-    final RnrDTO dtoForOrder1 = new RnrDTO();
-    dtoForOrder1.setId(1);
-    final RnrDTO dtoForOrder2 = new RnrDTO();
-    dtoForOrder2.setId(2);
-
-    when(RnrDTO.prepareDTOWithSupplyingDepot(order1.getRnr())).thenReturn(dtoForOrder1);
-    when(RnrDTO.prepareDTOWithSupplyingDepot(order2.getRnr())).thenReturn(dtoForOrder2);
-
-    List<Order> orders = new ArrayList<Order>() {{
-      add(order1);
-      add(order2);
-    }};
-
-    List<OrderDTO> orderDTOs = OrderDTO.getOrdersForView(orders);
-
-    assertThat(orderDTOs.get(0).getRnr(), is(dtoForOrder1));
-    assertThat(orderDTOs.get(1).getRnr(), is(dtoForOrder2));
-    assertThat(orderDTOs.get(0).getCreatedDate(), is(createdDate));
-  }
-}

