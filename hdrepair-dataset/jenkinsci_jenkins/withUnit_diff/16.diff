diff --git a/core/src/main/java/jenkins/model/Jenkins.java b/core/src/main/java/jenkins/model/Jenkins.java
index db79fab..ce9b2f8 100755
--- a/core/src/main/java/jenkins/model/Jenkins.java
+++ b/core/src/main/java/jenkins/model/Jenkins.java
@@ -3523 +3523 @@
-                    if (rest.startsWith("/"+a.getUrlName()+"/"))
+                    if (rest.startsWith("/"+a.getUrlName()+"/") || rest.equals("/"+a.getUrlName()))
diff --git a/core/src/main/resources/hudson/model/EnvironmentContributor/EnvVarsHtml/index.groovy b/core/src/main/resources/hudson/model/EnvironmentContributor/EnvVarsHtml/index.groovy
index 878d591..eb45597 100644
--- a/core/src/main/resources/hudson/model/EnvironmentContributor/EnvVarsHtml/index.groovy
+++ b/core/src/main/resources/hudson/model/EnvironmentContributor/EnvVarsHtml/index.groovy
@@ -0,0 +1 @@
+package hudson.model.EnvironmentContributor.EnvVarsHtml;
diff --git a/test/src/test/java/jenkins/model/JenkinsTest.java b/test/src/test/java/jenkins/model/JenkinsTest.java
index cc7082d..39116fb 100644
--- a/test/src/test/java/jenkins/model/JenkinsTest.java
+++ b/test/src/test/java/jenkins/model/JenkinsTest.java
@@ -25,0 +26,6 @@
+import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
+import hudson.model.InvisibleAction;
+import hudson.model.RootAction;
+import hudson.model.UnprotectedRootAction;
+import hudson.security.FullControlOnceLoggedInAuthorizationStrategy;
+import hudson.util.HttpResponses;
@@ -30,0 +37 @@
+import org.jvnet.hudson.test.Bug;
@@ -31,0 +39,5 @@
+import org.jvnet.hudson.test.TestExtension;
+import org.kohsuke.stapler.HttpResponse;
+import org.xml.sax.SAXException;
+
+import java.io.IOException;
@@ -163,0 +176,65 @@
+
+    /**
+     * Makes sure access to "/foobar" for UnprotectedRootAction gets through.
+     */
+    @Bug(14113)
+    public void testUnprotectedRootAction() throws Exception {
+        jenkins.setSecurityRealm(createDummySecurityRealm());
+        jenkins.setAuthorizationStrategy(new FullControlOnceLoggedInAuthorizationStrategy());
+        WebClient wc = createWebClient();
+        wc.goTo("/foobar");
+        wc.goTo("/foobar/");
+        wc.goTo("/foobar/zot");
+
+        // and make sure this fails
+        try {
+            wc.goTo("/foobar-zot/");
+            fail();
+        } catch (FailingHttpStatusCodeException e) {
+            assertEquals(500,e.getStatusCode());
+        }
+
+        assertEquals(3,jenkins.getExtensionList(RootAction.class).get(RootActionImpl.class).count);
+    }
+
+    @TestExtension("testUnprotectedRootAction")
+    public static class RootActionImpl implements UnprotectedRootAction {
+        private int count;
+
+        public String getIconFileName() {
+            return null;
+        }
+
+        public String getDisplayName() {
+            return null;
+        }
+
+        public String getUrlName() {
+            return "foobar";
+        }
+
+        public HttpResponse doDynamic() {
+            assertTrue(Jenkins.getInstance().getAuthentication().getName().equals("anonymous"));
+            count++;
+            return HttpResponses.html("OK");
+        }
+    }
+
+    @TestExtension("testUnprotectedRootAction")
+    public static class ProtectedRootActionImpl implements RootAction {
+        public String getIconFileName() {
+            return null;
+        }
+
+        public String getDisplayName() {
+            return null;
+        }
+
+        public String getUrlName() {
+            return "foobar-zot";
+        }
+
+        public HttpResponse doDynamic() {
+            throw new AssertionError();
+        }
+    }

