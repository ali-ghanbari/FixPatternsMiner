diff --git a/core/src/main/java/hudson/cli/CopyJobCommand.java b/core/src/main/java/hudson/cli/CopyJobCommand.java
index a8049bd..8d1c866 100644
--- a/core/src/main/java/hudson/cli/CopyJobCommand.java
+++ b/core/src/main/java/hudson/cli/CopyJobCommand.java
@@ -78 +78 @@
-        ig.copy(src,dst);
+        ig.copy(src,dst).save();
diff --git a/test/src/test/java/hudson/cli/CopyJobCommandTest.java b/test/src/test/java/hudson/cli/CopyJobCommandTest.java
index 06941c8..3bd1c21 100644
--- a/test/src/test/java/hudson/cli/CopyJobCommandTest.java
+++ b/test/src/test/java/hudson/cli/CopyJobCommandTest.java
@@ -39,0 +40,6 @@
+import static org.hamcrest.MatcherAssert.assertThat;
+
+import static hudson.cli.CLICommandInvoker.Matcher.hasNoStandardOutput;
+import static hudson.cli.CLICommandInvoker.Matcher.hasNoErrorOutput;
+import static hudson.cli.CLICommandInvoker.Matcher.succeeded;
+
@@ -58,0 +65,19 @@
+    // hold off build until saved only makes sense on the UI with config screen shown after copying;
+    // expect the CLI copy command to leave the job buildable
+    @Test public void copiedJobIsBuildable() throws Exception {
+        FreeStyleProject p1 = j.createFreeStyleProject();
+        String copiedProjectName = "p2";
+
+        CLICommandInvoker.Result result = new CLICommandInvoker(j, new CopyJobCommand())
+                .invokeWithArgs(p1.getName(), copiedProjectName);
+
+        assertThat("Command expected to succeed; " + result.stderr() + ' ' + result.stdout(), result, succeeded());
+        assertThat("stdout empty", result, hasNoStandardOutput());
+        assertThat("stderr empty", result, hasNoErrorOutput());
+
+        FreeStyleProject p2 = (FreeStyleProject)j.jenkins.getItem(copiedProjectName);
+
+        assertNotNull(p2);
+        assertTrue(p2.isBuildable());
+    }
+

