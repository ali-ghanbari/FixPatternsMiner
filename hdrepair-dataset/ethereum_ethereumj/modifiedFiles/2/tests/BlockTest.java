package org.ethereum.core;

import java.math.BigInteger;

import org.ethereum.net.message.BlocksMessage;
import org.ethereum.net.message.StaticMessages;
import org.ethereum.util.RLPList;
import org.spongycastle.util.encoders.Hex;
import org.ethereum.core.Block;
import org.ethereum.core.Genesis;
import org.ethereum.util.RLP;
import org.junit.Test;

import static org.junit.Assert.*;

public class BlockTest {
	
	// https://ethereum.etherpad.mozilla.org/12
	private String CPP_PoC5_GENESIS_HEX_RLP_ENCODED = "f8abf8a7a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a023b503734ff34ddb7bd5e478f1645680ec778ab3f90007cb1c854653693e5adc80834000008080830f4240808080a004994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829c0c0";
	private String CPP_PoC5_GENESIS_HEX_HASH = Hex.toHexString(StaticMessages.GENESIS_HASH);

    @Test /* got from go guy */
    public void testGenesisFromRLP(){
    	// from RLP encoding
    	byte[] genesisBytes = Hex.decode(CPP_PoC5_GENESIS_HEX_RLP_ENCODED);
    	Block genesisFromRLP = new Block(genesisBytes);
    	Block genesis = Genesis.getInstance();
    	assertEquals(Hex.toHexString(genesis.getHash()), Hex.toHexString(genesisFromRLP.getHash()));
    	assertEquals(Hex.toHexString(genesis.getParentHash()), Hex.toHexString(genesisFromRLP.getParentHash()));
    	assertEquals(Hex.toHexString(genesis.getStateRoot()), Hex.toHexString(genesisFromRLP.getStateRoot()));
    }
    
    @Test
    public void testGenesisFromNew() {
        /*	From: https://ethereum.etherpad.mozilla.org/11		
          	Genesis block is: 
             		( 
             			B32(0, 0, ...), 
        				B32(sha3(B())), 
        				B20(0, 0, ...), 
        				B32(stateRoot), 
        				B32(0, 0, ...), 
		    			P(2^22), 
        				P(0), 
        				P(0), 
        				P(1000000), 
        				P(0), 
        				P(0)
        				B()
        				B32(sha3(B(42)))
        			)
         */
    	Block genesis = Genesis.getInstance();
        assertEquals(CPP_PoC5_GENESIS_HEX_RLP_ENCODED, Hex.toHexString(genesis.getEncoded()));
        
        // Not really a good test because this compares Genesis.getHash() to itself
        assertEquals(CPP_PoC5_GENESIS_HEX_HASH, Hex.toHexString(genesis.getHash()));
    }
    
    @Test /* create BlockData from part of real RLP BLOCKS message */
    public void test3() {

        String blocksMsg = "F8C8F8C4A07B2536237CBF114A043B0F9B27C76F84AC160EA5B87B53E42C7E76148964D450A01DCC4DE8DEC75D7AAB85B567B6CCD41AD312451B948A7413F0A142FD40D49347943854AAF203BA5F8D49B1EC221329C7AEBCF050D3A07A3BE0EE10ECE4B03097BF74AABAC628AA0FAE617377D30AB1B97376EE31F41AA01DCC4DE8DEC75D7AAB85B567B6CCD41AD312451B948A7413F0A142FD40D49347833FBFE884533F1CE880A0000000000000000000000000000000000000000000000000F3DEEA84969B6E95C0C0";

        byte[] payload = Hex.decode(blocksMsg);
        Block blockData = new Block(payload);
        System.out.println(blockData.toString());
    }

    @Test /* create BlockData from part of real RLP BLOCKS message POC-5 */
    public void test4() {

        String blocksMsg = "F8D1A0085F6A51A63D1FBA43D6E5FE166A47BED64A8B93A99012537D50F3279D4CEA52A01DCC4DE8DEC75D7AAB85B567B6CCD41AD312451B948A7413F0A142FD40D4934794D8758B101609A9F2A881A017BA86CBE6B7F0581DA068472689EA736CFC6B18FCAE9BA7454BADF9C65333A0317DFEFAE1D4AFFF6F90A000000000000000000000000000000000000000000000000000000000000000008401EDF1A18222778609184E72A0008080845373B0B180A0000000000000000000000000000000000000000000000000D1C0D8BC6D744943C0C0";

        byte[] payload = Hex.decode(blocksMsg);
        Block blockData = new Block(payload);
        System.out.println(blockData.toString());
    }

    @Test /* todo: that message kills the traffic somehow need to check it good chance it's  not our fault */
    public void test5() {

        String blockMsg

        byte[] payload = Hex.decode(blockMsg);
        RLPList rlpList = RLP.decode2(payload);

        BlocksMessage blockData = new BlocksMessage(rlpList);
        System.out.println(blockData.toString());
    }
    
    @Test
    public void testCalcDifficulty() {
<<<<<<< HEAD
     	Block genesis = Genesis.getInstance();
      	byte[] diffBytes = genesis.calcDifficulty();
      	BigInteger difficulty = new BigInteger(1, diffBytes);
=======
    	Block genesis = Genesis.getInstance();
    	byte[] diffBytes = genesis.calcDifficulty();
    	BigInteger difficulty = new BigInteger(1, diffBytes);
>>>>>>> Remove call to Blockchain DB from Genesis and fix default calc values
    	System.out.println("Genesis difficulty = " + difficulty.toString());
    	fail("Yet to be implemented.");
    }
    
    @Test
    public void testCalcGasLimit() {
    	Block genesis = Genesis.getInstance();
    	long gasLimit = genesis.calcGasLimit();
    	System.out.println("Genesis gasLimit = " + gasLimit);
    	fail("Yet to be implemented.");
    }
}