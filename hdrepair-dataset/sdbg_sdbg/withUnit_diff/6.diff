diff --git a/dart/editor/tools/plugins/com.google.dart.engine/src/com/google/dart/engine/scanner/IncrementalScanner.java b/dart/editor/tools/plugins/com.google.dart.engine/src/com/google/dart/engine/scanner/IncrementalScanner.java
index ec79797..c861957 100644
--- a/dart/editor/tools/plugins/com.google.dart.engine/src/com/google/dart/engine/scanner/IncrementalScanner.java
+++ b/dart/editor/tools/plugins/com.google.dart.engine/src/com/google/dart/engine/scanner/IncrementalScanner.java
@@ -141,0 +142 @@
+      tokenMap.put(originalStream, firstToken);
diff --git a/dart/editor/tools/plugins/com.google.dart.engine_test/src/com/google/dart/engine/scanner/IncrementalScannerTest.java b/dart/editor/tools/plugins/com.google.dart.engine_test/src/com/google/dart/engine/scanner/IncrementalScannerTest.java
index 03df473..e9a137b 100644
--- a/dart/editor/tools/plugins/com.google.dart.engine_test/src/com/google/dart/engine/scanner/IncrementalScannerTest.java
+++ b/dart/editor/tools/plugins/com.google.dart.engine_test/src/com/google/dart/engine/scanner/IncrementalScannerTest.java
@@ -19,0 +20 @@
+import com.google.dart.engine.utilities.collection.TokenMap;
@@ -21,0 +23,2 @@
+
+  private Token originalTokens;
@@ -52,0 +56,6 @@
+    Token oldToken = originalTokens.getNext();
+    assertSame(TokenType.SEMICOLON, oldToken.getType());
+    Token newToken = scanner.getTokenMap().get(oldToken);
+    assertNotNull(newToken);
+    assertEquals(TokenType.SEMICOLON, newToken.getType());
+    assertNotSame(oldToken, newToken);
@@ -60,0 +70,6 @@
+    Token oldToken = originalTokens.getNext();
+    assertEquals(TokenType.PLUS, oldToken.getType());
+    Token newToken = scanner.getTokenMap().get(oldToken);
+    assertNotNull(newToken);
+    assertEquals(TokenType.PLUS, newToken.getType());
+    assertNotSame(oldToken, newToken);
@@ -172,0 +188,15 @@
+  public void test_tokenMap() throws Exception {
+    IncrementalScanner scanner = assertTokens(//
+        "main() {a + b;}",
+        "main() { a + b;}");
+    TokenMap tokenMap = scanner.getTokenMap();
+    Token oldToken = originalTokens;
+    while (oldToken.getType() != TokenType.EOF) {
+      Token newToken = tokenMap.get(oldToken);
+      assertNotSame(oldToken, newToken);
+      assertSame(oldToken.getType(), newToken.getType());
+      assertEquals(oldToken.getLexeme(), newToken.getLexeme());
+      oldToken = oldToken.getNext();
+    }
+  }
+
@@ -200,2 +230,2 @@
-    Token originalToken = originalScanner.tokenize();
-    assertNotNull(originalToken);
+    originalTokens = originalScanner.tokenize();
+    assertNotNull(originalTokens);
@@ -210,2 +240,2 @@
-    Token modifiedToken = modifiedScanner.tokenize();
-    assertNotNull(modifiedToken);
+    Token modifiedTokens = modifiedScanner.tokenize();
+    assertNotNull(modifiedTokens);
@@ -218 +248 @@
-    Token incrementalToken = incrementalScanner.rescan(originalToken, replaceStart, originalEnd
+    Token incrementalTokens = incrementalScanner.rescan(originalTokens, replaceStart, originalEnd
@@ -223,0 +254 @@
+    Token incrementalToken = incrementalTokens;
@@ -225,2 +256,2 @@
-    while (incrementalToken.getType() != TokenType.EOF && modifiedToken.getType() != TokenType.EOF) {
-      assertSame("Wrong type for token", modifiedToken.getType(), incrementalToken.getType());
+    while (incrementalToken.getType() != TokenType.EOF && modifiedTokens.getType() != TokenType.EOF) {
+      assertSame("Wrong type for token", modifiedTokens.getType(), incrementalToken.getType());
@@ -229 +260 @@
-          modifiedToken.getOffset(),
+          modifiedTokens.getOffset(),
@@ -233 +264 @@
-          modifiedToken.getLength(),
+          modifiedTokens.getLength(),
@@ -237 +268 @@
-          modifiedToken.getLexeme(),
+          modifiedTokens.getLexeme(),
@@ -240 +271 @@
-      modifiedToken = modifiedToken.getNext();
+      modifiedTokens = modifiedTokens.getNext();
@@ -243 +274 @@
-    assertSame("Not enough tokens", TokenType.EOF, modifiedToken.getType());
+    assertSame("Not enough tokens", TokenType.EOF, modifiedTokens.getType());

