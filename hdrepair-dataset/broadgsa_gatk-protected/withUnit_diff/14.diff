diff --git a/protected/java/src/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindow.java b/protected/java/src/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindow.java
index 0425af3..5115a67 100644
--- a/protected/java/src/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindow.java
+++ b/protected/java/src/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindow.java
@@ -881 +881 @@
-                    if ( region.getStop() > markedSites.getStartLocation() + markedSites.getVariantSiteBitSet().length )
+                    if ( region.getStop() > markedSites.getStartLocation() + markedSites.getVariantSiteBitSet().length - 1 )
diff --git a/protected/java/test/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindowUnitTest.java b/protected/java/test/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindowUnitTest.java
index bf45fc2..bd0a893 100644
--- a/protected/java/test/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindowUnitTest.java
+++ b/protected/java/test/org/broadinstitute/sting/gatk/walkers/compression/reducereads/SlidingWindowUnitTest.java
@@ -255,0 +256,27 @@
+    @Test(enabled = true)
+    public void testMarkingRegionInCancerMode() {
+
+        final int contextSize = 10;
+        final SlidingWindow slidingWindow = new SlidingWindow("1", 0, contextSize, header, new GATKSAMReadGroupRecord("test"), 0, 0.05, 0.05, 0.05, 20, 20, 100, ReduceReads.DownsampleStrategy.Normal, false);
+        slidingWindow.addRead(createSimpleRead("1", 0, 34, 75));
+        slidingWindow.addRead(createSimpleRead("2", 0, 97, 73));
+        slidingWindow.addRead(createSimpleRead("3", 0, 98, 75));
+        slidingWindow.addRead(createSimpleRead("4", 0, 98, 75));
+        slidingWindow.addRead(createSimpleRead("5", 0, 98, 75));
+
+        final CompressionStash regions = new CompressionStash();
+        regions.add(new FinishedGenomeLoc("1", 0, 89, 109, true));
+
+        slidingWindow.closeVariantRegions(regions, null, false);
+        Assert.assertEquals(slidingWindow.getMarkedSitesForTesting().getVariantSiteBitSet().length, 76 + contextSize);
+    }
+
+    private GATKSAMRecord createSimpleRead(final String name, final int refIndex, final int alignmentStart, final int length) {
+
+        final GATKSAMRecord read = ArtificialSAMUtils.createArtificialRead(header, name, refIndex, alignmentStart, length);
+        read.setReadBases(Utils.dupBytes((byte) 'A', length));
+        read.setBaseQualities(Utils.dupBytes((byte) 30, length));
+        read.setMappingQuality(60);
+        return read;
+    }
+

