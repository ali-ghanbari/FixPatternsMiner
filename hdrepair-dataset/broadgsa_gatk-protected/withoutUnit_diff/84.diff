diff --git a/public/java/src/org/broadinstitute/sting/commandline/Argument.java b/public/java/src/org/broadinstitute/sting/commandline/Argument.java
index 3359228..67ce8a8 100755
--- a/public/java/src/org/broadinstitute/sting/commandline/Argument.java
+++ b/public/java/src/org/broadinstitute/sting/commandline/Argument.java
@@ -65 +65 @@
-    String doc();
+    String doc() default "Undocumented option";
diff --git a/public/scala/qscript/org/broadinstitute/sting/queue/qscripts/PacbioProcessingPipeline.scala b/public/scala/qscript/org/broadinstitute/sting/queue/qscripts/PacbioProcessingPipeline.scala
index a4a6636..ef73840 100755
--- a/public/scala/qscript/org/broadinstitute/sting/queue/qscripts/PacbioProcessingPipeline.scala
+++ b/public/scala/qscript/org/broadinstitute/sting/queue/qscripts/PacbioProcessingPipeline.scala
@@ -30 +30 @@
-  @Input(doc="Number of jobs to scatter/gather. Default: 0." , shortName = "sg", required=false)
+  @Argument(doc="Number of jobs to scatter/gather. Default: 0." , shortName = "sg", required=false)
@@ -33 +33 @@
-  @Input(doc="Sample Name to fill in the Read Group information (only necessary if using fasta/fastq)" , shortName = "sn", required=false)
+  @Argument(doc="Sample Name to fill in the Read Group information (only necessary if using fasta/fastq)" , shortName = "sn", required=false)
@@ -39 +39 @@
-  @Input(doc="Input is a BLASR generated BAM file", shortName = "blasr", fullName="blasr_bam", required=false)
+  @Argument(doc="Input is a BLASR generated BAM file", shortName = "blasr", fullName="blasr_bam", required=false)
@@ -43 +43 @@
-  @Input(doc="The default base qualities to use before recalibration. Default is Q20 (should be good for every dataset)." , shortName = "dbq", required=false)
+  @Argument(doc="The default base qualities to use before recalibration. Default is Q20 (should be good for every dataset)." , shortName = "dbq", required=false)
@@ -47 +47 @@
-  @Input(shortName="bwastring", required=false)
+  @Argument(shortName="bwastring", required=false)
@@ -51 +51 @@
-  @Input(shortName = "test", fullName = "test_mode", required = false)
+  @Argument(shortName = "test", fullName = "test_mode", required = false)
diff --git a/public/scala/src/org/broadinstitute/sting/queue/QSettings.scala b/public/scala/src/org/broadinstitute/sting/queue/QSettings.scala
index 429428c..2c0f43b 100644
--- a/public/scala/src/org/broadinstitute/sting/queue/QSettings.scala
+++ b/public/scala/src/org/broadinstitute/sting/queue/QSettings.scala
@@ -28 +28 @@
-import org.broadinstitute.sting.commandline.Argument
+import org.broadinstitute.sting.commandline.{ClassType, Argument}
@@ -43,0 +44 @@
+  @ClassType(classOf[Int])
@@ -55,0 +57 @@
+  @ClassType(classOf[Double])
@@ -58,0 +61 @@
+  @ClassType(classOf[Double])
@@ -61,0 +65 @@
+  @ClassType(classOf[Double])
@@ -64,0 +69 @@
+  @ClassType(classOf[Double])
diff --git a/public/scala/src/org/broadinstitute/sting/queue/util/ReflectionUtils.scala b/public/scala/src/org/broadinstitute/sting/queue/util/ReflectionUtils.scala
index 980a22e..15101fd 100644
--- a/public/scala/src/org/broadinstitute/sting/queue/util/ReflectionUtils.scala
+++ b/public/scala/src/org/broadinstitute/sting/queue/util/ReflectionUtils.scala
@@ -162 +162,3 @@
-    if (field.getGenericType.isInstanceOf[ParameterizedType]) {
+    if (hasAnnotation(field, classOf[ClassType])) {
+      Some(Array(getAnnotation(field, classOf[ClassType]).value))
+    } else if (field.getGenericType.isInstanceOf[ParameterizedType]) {
@@ -165,4 +167 @@
-    } else if (hasAnnotation(field, classOf[ClassType])) {
-      Some(Array(getAnnotation(field, classOf[ClassType]).value))
-    }
-    else None
+    } else None

