diff --git a/modules/core/src/main/java/org/gridgain/grid/kernal/GridKernal.java b/modules/core/src/main/java/org/gridgain/grid/kernal/GridKernal.java
index 91bb60b..6f8f4f1 100644
--- a/modules/core/src/main/java/org/gridgain/grid/kernal/GridKernal.java
+++ b/modules/core/src/main/java/org/gridgain/grid/kernal/GridKernal.java
@@ -756 +756 @@
-            // Notify discovery manager the first to make sure that topology is discovered.
+            // Notify dis0covery manager the first to make sure that topology is discovered.
diff --git a/modules/core/src/test/java/org/gridgain/testframework/junits/GridAbstractTest.java b/modules/core/src/test/java/org/gridgain/testframework/junits/GridAbstractTest.java
index c60b4c5..ca37f44 100644
--- a/modules/core/src/test/java/org/gridgain/testframework/junits/GridAbstractTest.java
+++ b/modules/core/src/test/java/org/gridgain/testframework/junits/GridAbstractTest.java
@@ -38,0 +39 @@
+import java.io.*;
@@ -43,0 +45 @@
+import java.util.regex.*;
@@ -71,13 +72,0 @@
-
-    /** */
-    private transient boolean startGrid;
-
-    /** */
-    protected transient GridLogger log;
-
-    /** */
-    private transient ClassLoader clsLdr;
-
-    /** */
-    private transient boolean stopGridErr;
-
@@ -89,0 +79,9 @@
+
+    /** */
+    protected transient GridLogger log;
+    /** */
+    private transient boolean startGrid;
+    /** */
+    private transient ClassLoader clsLdr;
+    /** */
+    private transient boolean stopGridErr;
@@ -111,0 +110,37 @@
+    }
+
+    /**
+     * @return New cache configuration with modified defaults.
+     */
+    public static GridCacheConfiguration defaultCacheConfiguration() {
+        GridCacheConfiguration cfg = new GridCacheConfiguration();
+
+        cfg.setStartSize(1024);
+        cfg.setQueryIndexEnabled(true);
+        cfg.setAtomicWriteOrderMode(PRIMARY);
+        cfg.setAtomicityMode(TRANSACTIONAL);
+        cfg.setDistributionMode(NEAR_PARTITIONED);
+        cfg.setWriteSynchronizationMode(FULL_SYNC);
+        cfg.setEvictionPolicy(null);
+
+        return cfg;
+    }
+
+    /**
+     * Gets external class loader.
+     *
+     * @return External class loader.
+     */
+    protected static ClassLoader getExternalClassLoader() {
+        String path = GridTestProperties.getProperty("p2p.uri.cls");
+
+        try {
+            String fixedPath = path.replaceAll("/", Matcher.quoteReplacement(File.separator));
+
+            fixedPath = fixedPath.replaceFirst(":\\\\","://");
+
+            return new URLClassLoader(new URL[] {new URL(fixedPath)}, U.gridClassLoader());
+        }
+        catch (MalformedURLException e) {
+            throw new RuntimeException("Failed to create URL: " + path, e);
+        }
@@ -280 +314,0 @@
-     * @throws Exception If failed.
@@ -281,0 +316 @@
+     * @throws Exception If failed.
@@ -295 +329,0 @@
-     * @throws Exception If failed.
@@ -296,0 +331 @@
+     * @throws Exception If failed.
@@ -333 +367,0 @@
-     * @throws Exception If failed.
@@ -334,0 +369 @@
+     * @throws Exception If failed.
@@ -347 +381,0 @@
-     * @throws Exception If failed.
@@ -348,0 +383 @@
+     * @throws Exception If failed.
@@ -916 +950,0 @@
-     * @return Grid configuration used for starting of grid.
@@ -917,0 +952 @@
+     * @return Grid configuration used for starting of grid.
@@ -988 +1022,0 @@
-     * @return Grid configuration used for starting of grid.
@@ -990,0 +1025 @@
+     * @return Grid configuration used for starting of grid.
@@ -1058,33 +1092,0 @@
-    }
-
-    /**
-     * @return New cache configuration with modified defaults.
-     */
-    public static GridCacheConfiguration defaultCacheConfiguration() {
-        GridCacheConfiguration cfg = new GridCacheConfiguration();
-
-        cfg.setStartSize(1024);
-        cfg.setQueryIndexEnabled(true);
-        cfg.setAtomicWriteOrderMode(PRIMARY);
-        cfg.setAtomicityMode(TRANSACTIONAL);
-        cfg.setDistributionMode(NEAR_PARTITIONED);
-        cfg.setWriteSynchronizationMode(FULL_SYNC);
-        cfg.setEvictionPolicy(null);
-
-        return cfg;
-    }
-
-    /**
-     * Gets external class loader.
-     *
-     * @return External class loader.
-     */
-    protected static ClassLoader getExternalClassLoader() {
-        String path = GridTestProperties.getProperty("p2p.uri.cls");
-
-        try {
-            return new URLClassLoader(new URL[]{new URL(path)}, U.gridClassLoader());
-        }
-        catch (MalformedURLException e) {
-            throw new RuntimeException("Failed to create URL: " + path, e);
-        }
@@ -1199 +1201 @@
-                "test=" + getName() + ", timeout=" + getTestTimeout() + ']');
+                    "test=" + getName() + ", timeout=" + getTestTimeout() + ']');
@@ -1212 +1214 @@
-                getTestTimeout() + ']' );
+                getTestTimeout() + ']');
@@ -1228 +1230 @@
-     *      ({@code null} by default).
+     * ({@code null} by default).
@@ -1288,7 +1289,0 @@
-         * @return Test resources.
-         */
-        public GridTestResources getTestResources() {
-            return rsrcs;
-        }
-
-        /**
@@ -1300,0 +1296,7 @@
+        /**
+         * @return Test resources.
+         */
+        public GridTestResources getTestResources() {
+            return rsrcs;
+        }
+

