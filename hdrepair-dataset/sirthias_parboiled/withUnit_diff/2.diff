diff --git a/core/src/main/java/org/parboiled/parserunners/RecoveringParseRunner.java b/core/src/main/java/org/parboiled/parserunners/RecoveringParseRunner.java
index 02456ba..ba483d2 100644
--- a/core/src/main/java/org/parboiled/parserunners/RecoveringParseRunner.java
+++ b/core/src/main/java/org/parboiled/parserunners/RecoveringParseRunner.java
@@ -225 +225 @@
-        Character bestChar = null;
+        Character bestChar = '\u0000'; // non-null default
diff --git a/java/src/main/java/org/parboiled/test/ParboiledTest.java b/java/src/main/java/org/parboiled/test/ParboiledTest.java
index 74a7b1f..644d192 100644
--- a/java/src/main/java/org/parboiled/test/ParboiledTest.java
+++ b/java/src/main/java/org/parboiled/test/ParboiledTest.java
@@ -20,0 +21 @@
+import org.parboiled.buffers.InputBuffer;
@@ -82,0 +84,4 @@
+    
+    public TestResult<V> test(Rule rule, InputBuffer inputBuffer) {
+        return new TestResult<V>(new ReportingParseRunner<V>(rule).run(inputBuffer));
+    }
@@ -86,0 +92,4 @@
+    
+    public TestResult<V> testWithRecovery(Rule rule, InputBuffer inputBuffer) {
+        return new TestResult<V>(new RecoveringParseRunner<V>(rule).run(inputBuffer));
+    }
diff --git a/java/src/test/java/org/parboiled/parserunners/SimpleErrorRecoveryTest.java b/java/src/test/java/org/parboiled/parserunners/SimpleErrorRecoveryTest.java
index 229140a..f320166 100644
--- a/java/src/test/java/org/parboiled/parserunners/SimpleErrorRecoveryTest.java
+++ b/java/src/test/java/org/parboiled/parserunners/SimpleErrorRecoveryTest.java
@@ -56 +56 @@
-    public void testSingleRecovery() {
+    public void testRecovery() {
@@ -200,0 +201,16 @@
+        
+        testWithRecovery(parser.Clause(), "Alice has cars!!")
+                .hasErrors("" +
+                        "Invalid input '!...', expected EOI (line 1, pos 15):\n" +
+                        "Alice has cars!!\n" +
+                        "              ^^\n")
+                .hasParseTree("" +
+                        "[Clause]E 'Alice has cars'\n" +
+                        "  [Subject] 'Alice'\n" +
+                        "    [Name] 'Alice'\n" +
+                        "      [\"Alice\"] 'Alice'\n" +
+                        "    [ZeroOrMore]\n" +
+                        "  [Verb] ' has '\n" +
+                        "    [\" has \"] ' has '\n" +
+                        "  [Object] 'cars'\n" +
+                        "    [\"cars\"] 'cars'\n");

