diff --git a/java/demo/localcal/README b/java/demo/localcal/README
index 35525f0..81d407e 100644
--- a/java/demo/localcal/README
+++ b/java/demo/localcal/README
@@ -104 +103,0 @@
-
@@ -111,7 +110,6 @@
-3.2 SET THE CALENDAR ID
-
-The calendar id uniquely identifies the calendar you want
-to work with.  Currently it is set to a test calendar that is
-owned by David Van Couvering.  You are free to use this, it is
-available to all, but you can also create your own calendar.  Here
-are the steps:
+3.2 SET UP A CALENDAR
+If you want you can use the default calendar for the Google Calendar
+user localcal@gmail.com, password "synchronize."  But be aware that
+others may be using this same calendar at the same time.  The alternative
+is to create your own Google Calendar account (if you don't have one
+already) and use that.
@@ -120,3 +118,3 @@
-Make sure it is set to be publicly available to all.  If you want
-to make it private, read the instructions for Google Calendar and
-the Google Calendar API for how to do this.
+Create a Google Mail account and then go to http://calendar.google.com
+to set up a calendar.  You can create multiple calendars, but 
+LocalCalendar only works with your default calendar.
@@ -124,37 +122 @@
-3.2.2 Get the id
-On the left hand pane of your Google Calendar page is the list of
-calendars you have created.  Click on the down-arrow for the
-one you want to use in LocalCalendar and choose "Calendar Settings"
-
-On the settings page, click on the orange [XML] box for calendar
-address.  You'll get a long URI of the form
-
-http://www.google.com/calendar/feeds/<id>@group.calendar.google.com/public/basic
-
-(unless you're using your default calendar, in which case it will be
-of the form
-
-http://www.google.com/calendar/feeds/<your-email-address>/public/basic)
-
-Your calendar id is either <id>@group.calendar.google.com or
-<your-email-address>.  
-
-3.2.3 Set the id in LocalCalendar
-Set the variable derbycal.calid in src/localcal.js to be your
-calendar id.
-
-3.3 SET THE DATE RANGE IN LOCALCALENDAR
-The date range used by LocalCalendar is currently hardcoded.  If you're
-interested, please feel free to make this dynamically settable by the
-user.  But I didn't get around to doing that.
-
-To change the date range, edit src/localcal.js and modify the
-array derbycal.days to match the dates you're interested in.
-
-3.4 CHANGE THE TITLE
-If you want, you can change the title to match what your calendar
-is about.  Edit src/index.html and change the <h1> tag with the
-id "loginHeader" and also the <h1> tag just underneat the <div>
-with id "main-div".
-
-3.4 BUILD
+3.3 BUILD
@@ -170,3 +132,8 @@
-LocalCalendar shows a week's worth of events.  Each event is an 
-all-day event.  I didn't try to mess around with event times, this
-was more HTML and JavaScript than I was willing to write.
+LocalCalendar shows a week's worth of events.  You can change the
+week by changing the start date at the top.  The application will
+automatically pick the next Sunday from the date you enter as the
+starting date.  The default is the next Sunday from today.
+
+Each event is an all-day event.  I didn't try to mess around with 
+event times, this was more HTML and JavaScript than I was willing 
+to write.
diff --git a/java/demo/localcal/src/CalendarController.java b/java/demo/localcal/src/CalendarController.java
index 712e8f7..a988891 100644
--- a/java/demo/localcal/src/CalendarController.java
+++ b/java/demo/localcal/src/CalendarController.java
@@ -262 +262 @@
-}
+    }
diff --git a/java/demo/localcal/src/index.html b/java/demo/localcal/src/index.html
index efddcc0..98a8884 100644
--- a/java/demo/localcal/src/index.html
+++ b/java/demo/localcal/src/index.html
@@ -60 +60,13 @@
-<body id="body">
+<body id="body" onload="derbycal.init()">
+  <h1>My Week of Events</h1>
+  <form name="dateForm">
+      <table>
+          <tr>
+               <td><strong>Start Date: </strong></td>
+               <td>&nbsp;&nbsp;&nbsp;</td>
+               <td><input name="startDate" type="text"
+                    onChange="derbycal.changeStartDate()" 
+                    style="{font-weight: bold ; font-size : 14;}"/></td>
+          </tr>
+      </table>
+  </form>
@@ -62,3 +74,2 @@
-  <h1 id="loginHeader">My Week of Events</h1>
-  <h3>Please login to Google Calendar</h3>
-  <form class="login-form" name="loginForm" >
+  <form class="login-form" name="loginForm" id="loginForm">
+      <h3>Please login to Google Calendar</h3>
@@ -69 +80 @@
-              <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
+              <td><b>@gmail.com</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
@@ -91,2 +101,0 @@
-      <h1>My Week of Events</h1>
-      <hr>
diff --git a/java/demo/localcal/src/localcal.js b/java/demo/localcal/src/localcal.js
index 8be07b8..e4af3fd 100644
--- a/java/demo/localcal/src/localcal.js
+++ b/java/demo/localcal/src/localcal.js
@@ -22,3 +22 @@
-// This is the Google Calendar id for the shared calendar for this
-// application
-derbycal.calid = "olj8s6vvk5pu2b7oib47t57pps@group.calendar.google.com";
+// INITIALIZATION VARIABLES.  Set these as you see fit
@@ -32,0 +31,7 @@
+// This needs to be in a valid date format for initialization a Javascript date
+// It should generally be on a Sunday, but it can be any day and we'll start
+// the calendar from the next Sunday after your given date.
+derbycal.startDate = "October 12, 2006";
+
+// === END INIT VARIABLES ==
+
@@ -34,3 +39,2 @@
-** You need to change the dates if you want a different week showing
-** on the calendar.  Yes, I could calculate this, but I have bigger
-** fish to fry...
+* The array of days.  The days are hardcoded, the dates will be calculated
+* as part of the derbycal.init() function
@@ -39,7 +43,7 @@
-    ["Sunday",      "2006-10-01"],
-    ["Monday",      "2006-10-02"],
-    ["Tuesday",     "2006-10-03"],
-    ["Wednesday",   "2006-10-04"],
-    ["Thursday",    "2006-10-05"],
-    ["Friday",      "2006-10-06"],
-    ["Saturday",    "2006-10-07"]
+    ["Sunday",      ""],
+    ["Monday",      ""],
+    ["Tuesday",     ""],
+    ["Wednesday",   ""],
+    ["Thursday",    ""],
+    ["Friday",      ""],
+    ["Saturday",    ""]
@@ -48,2 +52,6 @@
-derbycal.startDate = derbycal.days[0][1];
-derbycal.endDate   = derbycal.days[6][1];
+// Sorry, English-chauvinist code...
+derbycal.months = [ 
+    "January", "Febuary", "March", "April", "May", "June",
+    "July", "August", "September", "October", "November",
+    "December"
+];
@@ -51,0 +60,56 @@
+
+
+/**
+* Do any initialization work.  This should be called when the
+* page is loaded
+*/
+derbycal.init = function() {
+  var today = new Date();
+  var dateForm = document.dateForm;
+  dateForm.startDate.value = derbycal.months[today.getMonth()] + " " +
+     today.getDate() + ", " + today.getFullYear();
+  derbycal.updateDays();
+}
+
+derbycal.updateDays = function() { 
+  derbycal.calcDays(document.dateForm.startDate.value);
+  derbycal.startDate = derbycal.days[0][1];
+  derbycal.endDate   = derbycal.days[6][1];  
+}
+
+derbycal.changeStartDate = function() {
+  derbycal.updateDays();
+  derbycal.refreshCalendar();
+}
+
+/**
+ * Given a starting day, set the dates for the derbycal.days
+ * array, starting with the next Sunday from the given start day.  
+ * This array is then used to set up the calendar.
+ */
+derbycal.calcDays = function(startDay) {
+    var date = new Date(startDay);
+
+    // adjust to the next Sunday, unless today is Sunday
+    var day = date.getDay();
+    var daysToSunday = 0;
+    if ( day != 0 ) {
+        daysToSunday = 7 - day;
+    }
+        
+    date.setDate(date.getDate() + daysToSunday);
+
+    // Update the date on the page to reflect Sunday's date
+    var dateForm = document.dateForm;
+    dateForm.startDate.value = derbycal.months[date.getMonth()] + 
+        " " + date.getDate() + ", " + date.getFullYear(); 
+
+    // Set the array of days to have the right dates based on
+    // the given start date
+    for ( day = 0 ; day < 7; day++ ) {
+        derbycal.days[day][1] = date.getFullYear() + "-" +
+                       (date.getMonth() + 1) + "-" +
+                       date.getDate();
+        date.setDate(date.getDate() + 1);
+    }
+} 
@@ -61 +125 @@
-    derbycal.user = loginForm.user.value;
+    derbycal.user = loginForm.user.value + "@gmail.com";
@@ -66 +130 @@
-        calapplet.login(derbycal.calid, derbycal.gmtOffset, 
+        calapplet.login(derbycal.user, derbycal.gmtOffset, 
@@ -71,0 +136 @@
+        statusText.style.visibility = "hidden";
@@ -96 +160,0 @@
-    document.getElementById("loginHeader").style.visibility = "hidden";
@@ -176 +240 @@
-        derbycal.addEventToPage(event.eventid, event.day, event.title);
+        derbycal.addEventToPage(event.eventid, event.day, event.date, event.title);
@@ -213 +277 @@
-        derbycal.addEventToPage(id, day, title);
+        derbycal.addEventToPage(id, day, date, title);
@@ -232 +296,6 @@
-derbycal.addEventToPage = function(id, day, title) {
+derbycal.addEventToPage = function(id, day, date, title) {
+    // Ignore the event if the date is out of range
+    if ( ! derbycal.dateInRange(date) ) {
+        return;
+    }
+    
@@ -257,0 +327,10 @@
+derbycal.dateInRange = function(date) {
+    for ( i = 0 ; i < 6 ; i++ ) {
+        if ( derbycal.days[i][1] == date ) {
+            return true;
+        }
+    }
+  
+    return false;
+}
+

