diff --git a/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/holdCursorIJ.out b/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/holdCursorIJ.out
deleted file mode 100644
index e8f9f9b..0000000
--- a/java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/holdCursorIJ.out
+++ /dev/null
@@ -1,340 +0,0 @@
-ij> --
------   Licensed to the Apache Software Foundation (ASF) under one or more
------   contributor license agreements.  See the NOTICE file distributed with
------   this work for additional information regarding copyright ownership.
------   The ASF licenses this file to You under the Apache License, Version 2.0
------   (the "License"); you may not use this file except in compliance with
------   the License.  You may obtain a copy of the License at
------
------      http://www.apache.org/licenses/LICENSE-2.0
------
------   Unless required by applicable law or agreed to in writing, software
------   distributed under the License is distributed on an "AS IS" BASIS,
------   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
------   See the License for the specific language governing permissions and
------   limitations under the License.
------
------ create a table
-create table t1(c11 int, c12 int);
-0 rows inserted/updated/deleted
-ij> -- insert data into tables
-insert into t1 values(1,1);
-1 row inserted/updated/deleted
-ij> insert into t1 values(2,2);
-1 row inserted/updated/deleted
-ij> -- set autocommit off
-autocommit off;
-ij> -- first test - make sure that only cursors created with holdability true
------ have open resultsets after commit
------ declare 3 different kind of cursors one for each jdbc release so far
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-ij> get scroll insensitive with nohold cursor jdk2 as 'SELECT * FROM t1';
-ij> get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> -- do fetches from these cursors
-next jdk1;
-C11 |C12        
------
-1 |1          
-ij> next jdk2;
-C11 |C12        
------
-1 |1          
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> --commit
-commit;
-ij> -- now try the fetch on cursors again after commit
------ cursors jdk1 and jdk2 will give errors
-next jdk1;
-ERROR XCL16: ResultSet not open. Operation 'next' not permitted. Verify that autocommit is OFF.
-ij> next jdk2;
-ERROR XCL16: ResultSet not open. Operation 'next' not permitted. Verify that autocommit is OFF.
-ij> next jdk4;
-C11 |C12        
------
-2 |2          
-ij> -- end of resultset for jdk4, but try next again
-next jdk4;
-No current row
-ij> close jdk4;
-ij> next jdk4;
-IJ ERROR: Unable to establish cursor JDK4@CONNECTION0
-ij> -- clean up.
-close jdk1;
-ij> close jdk2;
-ij> -- second test - make sure that all the cursors (including holdability true)
------ have their resultsets closed after rollback.
------ declare the cursors again, this time, try with rollback
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-ij> get scroll insensitive with nohold cursor jdk2 as 'SELECT * FROM t1';
-ij> get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> -- do fetches from these cursors
-next jdk1;
-C11 |C12        
------
-1 |1          
-ij> next jdk2;
-C11 |C12        
------
-1 |1          
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> --rollback
-rollback;
-ij> -- now try the fetch on cursors again after rollback
------ all the cursors will give errors
-next jdk1;
-ERROR XCL16: ResultSet not open. Operation 'next' not permitted. Verify that autocommit is OFF.
-ij> next jdk2;
-ERROR XCL16: ResultSet not open. Operation 'next' not permitted. Verify that autocommit is OFF.
-ij> next jdk4;
-ERROR XCL16: ResultSet not open. Operation 'next' not permitted. Verify that autocommit is OFF.
-ij> -- clean up.
-close jdk1;
-ij> close jdk2;
-ij> close jdk4;
-ij> -- third test - Define a hold cursor on a table. Shouldn't be able to drop that
------ table before & after commit. Have to close the cursor before table can be dropped.
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-ij> get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> next jdk1;
-C11 |C12        
------
-1 |1          
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> -- wont' be able to drop table because of cursors jdk1 and jdk4
------ in DerbyNetClient, cursor is closed on server and DROP TABLE succeeds
-drop table t1;
-0 rows inserted/updated/deleted
-ij> commit;
-ij> -- drop table still won't work because jdk4 is still open after commit
------ in DerbyNetClient, the table is already dropped
-drop table t1;
-ERROR 42Y55: 'DROP TABLE' cannot be performed on 'T1' because it does not exist.
-ij> -- close cursor jdk4 and try then deleting the table
------ in DerbyNetClient, the table is already dropped
-close jdk4;
-ij> drop table t1;
-ERROR 42Y55: 'DROP TABLE' cannot be performed on 'T1' because it does not exist.
-ij> -- clean up.
-close jdk1;
-ij> -- recreate and populate the table for next test
-create table t1(c11 int, c12 int);
-0 rows inserted/updated/deleted
-ij> insert into t1 values(1,1);
-1 row inserted/updated/deleted
-ij> insert into t1 values(2,2);
-1 row inserted/updated/deleted
-ij> -- fourth test - try to change the isolation level while there are
------ held cursors
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-ij> get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> next jdk1;
-C11 |C12        
------
-1 |1          
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> -- try to change the isolation level. will give error because of jdk1 and jdk4
------ no error in DerbyNetClient because cursor is closed on server
-set current isolation RR;
-0 rows inserted/updated/deleted
-ij> commit;
-ij> -- attempt to change isolation level should give error because of jdk4 hold cursor
------ no error in DerbyNetClient because cursor is closed on server
-set isolation = REPEATABLE READ;
-0 rows inserted/updated/deleted
-ij> -- close jdk4 and then should be able to change isolation
-close jdk4;
-ij> set isolation to serializable;
-0 rows inserted/updated/deleted
-ij> -- clean up.
-close jdk1;
-ij> -- fifth test - try isolation level change alongwith changing the isolation
------ level of just one statement
-get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> get with nohold cursor jdk1 as 'SELECT * FROM t1 WITH CS';
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> next jdk1;
-C11 |C12        
------
-1 |1          
-ij> -- following should fail because of cursor jdk4
------ no error in DerbyNetClient because cursor is closed on server
-set isolation RS;
-0 rows inserted/updated/deleted
-ij> -- following should fail because of cursor jdk4
------ no error in DerbyNetClient because cursor is closed on server
-set isolation UR;
-0 rows inserted/updated/deleted
-ij> close jdk4;
-ij> -- should be able to change the isolation now
-set isolation READ UNCOMMITTED;
-0 rows inserted/updated/deleted
-ij> set isolation RS;
-0 rows inserted/updated/deleted
-ij> -- clean up.
-close jdk1;
-ij> -- sixth test - try positioned update with hold cursor
-get with hold cursor jdk4 as 'SELECT * FROM t1 FOR UPDATE';
-ij> -- following should give error because cursor is not positioned on any row
-update t1 set c12=12 where current of jdk4;
-ERROR 24000: Invalid cursor state - no current row.
-ij> select * from t1;
-C11 |C12        
------
-1 |1          
-2 |2          
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> update t1 set c12=12 where current of jdk4;
-1 row inserted/updated/deleted
-ij> select * from t1;
-C11 |C12        
------
-1 |12         
-2 |2          
-ij> commit;
-ij> -- after commit, the next transaction should do a fetch again before doing
------ any positioned update
-update t1 set c12=123 where current of jdk4;
-ERROR 24000: Invalid cursor state - no current row.
-ij> select * from t1;
-C11 |C12        
------
-1 |12         
-2 |2          
-ij> next jdk4;
-C11 |C12        
------
-2 |2          
-ij> update t1 set c12=23 where current of jdk4;
-1 row inserted/updated/deleted
-ij> select * from t1;
-C11 |C12        
------
-1 |12         
-2 |23         
-ij> close jdk4;
-ij> update t1 set c12=234 where current of jdk4;
-ERROR 42X30: Cursor 'JDK4' not found. Verify that autocommit is OFF.
-ij> select * from t1;
-C11 |C12        
------
-1 |12         
-2 |23         
-ij> -- seventh test - try positioned delete with hold cursor
-get with hold cursor jdk4 as 'SELECT * FROM t1 FOR UPDATE';
-ij> -- following should give error because cursor is not positioned on any row
-delete from t1 where current of jdk4;
-ERROR 24000: Invalid cursor state - no current row.
-ij> select * from t1;
-C11 |C12        
------
-1 |12         
-2 |23         
-ij> next jdk4;
-C11 |C12        
------
-1 |12         
-ij> delete from  t1 where current of jdk4;
-1 row inserted/updated/deleted
-ij> select * from t1;
-C11 |C12        
------
-2 |23         
-ij> commit;
-ij> -- after commit, the next transaction should do a fetch again before doing
------ any positioned delete
-delete from t1 where current of jdk4;
-ERROR 24000: Invalid cursor state - no current row.
-ij> select * from t1;
-C11 |C12        
------
-2 |23         
-ij> next jdk4;
-C11 |C12        
------
-2 |23         
-ij> delete from t1 where current of jdk4;
-1 row inserted/updated/deleted
-ij> select * from t1;
-C11 |C12        
------
-ij> close jdk4;
-ij> delete from t1 where current of jdk4;
-ERROR 42X30: Cursor 'JDK4' not found. Verify that autocommit is OFF.
-ij> select * from t1;
-C11 |C12        
------
-ij> -- populate the table for next test
-insert into t1 values(1,1);
-1 row inserted/updated/deleted
-ij> insert into t1 values(2,2);
-1 row inserted/updated/deleted
-ij> -- eighth test - scrollable cursors
-get scroll insensitive with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> commit;
-ij> previous jdk4;
-No current row
-ij> after last jdk4;
-No current row
-ij> before first jdk4;
-No current row
-ij> first jdk4;
-C11 |C12        
------
-1 |1          
-ij> last jdk4;
-C11 |C12        
------
-2 |2          
-ij> next jdk4;
-No current row
-ij> previous jdk4;
-C11 |C12        
------
-2 |2          
-ij> next jdk4;
-No current row
-ij> close jdk4;
-ij> first jdk4;
-IJ ERROR: Unable to establish cursor JDK4@CONNECTION0
-ij> -- ninth test - close the updateable holdable cursor after commit
------ we get npe
-get with hold cursor jdk4 as 'SELECT * FROM T1 FOR UPDATE';
-ij> next jdk4;
-C11 |C12        
------
-1 |1          
-ij> commit;
-ij> close jdk4;
-ij> -- tenth test - bug 4515 - have a more useful message
------ update where current of fails in autocommit=true, held open cursor
-autocommit on;
-ij> get with hold cursor scrollCursor as 'select * from t1 for update of c12';
-ij> next scrollCursor;
-C11 |C12        
------
-1 |1          
-ij> update t1 set c12=c12+1 where current of scrollCursor;
-1 row inserted/updated/deleted
-ij> -- clean up.
-close scrollCursor;
-ij> drop table t1;
-0 rows inserted/updated/deleted
-ij> 
diff --git a/java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out b/java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out
index 9c022b5..c53e94e 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out
+++ b/java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out
@@ -28,0 +29 @@
+
@@ -68,0 +70 @@
+
@@ -100,24 +101,0 @@
-ij> -- third test - Define a hold cursor on a table. Shouldn't be able to drop that
--- table before & after commit. Have to close the cursor before table can be dropped.
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-ij> get with hold cursor jdk4 as 'SELECT * FROM t1';
-ij> next jdk1;
-C11        |C12        
------------------------
-1          |1          
-ij> next jdk4;
-C11        |C12        
------------------------
-1          |1          
-ij> -- wont' be able to drop table because of cursors jdk1 and jdk4
--- in DerbyNetClient, cursor is closed on server and DROP TABLE succeeds
-drop table t1;
-ERROR X0X95: Operation 'DROP TABLE' cannot be performed on object 'T1' because there is an open ResultSet dependent on that object.
-ij> commit;
-ij> -- drop table still won't work because jdk4 is still open after commit
--- in DerbyNetClient, the table is already dropped
-drop table t1;
-ERROR X0X95: Operation 'DROP TABLE' cannot be performed on object 'T1' because there is an open ResultSet dependent on that object.
-ij> -- close cursor jdk4 and try then deleting the table
--- in DerbyNetClient, the table is already dropped
-close jdk4;
@@ -126,2 +103,0 @@
-ij> -- clean up.
-close jdk1;
@@ -147,10 +123,4 @@
-ij> -- try to change the isolation level. will give error because of jdk1 and jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set current isolation RR;
-ERROR X0X03: Invalid transaction state - held cursor requires same isolation level
-ij> commit;
-ij> -- attempt to change isolation level should give error because of jdk4 hold cursor
--- no error in DerbyNetClient because cursor is closed on server
-set isolation = REPEATABLE READ;
-ERROR X0X03: Invalid transaction state - held cursor requires same isolation level
-ij> -- close jdk4 and then should be able to change isolation
+ij> -- changing isolation while cursor is open would fail; 
+-- but for client/server, with small data set, the server would already be
+-- closed. See discussion re DERBY-3801.
+-- close jdk4 and then should be able to change isolation
@@ -174,8 +143,0 @@
-ij> -- following should fail because of cursor jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set isolation RS;
-ERROR X0X03: Invalid transaction state - held cursor requires same isolation level
-ij> -- following should fail because of cursor jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set isolation UR;
-ERROR X0X03: Invalid transaction state - held cursor requires same isolation level
@@ -327,0 +290 @@
+
@@ -334,3 +297,4 @@
-ij> update t1 set c12=c12+1 where current of scrollCursor;
-ERROR 24000: Invalid cursor state - no current row.
-ij> -- clean up.
+ij> -- commented out for DERBY-4778
+-- update t1 set c12=c12+1 where current of scrollCursor;
+
+-- clean up.
@@ -340 +304 @@
-ij> 
+ij> 
\ No newline at end of file
diff --git a/java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall b/java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall
index 7bf52e6..70ae44d 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall
+++ b/java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall
@@ -13 +12,0 @@
-lang/holdCursorIJ.sql
diff --git a/java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall b/java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall
index 64613a1..e6c9375 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall
+++ b/java/testing/org/apache/derbyTesting/functionTests/suites/derbynetmats.runall
@@ -5 +4,0 @@
-lang/holdCursorIJ.sql
diff --git a/java/testing/org/apache/derbyTesting/functionTests/suites/j9derbynetmats.runall b/java/testing/org/apache/derbyTesting/functionTests/suites/j9derbynetmats.runall
index dab8770..2253cb6 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/suites/j9derbynetmats.runall
+++ b/java/testing/org/apache/derbyTesting/functionTests/suites/j9derbynetmats.runall
@@ -3 +2,0 @@
-lang/holdCursorIJ.sql
diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
index 6131f45..b68c16a 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
+++ b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
@@ -55,0 +56 @@
+        "holdCursorIJ"
diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ.sql b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ.sql
index f1de132..66d6667 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ.sql
+++ b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ.sql
@@ -84,9 +83,0 @@
--- third test - Define a hold cursor on a table. Shouldn't be able to drop that
--- table before & after commit. Have to close the cursor before table can be dropped.
-
-get with nohold cursor jdk1 as 'SELECT * FROM t1';
-get with hold cursor jdk4 as 'SELECT * FROM t1';
-next jdk1;
-next jdk4;
--- wont' be able to drop table because of cursors jdk1 and jdk4
--- in DerbyNetClient, cursor is closed on server and DROP TABLE succeeds
@@ -94,13 +84,0 @@
-commit;
-
--- drop table still won't work because jdk4 is still open after commit
--- in DerbyNetClient, the table is already dropped
-drop table t1;
-
--- close cursor jdk4 and try then deleting the table
--- in DerbyNetClient, the table is already dropped
-close jdk4;
-drop table t1;
-
--- clean up.
-close jdk1;
@@ -120,10 +98,3 @@
--- try to change the isolation level. will give error because of jdk1 and jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set current isolation RR;
-
-commit;
-
--- attempt to change isolation level should give error because of jdk4 hold cursor
--- no error in DerbyNetClient because cursor is closed on server
-set isolation = REPEATABLE READ;
-
+-- changing isolation while cursor is open would fail; 
+-- but for client/server, with small data set, the server would already be
+-- closed. See discussion re DERBY-3801.
@@ -143,6 +113,0 @@
--- following should fail because of cursor jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set isolation RS;
--- following should fail because of cursor jdk4
--- no error in DerbyNetClient because cursor is closed on server
-set isolation UR;
@@ -228 +193,2 @@
-update t1 set c12=c12+1 where current of scrollCursor;
+-- commented out for DERBY-4778
+-- update t1 set c12=c12+1 where current of scrollCursor;
diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ_app.properties b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ_app.properties
deleted file mode 100644
index 25ea208..0000000
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/holdCursorIJ_app.properties
+++ /dev/null
@@ -1,32 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to you under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-ij.database=jdbc:derby:wombat;create=true
-ij.protocol=jdbc:derby:
-
-ij.defaultResourcePackage=/org/apache/derbyTesting/functionTests/tests/lang/
-ij.showNoConnectionsAtStart=true
-ij.showNoCountForSelect=true
-
-runwithjdk13=false
-runwithibm13=false
-runwithj9=false
-
-# DataSource properties, only used if ij.dataSource is set
-ij.dataSource.databaseName=wombat
-ij.dataSource.createDatabase=create
-
-#Exclude for J2ME/Foundation - Expected ERROR: Holdability can not be changed using jdbc3.0 apis in JDKs lower than JDK1.4.
-runwithfoundation=false
\ No newline at end of file

