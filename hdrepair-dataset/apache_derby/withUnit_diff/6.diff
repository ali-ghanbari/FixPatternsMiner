diff --git a/java/engine/org/apache/derby/iapi/sql/execute/ExecPreparedStatement.java b/java/engine/org/apache/derby/iapi/sql/execute/ExecPreparedStatement.java
index d6af07a..8a51c7b 100644
--- a/java/engine/org/apache/derby/iapi/sql/execute/ExecPreparedStatement.java
+++ b/java/engine/org/apache/derby/iapi/sql/execute/ExecPreparedStatement.java
@@ -164 +164 @@
-	 * set this parepared statement to be valid
+	 * set this prepared statement to be valid
diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java
index d6aa128..986f4d6 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java
+++ b/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java
@@ -23,0 +24,2 @@
+import java.sql.Connection;
+import java.sql.PreparedStatement;
@@ -33,2 +34,0 @@
-import static junit.framework.Assert.fail;
-
@@ -37 +37,4 @@
-
+import org.apache.derby.iapi.services.context.ContextManager;
+import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
+import org.apache.derby.impl.jdbc.EmbedConnection;
+import org.apache.derby.impl.sql.GenericPreparedStatement;
@@ -39,3 +41,0 @@
-import static org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState;
-import static org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError;
-import static org.apache.derbyTesting.junit.BaseJDBCTestCase.assertUpdateCount;
@@ -64,0 +65,3 @@
+        s.addTest(new ConstraintCharacteristicsTest(
+                "testAlterConstraintInvalidation"));
+        
@@ -214 +217,30 @@
-    private static String[] tableConstraintTypes = {
+    /**
+     * Check that altering constraint characteristics invalidates prepared
+     * statements.
+     * @throws SQLException
+     */
+    public void testAlterConstraintInvalidation() throws SQLException {
+        Connection c = getConnection();
+        Statement s = c.createStatement();
+        
+        s.executeUpdate("create table t(i int, constraint c primary key(i))");
+        PreparedStatement ps = c.prepareStatement("insert into t values 3");
+        ps.execute();
+
+        s.executeUpdate("alter table t alter constraint c not enforced ");
+        
+        ContextManager contextManager = 
+                ((EmbedConnection)c).getContextManager();
+        LanguageConnectionContext lcc = 
+                (LanguageConnectionContext)contextManager.getContext(
+                "LanguageConnectionContext");
+        GenericPreparedStatement derbyPs = 
+                (GenericPreparedStatement)lcc.getLastActivation().
+                getPreparedStatement();
+
+        assertFalse(derbyPs.isValid());
+        
+        rollback();
+    }
+        
+    private final static String[] tableConstraintTypes = {
@@ -221 +253 @@
-    private static String[] columnConstraintTypes = {
+    private final static String[] columnConstraintTypes = {

