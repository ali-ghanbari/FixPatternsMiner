diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java b/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
index 8e53094..e6f4f2c 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
+++ b/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
@@ -34,6 +34,3 @@
-* <p>
- * You can verify this subprogram by invoking it directly as:
- * </p>
- * <p>
- * {@code java org.apache.derbyTesting.functionTests.tests.store.BootLockMinion <dbname>}
- * </p>
+ * <p/>
+ * Started as:
+ * {@code java org.apache.derbyTesting.functionTests.tests.store.BootLockMinion <dbname> <port>}
diff --git a/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java b/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
index 93cde84..5a97d9e 100644
--- a/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
+++ b/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
@@ -31,0 +32 @@
+import java.util.Properties;
@@ -41 +42 @@
-import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
+import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
@@ -104,0 +106,6 @@
+        if (JDBC.vmSupportsJSR169()) {
+            Properties props = new Properties();
+            props.setProperty("derby.database.forceDatabaseLock", "true");
+            test = new SystemPropertyTestSetup(test, props, true);
+        }
+
@@ -110,44 +116,0 @@
-    }
-
-    String oldPropValue = null;
-
-    protected void setUp() throws Exception {
-
-        super.setUp();
-
-        // For phoneMe, we won't see DATA_MULTIPLE_JBMS_ON_DB, but instead we
-        // can check that we get DATA_MULTIPLE_JBMS_FORCE_LOCK if we set
-        // derby.database.forceDatabaseLock.
-
-        if (JDBC.vmSupportsJSR169()) {
-            // Can't use the DatabasePropertyTestSetup.singleProperty, since
-            // that method sets a database property (not a system property),
-            // and the minion is the one creating the database here. An
-            // alternative would be to let minion set it.
-
-            oldPropValue =
-                System.getProperty("derby.database.forceDatabaseLock");
-            System.setProperty("derby.database.forceDatabaseLock", "true");
-        }
-    }
-
-
-    protected void tearDown() throws Exception {
-
-        if (JDBC.vmSupportsJSR169()) {
-
-            if (oldPropValue != null) {
-                System.setProperty("derby.database.forceDatabaseLock",
-                                   oldPropValue);
-            } else {
-                // FIXME: Java 1.5 only: improve code when we move to that
-                // source level.
-                // System.clearProperty("derby.database.forceDatabaseLock");
-                System.setProperty("derby.database.forceDatabaseLock",
-                                   "false");
-            }
-
-
-        }
-
-        super.tearDown();

