diff --git a/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java b/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
index 6b3c703..3b45803 100644
--- a/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
+++ b/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
@@ -80 +79,0 @@
-    private Integer pisvejc = null;
diff --git a/intermine/webapp/main/resources/webapp/js/widget.js b/intermine/webapp/main/resources/webapp/js/widget.js
index c0802ec..5cd7adb 100644
--- a/intermine/webapp/main/resources/webapp/js/widget.js
+++ b/intermine/webapp/main/resources/webapp/js/widget.js
@@ -137,0 +138,14 @@
+var merge;
+
+merge = function(child, parent) {
+  var key;
+  for (key in parent) {
+    if (!(child[key] != null)) {
+      if (Object.prototype.hasOwnProperty.call(parent, key)) {
+        child[key] = parent[key];
+      }
+    }
+  }
+  return child;
+};
+
@@ -200,14 +213,0 @@
-
-var merge;
-
-merge = function(child, parent) {
-  var key;
-  for (key in parent) {
-    if (!(child[key] != null)) {
-      if (Object.prototype.hasOwnProperty.call(parent, key)) {
-        child[key] = parent[key];
-      }
-    }
-  }
-  return child;
-};
@@ -707,98 +706,0 @@
-  var EnrichmentWidget,
-    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
-    __hasProp = Object.prototype.hasOwnProperty,
-    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };
-  
-  EnrichmentWidget = (function(_super) {
-  
-    __extends(EnrichmentWidget, _super);
-  
-    EnrichmentWidget.prototype.widgetOptions = {
-      "title": true,
-      "description": true,
-      matchCb: function(id, type) {
-        return typeof console !== "undefined" && console !== null ? console.log(id, type) : void 0;
-      },
-      viewCb: function(ids, pq) {
-        return typeof console !== "undefined" && console !== null ? console.log(ids, pq) : void 0;
-      }
-    };
-  
-    EnrichmentWidget.prototype.formOptions = {
-      errorCorrection: "Holm-Bonferroni",
-      pValue: 0.05
-    };
-  
-    EnrichmentWidget.prototype.errorCorrections = ["Holm-Bonferroni", "Benjamini Hochberg", "Bonferroni", "None"];
-  
-    EnrichmentWidget.prototype.pValues = [0.05, 0.10, 1.00];
-  
-    EnrichmentWidget.prototype.spec = {
-      response: {
-        "title": type.isString,
-        "description": type.isString,
-        "error": type.isNull,
-        "list": type.isString,
-        "notAnalysed": type.isInteger,
-        "requestedAt": type.isString,
-        "results": type.isArray,
-        "label": type.isString,
-        "statusCode": type.isHTTPSuccess,
-        "title": type.isString,
-        "type": type.isString,
-        "wasSuccessful": type.isBoolean
-      }
-    };
-  
-    function EnrichmentWidget(service, token, id, bagName, el, widgetOptions) {
-      this.service = service;
-      this.token = token;
-      this.id = id;
-      this.bagName = bagName;
-      this.el = el;
-      this.render = __bind(this.render, this);
-      this.widgetOptions = merge(widgetOptions, this.widgetOptions);
-      EnrichmentWidget.__super__.constructor.call(this);
-      this.render();
-    }
-  
-    EnrichmentWidget.prototype.render = function() {
-      var _this = this;
-      return $.ajax({
-        url: "" + this.service + "list/enrichment",
-        dataType: "json",
-        data: {
-          widget: this.id,
-          list: this.bagName,
-          correction: this.formOptions.errorCorrection,
-          maxp: this.formOptions.pValue,
-          token: this.token
-        },
-        success: function(response) {
-          _this.validateType(response, _this.spec.response);
-          if (response.wasSuccessful) {
-            return new EnrichmentView({
-              "widget": _this,
-              "el": _this.el,
-              "template": _this.template,
-              "response": response,
-              "form": {
-                "options": _this.formOptions,
-                "pValues": _this.pValues,
-                "errorCorrections": _this.errorCorrections
-              },
-              "options": _this.widgetOptions
-            });
-          }
-        },
-        error: function(err) {
-          return _this.error("AJAXTransport", err);
-        }
-      });
-    };
-  
-    return EnrichmentWidget;
-  
-  })(InterMineWidget);
-  
-
@@ -962,0 +865,98 @@
+  var EnrichmentWidget,
+    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
+    __hasProp = Object.prototype.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };
+  
+  EnrichmentWidget = (function(_super) {
+  
+    __extends(EnrichmentWidget, _super);
+  
+    EnrichmentWidget.prototype.widgetOptions = {
+      "title": true,
+      "description": true,
+      matchCb: function(id, type) {
+        return typeof console !== "undefined" && console !== null ? console.log(id, type) : void 0;
+      },
+      viewCb: function(ids, pq) {
+        return typeof console !== "undefined" && console !== null ? console.log(ids, pq) : void 0;
+      }
+    };
+  
+    EnrichmentWidget.prototype.formOptions = {
+      errorCorrection: "Holm-Bonferroni",
+      pValue: 0.05
+    };
+  
+    EnrichmentWidget.prototype.errorCorrections = ["Holm-Bonferroni", "Benjamini Hochberg", "Bonferroni", "None"];
+  
+    EnrichmentWidget.prototype.pValues = [0.05, 0.10, 1.00];
+  
+    EnrichmentWidget.prototype.spec = {
+      response: {
+        "title": type.isString,
+        "description": type.isString,
+        "error": type.isNull,
+        "list": type.isString,
+        "notAnalysed": type.isInteger,
+        "requestedAt": type.isString,
+        "results": type.isArray,
+        "label": type.isString,
+        "statusCode": type.isHTTPSuccess,
+        "title": type.isString,
+        "type": type.isString,
+        "wasSuccessful": type.isBoolean
+      }
+    };
+  
+    function EnrichmentWidget(service, token, id, bagName, el, widgetOptions) {
+      this.service = service;
+      this.token = token;
+      this.id = id;
+      this.bagName = bagName;
+      this.el = el;
+      this.render = __bind(this.render, this);
+      this.widgetOptions = merge(widgetOptions, this.widgetOptions);
+      EnrichmentWidget.__super__.constructor.call(this);
+      this.render();
+    }
+  
+    EnrichmentWidget.prototype.render = function() {
+      var _this = this;
+      return $.ajax({
+        url: "" + this.service + "list/enrichment",
+        dataType: "json",
+        data: {
+          widget: this.id,
+          list: this.bagName,
+          correction: this.formOptions.errorCorrection,
+          maxp: this.formOptions.pValue,
+          token: this.token
+        },
+        success: function(response) {
+          _this.validateType(response, _this.spec.response);
+          if (response.wasSuccessful) {
+            return new EnrichmentView({
+              "widget": _this,
+              "el": _this.el,
+              "template": _this.template,
+              "response": response,
+              "form": {
+                "options": _this.formOptions,
+                "pValues": _this.pValues,
+                "errorCorrections": _this.errorCorrections
+              },
+              "options": _this.widgetOptions
+            });
+          }
+        },
+        error: function(err) {
+          return _this.error("AJAXTransport", err);
+        }
+      });
+    };
+  
+    return EnrichmentWidget;
+  
+  })(InterMineWidget);
+  
+
@@ -971 +970,0 @@
-    "EnrichmentWidget": EnrichmentWidget,
@@ -972,0 +972 @@
+    "EnrichmentWidget": EnrichmentWidget,
diff --git a/intermine/webapp/main/resources/webapp/report.jsp b/intermine/webapp/main/resources/webapp/report.jsp
index 04279aa..3321e46 100644
--- a/intermine/webapp/main/resources/webapp/report.jsp
+++ b/intermine/webapp/main/resources/webapp/report.jsp
@@ -58 +58 @@
-          <c:if test="${status.count > 0}"> </c:if><strong>${title.value}</strong>
+          <c:if test="${status.count > 0}"> </c:if><strong>${title.value.formatted}</strong>
@@ -61 +61 @@
-          <c:if test="${status.count > 0}"> </c:if>${title.value}
+          <c:if test="${status.count > 0}"> </c:if>${title.value.formatted}

