diff --git a/intermine/integrate/main/src/org/intermine/task/CreateIndexesTask.java b/intermine/integrate/main/src/org/intermine/task/CreateIndexesTask.java
index d4fc74e..e186861 100644
--- a/intermine/integrate/main/src/org/intermine/task/CreateIndexesTask.java
+++ b/intermine/integrate/main/src/org/intermine/task/CreateIndexesTask.java
@@ -478 +478 @@
-                String tableName = DatabaseUtil.getIndirectionTableName(col);
+                String tableName = DatabaseUtil.getIndirectionTableName(col).toLowerCase();
diff --git a/intermine/integrate/test/src/org/intermine/task/CreateIndexesTaskTest.java b/intermine/integrate/test/src/org/intermine/task/CreateIndexesTaskTest.java
index 4974366..e1994d8 100644
--- a/intermine/integrate/test/src/org/intermine/task/CreateIndexesTaskTest.java
+++ b/intermine/integrate/test/src/org/intermine/task/CreateIndexesTaskTest.java
@@ -13 +12,0 @@
-import java.util.ArrayList;
@@ -15 +13,0 @@
-import java.util.Iterator;
@@ -17 +14,0 @@
-import java.util.List;
@@ -21,2 +17,0 @@
-import org.intermine.metadata.Model;
-
@@ -23,0 +19,2 @@
+
+import org.intermine.metadata.Model;
@@ -35,5 +32,5 @@
-        List expected = new ArrayList();
-        expected.add("create index Department__key1 on Department(name, companyId, id)");
-        expected.add("create index Department__key2 on Department(name, managerId, id)");
-        expected.add("create index Department__company on Department(companyId, id)");
-        expected.add("create index Department__manager on Department(managerId, id)");
+        Set<String> expected = new HashSet<String>();
+        expected.add("create index department__key1 on department(name, companyId, id)");
+        expected.add("create index department__key2 on department(name, managerId, id)");
+        expected.add("create index department__company on department(companyId, id)");
+        expected.add("create index department__manager on department(managerId, id)");
@@ -44 +41 @@
-        Map statements = new LinkedHashMap();
+        Map<String, IndexStatement> statements = new LinkedHashMap<String, IndexStatement>();
@@ -52,3 +49,3 @@
-        List expected = new ArrayList();
-        expected.add("create index HasSecretarysSecretarys__HasSecretarys on HasSecretarysSecretarys(HasSecretarys, Secretarys)");
-        expected.add("create index HasSecretarysSecretarys__Secretarys on HasSecretarysSecretarys(Secretarys, HasSecretarys)");
+        Set<String> expected = new HashSet<String>();
+        expected.add("create index hassecretaryssecretarys__hassecretarys on hassecretaryssecretarys(HasSecretarys, Secretarys)");
+        expected.add("create index hassecretaryssecretarys__secretarys on hassecretaryssecretarys(Secretarys, HasSecretarys)");
@@ -60 +57 @@
-        Map statements = new LinkedHashMap();
+        Map<String, IndexStatement> statements = new LinkedHashMap<String, IndexStatement>();
@@ -65,2 +62,2 @@
-        expected = new ArrayList();
-        expected.add("create index Secretary__key on Secretary(name, id)");
+        expected = new HashSet<String>();
+        expected.add("create index secretary__key on secretary(name, id)");
@@ -70 +67 @@
-        statements = new LinkedHashMap();
+        statements = new LinkedHashMap<String, IndexStatement>();
@@ -78,5 +75,5 @@
-        Set expected = new HashSet();
-        expected.add("create index Contractor__ImportantPerson__key on Contractor(seniority, id)");
-        expected.add("create index CEO__ImportantPerson__key on CEO(seniority, id)");
-        expected.add("create index ImportantPerson__key on ImportantPerson(seniority, id)");
-        expected.add("create index Manager__ImportantPerson__key on Manager(seniority, id)");
+        Set<String> expected = new HashSet<String>();
+        expected.add("create index contractor__importantperson__key on contractor(seniority, id)");
+        expected.add("create index ceo__importantperson__key on ceo(seniority, id)");
+        expected.add("create index importantperson__key on importantperson(seniority, id)");
+        expected.add("create index manager__importantperson__key on manager(seniority, id)");
@@ -87 +84 @@
-        Map statements = new LinkedHashMap();
+        Map<String, IndexStatement> statements = new LinkedHashMap<String, IndexStatement>();
@@ -90 +87 @@
-        assertEquals(expected, new HashSet(getIndexStatementStrings(statements)));
+        assertEquals(expected, new HashSet<String>(getIndexStatementStrings(statements)));
@@ -97,11 +94,11 @@
-        List expected = new ArrayList();
-        expected.add("create index CEO__salary on CEO(salary)");
-        expected.add("create index CEO__title_like on CEO(lower(title) text_pattern_ops)");
-        expected.add("create index CEO__title_equals on CEO(lower(title))");
-        expected.add("create index CEO__fullTime on CEO(fullTime)");
-        expected.add("create index CEO__age on CEO(age)");
-        expected.add("create index CEO__end_like on CEO(lower(intermine_end) text_pattern_ops)");
-        expected.add("create index CEO__end_equals on CEO(lower(intermine_end))");
-        expected.add("create index CEO__name_like on CEO(lower(name) text_pattern_ops)");
-        expected.add("create index CEO__name_equals on CEO(lower(name))");
-        expected.add("create index CEO__seniority on CEO(seniority)");
+        Set<String> expected = new HashSet<String>();
+        expected.add("create index ceo__salary on ceo(salary)");
+        expected.add("create index ceo__title_like on ceo(lower(title) text_pattern_ops)");
+        expected.add("create index ceo__title_equals on ceo(lower(title))");
+        expected.add("create index ceo__fulltime on ceo(fullTime)");
+        expected.add("create index ceo__age on ceo(age)");
+        expected.add("create index ceo__end_like on ceo(lower(intermine_end) text_pattern_ops)");
+        expected.add("create index ceo__end_equals on ceo(lower(intermine_end))");
+        expected.add("create index ceo__name_like on ceo(lower(name) text_pattern_ops)");
+        expected.add("create index ceo__name_equals on ceo(lower(name))");
+        expected.add("create index ceo__seniority on ceo(seniority)");
@@ -112 +109 @@
-        Map statements = new LinkedHashMap();
+        Map<String, IndexStatement> statements = new LinkedHashMap<String, IndexStatement>();
@@ -115 +112 @@
-        assertEquals(expected, getIndexStatementStrings(statements));
+        assertEquals(expected.toString(), getIndexStatementStrings(statements).toString());
@@ -118,8 +115,3 @@
-    private List getIndexStatementStrings(Map statements) {
-        List returnList = new ArrayList();
-
-        Iterator statementsIter = statements.keySet().iterator();
-
-        while (statementsIter.hasNext()) {
-            String indexName = (String) statementsIter.next();
-
+    private Set<String> getIndexStatementStrings(Map<String, IndexStatement> statements) {
+        Set<String> retval = new HashSet<String>();
+        for (String indexName: statements.keySet()) {
@@ -127,2 +119 @@
-
-            returnList.add(indexStatement.getStatementString(indexName));
+            retval.add(indexStatement.getStatementString(indexName));
@@ -130,2 +121 @@
-
-        return returnList;
+        return retval;

