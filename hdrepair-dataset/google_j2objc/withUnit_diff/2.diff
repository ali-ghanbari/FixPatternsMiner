diff --git a/jre_emul/JreEmulation.xcodeproj/project.pbxproj b/jre_emul/JreEmulation.xcodeproj/project.pbxproj
index b60c6fe..5509aa5 100644
--- a/jre_emul/JreEmulation.xcodeproj/project.pbxproj
+++ b/jre_emul/JreEmulation.xcodeproj/project.pbxproj
@@ -559,0 +560,5 @@
+		06FADA7E1B3B29B300A9579E /* PosixTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 06FADA7B1B3B29B300A9579E /* PosixTest.m */; };
+		06FADA7F1B3B29B300A9579E /* NoPackageTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 06FADA7D1B3B29B300A9579E /* NoPackageTest.m */; };
+		06FADA821B3B2E1300A9579E /* ArrayTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 06FADA811B3B2E1300A9579E /* ArrayTest.m */; };
+		06FADA871B3B2E4400A9579E /* LambdaTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 06FADA841B3B2E4400A9579E /* LambdaTest.m */; };
+		06FADA881B3B2E4400A9579E /* SmallTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 06FADA861B3B2E4400A9579E /* SmallTests.m */; };
@@ -3919,0 +3925,10 @@
+		06FADA7A1B3B29B300A9579E /* PosixTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = PosixTest.h; path = libcore/io/PosixTest.h; sourceTree = "<group>"; };
+		06FADA7B1B3B29B300A9579E /* PosixTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = PosixTest.m; path = libcore/io/PosixTest.m; sourceTree = "<group>"; };
+		06FADA7C1B3B29B300A9579E /* NoPackageTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NoPackageTest.h; sourceTree = "<group>"; };
+		06FADA7D1B3B29B300A9579E /* NoPackageTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NoPackageTest.m; sourceTree = "<group>"; };
+		06FADA801B3B2E1300A9579E /* ArrayTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ArrayTest.h; path = com/google/j2objc/ArrayTest.h; sourceTree = "<group>"; };
+		06FADA811B3B2E1300A9579E /* ArrayTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = ArrayTest.m; path = com/google/j2objc/ArrayTest.m; sourceTree = "<group>"; };
+		06FADA831B3B2E4400A9579E /* LambdaTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = LambdaTest.h; path = com/google/j2objc/java8/LambdaTest.h; sourceTree = "<group>"; };
+		06FADA841B3B2E4400A9579E /* LambdaTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = LambdaTest.m; path = com/google/j2objc/java8/LambdaTest.m; sourceTree = "<group>"; };
+		06FADA851B3B2E4400A9579E /* SmallTests.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = SmallTests.h; path = com/google/j2objc/java8/SmallTests.h; sourceTree = "<group>"; };
+		06FADA861B3B2E4400A9579E /* SmallTests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = SmallTests.m; path = com/google/j2objc/java8/SmallTests.m; sourceTree = "<group>"; };
@@ -6348,2 +6362,0 @@
-				069AA6B51B053B730068A39B /* ChannelsTest.h */,
-				069AA6B61B053B730068A39B /* ChannelsTest.m */,
@@ -6366,0 +6380,2 @@
+				06FADA801B3B2E1300A9579E /* ArrayTest.h */,
+				06FADA811B3B2E1300A9579E /* ArrayTest.m */,
@@ -6394,0 +6410,2 @@
+				069AA6B51B053B730068A39B /* ChannelsTest.h */,
+				069AA6B61B053B730068A39B /* ChannelsTest.m */,
@@ -6452,0 +6470,2 @@
+				06FADA831B3B2E4400A9579E /* LambdaTest.h */,
+				06FADA841B3B2E4400A9579E /* LambdaTest.m */,
@@ -6481,0 +6501,2 @@
+				06FADA7C1B3B29B300A9579E /* NoPackageTest.h */,
+				06FADA7D1B3B29B300A9579E /* NoPackageTest.m */,
@@ -6489,0 +6511,2 @@
+				06FADA7A1B3B29B300A9579E /* PosixTest.h */,
+				06FADA7B1B3B29B300A9579E /* PosixTest.m */,
@@ -6527,0 +6551,2 @@
+				06FADA851B3B2E4400A9579E /* SmallTests.h */,
+				06FADA861B3B2E4400A9579E /* SmallTests.m */,
@@ -8105,0 +8131 @@
+				06FADA871B3B2E4400A9579E /* LambdaTest.m in Sources */,
@@ -8238,0 +8265 @@
+				06FADA7F1B3B29B300A9579E /* NoPackageTest.m in Sources */,
@@ -8302,0 +8330 @@
+				06FADA881B3B2E4400A9579E /* SmallTests.m in Sources */,
@@ -8447,0 +8476 @@
+				06FADA821B3B2E1300A9579E /* ArrayTest.m in Sources */,
@@ -8504,0 +8534 @@
+				06FADA7E1B3B29B300A9579E /* PosixTest.m in Sources */,
diff --git a/jre_emul/Tests/libcore/io/PosixTest.java b/jre_emul/Tests/libcore/io/PosixTest.java
new file mode 100644
index 0000000..a56e2d0
--- /dev/null
+++ b/jre_emul/Tests/libcore/io/PosixTest.java
@@ -0,0 +1,53 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package libcore.io;
+
+import junit.framework.TestCase;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.RandomAccessFile;
+import java.nio.ByteBuffer;
+import java.nio.channels.FileChannel;
+
+/**
+ * Unit tests for {@link libcore.io.Posix}.
+ */
+public class PosixTest extends TestCase {
+
+  // Verify Issue 554 fix, where Posix.preadBytes used incorrect system call.
+  public void testPreadBytes() throws Exception{
+    final String testString = "hello, world!";
+    byte[] bytesToWrite = testString.getBytes("UTF-8");
+    ByteBuffer buf = ByteBuffer.allocate(bytesToWrite.length);
+
+    File tmpFile = File.createTempFile("preadbug-", ".tmp");
+    tmpFile.deleteOnExit();
+
+    try (
+        FileOutputStream fos = new FileOutputStream(tmpFile)) {
+      fos.write(bytesToWrite);
+    }
+
+    try (
+        RandomAccessFile raf = new RandomAccessFile(tmpFile, "r");
+        FileChannel channel = raf.getChannel()) {
+      channel.read(buf, 0);
+    }
+
+    String dstString = new String(buf.array(), "UTF-8");
+    assertEquals(testString, dstString);
+  }
+}
diff --git a/jre_emul/android/libcore/luni/src/main/java/libcore/io/Posix.java b/jre_emul/android/libcore/luni/src/main/java/libcore/io/Posix.java
index 681abbf..e074e34 100644
--- a/jre_emul/android/libcore/luni/src/main/java/libcore/io/Posix.java
+++ b/jre_emul/android/libcore/luni/src/main/java/libcore/io/Posix.java
@@ -923 +923 @@
-      TEMP_FAILURE_RETRY(pwrite64([fd getInt$], bytes + bufferOffset, byteCount, offset));
+      TEMP_FAILURE_RETRY(pread64([fd getInt$], bytes + bufferOffset, byteCount, offset));
diff --git a/jre_emul/tests.mk b/jre_emul/tests.mk
index 6a3bb32..abbf827 100644
--- a/jre_emul/tests.mk
+++ b/jre_emul/tests.mk
@@ -163,0 +164 @@
+    libcore/io/PosixTest.java \

