diff --git a/TODO.txt b/TODO.txt
index aa0d834..2bca345 100644
--- a/TODO.txt
+++ b/TODO.txt
@@ -5,0 +6,2 @@
+* test the various closure methods - map, each, collect etc
+
diff --git a/src/main/org/codehaus/groovy/classgen/ClassGenerator.java b/src/main/org/codehaus/groovy/classgen/ClassGenerator.java
index 5fa97c3..a27ce9e 100644
--- a/src/main/org/codehaus/groovy/classgen/ClassGenerator.java
+++ b/src/main/org/codehaus/groovy/classgen/ClassGenerator.java
@@ -637 +636,0 @@
-        cv.visitVarInsn(ALOAD, 0);
diff --git a/src/test/groovy/ClosureAsParamTest.groovy b/src/test/groovy/ClosureAsParamTest.groovy
new file mode 100644
index 0000000..eb7c945
--- /dev/null
+++ b/src/test/groovy/ClosureAsParamTest.groovy
@@ -0,0 +1,21 @@
+package groovy;
+
+import org.codehaus.groovy.GroovyTestCase;
+
+/** 
+ * Tests Closures in Groovy
+ * 
+ * @author <a href="mailto:james@coredevelopers.net">James Strachan</a>
+ * @version $Revision$
+ */
+class ClosureAsParamTest extends GroovyTestCase {
+
+    void testSimpleBlockCall() {
+        assertClosure({owner| System.out.println(owner) });
+    }
+  
+	assertClosure(Closure block) {
+	    assert block != null
+	    block.call("hello!");
+	}
+}
diff --git a/src/test/groovy/ClosureTest.groovy b/src/test/groovy/ClosureTest.groovy
index 603f140..681e6c8 100644
--- a/src/test/groovy/ClosureTest.groovy
+++ b/src/test/groovy/ClosureTest.groovy
@@ -13,3 +13 @@
-	property callCount;
-
-    void testNothing() { } 
+	property count;
@@ -18 +16 @@
-        callCount = 0;
+        count = 0;
@@ -20 +18 @@
-        block = {owner|owner.incrementCallCount(); }
+        block = {owner| owner.incrementCallCount() }
@@ -23,4 +21,4 @@
-        
-        block.call(this);
-        
-        assert callCount := 1;
+        assert count := 1
+
+        assertClosure({owner| owner.incrementCallCount() })
+        assert count := 2
@@ -29 +27,5 @@
-/** @todo parser        
+    void testBlockAsParameter() {
+        count = 0
+        
+        callBlock(5, { owner | owner.incrementCallCount() })
+        assert count := 5
@@ -31,6 +33,2 @@
-    testBlockAsParameter() {
-        callCount = 0;
-        
-        callBlock(5, { | owner | owner.incrementCallCount(); });
-        
-        assert callCount == 5;
+        callBlock2(5, { owner | owner.incrementCallCount() })
+        assert count := 10
@@ -38,3 +36 @@
-*/
-
-
+  
@@ -42,2 +38,2 @@
-	    System.out.println("invoked increment method!");
-	    callCount = callCount + 1;
+	    //System.out.println("invoked increment method!")
+	    count = count + 1
@@ -47,0 +44 @@
+        block.call(this)
@@ -50,3 +47,6 @@
-	protected callBlock(count, block) {
-	    for i in range(0, count) {
-			block.call(this);	        
+	/** @todo
+	  protected 
+	  */
+	callBlock(Integer num, Closure block) {
+	    for i in 0..num {
+			block.call(this)
@@ -54,0 +55,6 @@
+
+    callBlock2(num, block) {
+        for i in 0..num {
+            block.call(this)
+        }
+    }
diff --git a/src/test/groovy/ListTest.groovy b/src/test/groovy/ListTest.groovy
index f680b5c..4776009 100644
--- a/src/test/groovy/ListTest.groovy
+++ b/src/test/groovy/ListTest.groovy
@@ -76,3 +76 @@
-        /* @todo
-        l.each( {i| System.out.println(i) } );
-        */
+        l.each( {i| System.out.println(i) } )

