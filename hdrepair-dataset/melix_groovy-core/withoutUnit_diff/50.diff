diff --git a/subprojects/groovy-swing/src/main/groovy/groovy/swing/factory/BindFactory.groovy b/subprojects/groovy-swing/src/main/groovy/groovy/swing/factory/BindFactory.groovy
index 17c19d3..92f6633 100644
--- a/subprojects/groovy-swing/src/main/groovy/groovy/swing/factory/BindFactory.groovy
+++ b/subprojects/groovy-swing/src/main/groovy/groovy/swing/factory/BindFactory.groovy
@@ -354 +354,6 @@
-        bindAttrs.each {k, v -> fb."$k" = v}
+        List propertiesToBeSkipped = ['group']
+        bindAttrs.each {k, v -> if (!(k in propertiesToBeSkipped)) fb."$k" = v}
+
+        if ((bindAttrs.group instanceof AggregateBinding) && (fb instanceof BindingUpdatable)) {
+            bindAttrs.group.addBinding(fb)
+        }
diff --git a/subprojects/groovy-swing/src/main/java/org/codehaus/groovy/binding/AggregateBinding.java b/subprojects/groovy-swing/src/main/java/org/codehaus/groovy/binding/AggregateBinding.java
index 7f10429..2a8a19c 100644
--- a/subprojects/groovy-swing/src/main/java/org/codehaus/groovy/binding/AggregateBinding.java
+++ b/subprojects/groovy-swing/src/main/java/org/codehaus/groovy/binding/AggregateBinding.java
@@ -33,0 +34 @@
+        if (binding == null || bindings.contains(binding)) return;
diff --git a/subprojects/groovy-swing/src/test/groovy/groovy/swing/SwingBuilderBindingsTest.groovy b/subprojects/groovy-swing/src/test/groovy/groovy/swing/SwingBuilderBindingsTest.groovy
index b2cfc87..42be002 100644
--- a/subprojects/groovy-swing/src/test/groovy/groovy/swing/SwingBuilderBindingsTest.groovy
+++ b/subprojects/groovy-swing/src/test/groovy/groovy/swing/SwingBuilderBindingsTest.groovy
@@ -1174,0 +1175,64 @@
+
+    public void testGroovy4627_source_binding() {
+        testInEDT {
+            SwingBuilder swing = new SwingBuilder()
+
+            BindableBean model = new BindableBean(text: '0')
+
+            swing.actions {
+                bindGroup(id: 'formElements')
+                textField(id: 'txt1', text: bind(source: model, sourceProperty: 'text', group: formElements))
+                textField(id: 'txt2', text: bind(source: model, sourceProperty: 'text', group: formElements))
+            }
+
+            assert model.text == '0'
+            assert swing.txt1.text == '0'
+            assert swing.txt2.text == '0'
+
+            swing.formElements.unbind()
+            model.text = '1'
+            assert swing.txt1.text == '0'
+            assert swing.txt2.text == '0'
+
+            swing.formElements.rebind()
+            swing.formElements.update()
+            assert swing.txt1.text == '1'
+            assert swing.txt2.text == '1'
+
+            model.text = '2'
+            assert swing.txt1.text == '1'
+            assert swing.txt2.text == '1'
+            swing.formElements.update()
+            assert swing.txt1.text == '2'
+            assert swing.txt2.text == '2'
+        }
+    }
+
+    public void testGroovy4627_target_binding() {
+        testInEDT {
+            SwingBuilder swing = new SwingBuilder()
+
+            BindableBean model = new BindableBean()
+
+            swing.actions {
+                bindGroup(id: 'formElements')
+                textField(id: 'txt1', text: bind(target: model, targetProperty: 'text', group: formElements, value: '0'))
+            }
+
+            assert model.text == '0'
+            assert swing.txt1.text == '0'
+
+            swing.formElements.unbind()
+            swing.txt1.text = '1'
+            assert model.text == '0'
+
+            swing.formElements.rebind()
+            swing.formElements.update()
+            assert model.text == '1'
+
+            swing.txt1.text = '2'
+            assert model.text == '1'
+            swing.formElements.update()
+            assert model.text == '2'
+        }
+    }

