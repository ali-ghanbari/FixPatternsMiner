diff --git a/wikAPIdia-cookbook/src/main/java/org/wikapidia/core/cookbook/MostSimilarInDegreesTest.java b/wikAPIdia-cookbook/src/main/java/org/wikapidia/core/cookbook/MostSimilarInDegreesTest.java
index f518295..75fae1b 100644
--- a/wikAPIdia-cookbook/src/main/java/org/wikapidia/core/cookbook/MostSimilarInDegreesTest.java
+++ b/wikAPIdia-cookbook/src/main/java/org/wikapidia/core/cookbook/MostSimilarInDegreesTest.java
@@ -18 +18 @@
-        System.out.println(System.lineSeparator() + "The article most related to \"" + testTitle + "\" in " + degrees + " degrees is: " + sim.getMostSimilar(testTitle, degrees));
+        System.out.println("\nThe article most related to \"" + testTitle + "\" in " + degrees + " degrees is: " + sim.getMostSimilar(testTitle, degrees));
diff --git a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/BipartiteEvaluatorTest.java b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/BipartiteEvaluatorTest.java
index 83b5fdd..0acaffb 100644
--- a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/BipartiteEvaluatorTest.java
+++ b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/BipartiteEvaluatorTest.java
@@ -42,0 +43 @@
+        LanguageSet languageSet = new LanguageSet("simple");
@@ -45 +46 @@
-        ToblersLawEvaluator evaluator = new ToblersLawEvaluator(env, new LanguageSet("simple"));
+        ToblersLawEvaluator evaluator = new ToblersLawEvaluator(env, languageSet);
@@ -62 +63 @@
-        Integer containerId1 = wdDao.getItemId(lpDao.getByTitle(new Title("Germany", Language.getByLangCode("simple")), NameSpace.ARTICLE));
+        Integer containerId1 = wdDao.getItemId(lpDao.getByTitle(new Title("China", Language.getByLangCode("simple")), NameSpace.ARTICLE));
@@ -65 +66 @@
-        Integer containerId2 = wdDao.getItemId(lpDao.getByTitle(new Title("New York", Language.getByLangCode("simple")), NameSpace.ARTICLE));
+        Integer containerId2 = wdDao.getItemId(lpDao.getByTitle(new Title("California", Language.getByLangCode("simple")), NameSpace.ARTICLE));
@@ -89,11 +89,0 @@
-        Set<Integer> sampledContainedId1 = PickSample(containedId1, 500);
-        Set<Integer> sampledContainedId2 = PickSample(containedId2, 500);
-
-        for(Integer i : sampledContainedId1){
-            if(counter % 100 == 0)
-                LOG.info(String.format("%d geometries added out of %d", counter, sampledContainedId1.size()));
-            geometriesToParse.put(i, sdDao.getGeometry(i, "wikidata", "earth"));
-            concepts1.add(upDao.getById(i, 1));
-            counter ++;
-        }
-
@@ -107,0 +98,16 @@
+        Set<Integer> sampledContainedId1 = PickSample(containedId1, 500);
+        Set<Integer> sampledContainedId2 = PickSample(containedId2, 500);
+
+        for(Integer i : sampledContainedId1){
+            if(counter % 100 == 0)
+                LOG.info(String.format("%d geometries added out of %d", counter, sampledContainedId1.size()));
+            UniversalPage concept = upDao.getById(i, 1);
+            if(concept != null && concept.hasAllLanguages(languageSet)){
+                concepts1.add(upDao.getById(i, 1));
+                geometriesToParse.put(i, sdDao.getGeometry(i, "wikidata", "earth"));
+            }
+            counter ++;
+        }
+
+
+
@@ -114,2 +120,6 @@
-            geometriesToParse.put(i, sdDao.getGeometry(i, "wikidata", "earth"));
-            concepts2.add(upDao.getById(i, 1));
+
+            UniversalPage concept = upDao.getById(i, 1);
+            if(concept != null && concept.hasAllLanguages(languageSet)){
+                concepts2.add(upDao.getById(i, 1));
+                geometriesToParse.put(i, sdDao.getGeometry(i, "wikidata", "earth"));
+            }
diff --git a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluator.java b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluator.java
index 896fbab..6b782d3 100644
--- a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluator.java
+++ b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluator.java
@@ -245 +245 @@
-                    LOG.warning(String.format("Error evaluating between %s and %s", c1, c2));
+                    LOG.warning(String.format("Error evaluating between %s and %s", c1.getBestEnglishTitle(lpDao, true), c2.getBestEnglishTitle(lpDao, true)));
diff --git a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluatorTest.java b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluatorTest.java
index 190f52f..4cf7270 100644
--- a/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluatorTest.java
+++ b/wikAPIdia-spatial/src/main/java/org/wikapidia/spatial/cookbook/tflevaluate/ToblersLawEvaluatorTest.java
@@ -34,4 +34,4 @@
-        evaluator.retrieveLocations(geometryMap);
-
-        evaluator.evaluateAll(new File("testTFL.csv"));
-        //evaluator.evaluateSample(new File("testTFL.csv"), 100);
+        //evaluator.retrieveLocations(allGeometries);
+        evaluator.retrieveAllLocations();
+        //evaluator.evaluateAll(new File("testTFL.csv"));
+        evaluator.evaluateSample(new File("testTFL-2.csv"), 1000000);

