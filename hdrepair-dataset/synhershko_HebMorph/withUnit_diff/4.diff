diff --git a/java/hebmorph-core/src/main/java/com/code972/hebmorph/Lemmatizer.java b/java/hebmorph-core/src/main/java/com/code972/hebmorph/Lemmatizer.java
index 2f4ea14..fad1c86 100644
--- a/java/hebmorph-core/src/main/java/com/code972/hebmorph/Lemmatizer.java
+++ b/java/hebmorph-core/src/main/java/com/code972/hebmorph/Lemmatizer.java
@@ -59 +59 @@
-		if (firstQuote > -1)
+		if (firstQuote > -1 && firstQuote < word.length() - 2)
diff --git a/java/hebmorph-core/src/test/java/com/code972/hebmorph/StreamLemmatizerTest.java b/java/hebmorph-core/src/test/java/com/code972/hebmorph/StreamLemmatizerTest.java
index ccfde7c..abd27e4 100644
--- a/java/hebmorph-core/src/test/java/com/code972/hebmorph/StreamLemmatizerTest.java
+++ b/java/hebmorph-core/src/test/java/com/code972/hebmorph/StreamLemmatizerTest.java
@@ -88 +88 @@
-        StreamLemmatizer sl = new StreamLemmatizer(new StringReader(word), getDictionary() , true);
+        StreamLemmatizer sl = new StreamLemmatizer(new StringReader(word), getDictionary() , false);
@@ -110 +110 @@
-        StreamLemmatizer sl = new StreamLemmatizer(new StringReader("בדיקה$"), getDictionary() , true);
+        StreamLemmatizer sl = new StreamLemmatizer(new StringReader("בדיקה$"), getDictionary() , false);
@@ -117,0 +118,18 @@
+    @Test
+    public void testPreservesAcronyms() throws IOException {
+        Reference<String> token = new Reference<>("");
+        List<Token> results = new ArrayList<>();
+
+        StreamLemmatizer sl = new StreamLemmatizer(new StringReader("מב\"ל"), getDictionary(), false);
+        int tokenType = sl.getLemmatizeNextToken(token, results);
+        assertEquals(Tokenizer.TokenType.Acronym | Tokenizer.TokenType.Hebrew, tokenType);
+        assertEquals("מב\"ל", token.ref);
+
+        sl = new StreamLemmatizer(new StringReader("ה\"מכונית"), getDictionary(), false);
+        tokenType = sl.getLemmatizeNextToken(token, results);
+        assertEquals(Tokenizer.TokenType.Hebrew, tokenType);
+        assertEquals("מכונית", token.ref);
+    }
+
+
+

