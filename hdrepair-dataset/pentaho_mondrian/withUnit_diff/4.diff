diff --git a/src/main/mondrian/olap/fun/FunUtil.java b/src/main/mondrian/olap/fun/FunUtil.java
index ab3d972..3ea0c6d 100644
--- a/src/main/mondrian/olap/fun/FunUtil.java
+++ b/src/main/mondrian/olap/fun/FunUtil.java
@@ -285 +285 @@
-                || hierarchy.getName().equals(dimension.getName()))
+                || hierarchy.getUniqueName().equals(dimension.getUniqueName()))
diff --git a/testsrc/main/mondrian/test/MultipleHierarchyTest.java b/testsrc/main/mondrian/test/MultipleHierarchyTest.java
index a9da90c..13c75e1 100644
--- a/testsrc/main/mondrian/test/MultipleHierarchyTest.java
+++ b/testsrc/main/mondrian/test/MultipleHierarchyTest.java
@@ -11,0 +12 @@
+import junit.framework.Assert;
@@ -320,0 +322,47 @@
+
+    /**
+     * Tests <a href="http://jira.pentaho.com/browse/MONDRIAN-750">
+     * bug MONDRIAN-750, "... multiple hierarchies beneath a single dimension
+     * throws exception"</a>.
+     */
+    public void testDefaultNamedHierarchy() {
+        TestContext testContext = TestContext.createSubstitutingCube(
+            "Sales",
+            "<Dimension name=\"NuStore\" foreignKey=\"store_id\">\n"
+            + "<Hierarchy name=\"NuStore\" hasAll=\"true\" primaryKey=\"store_id\">\n"
+            + "  <Table name=\"store\"/>\n"
+            + "  <Level name=\"NuStore Country\" column=\"store_country\" uniqueMembers=\"true\"/>\n"
+            + "  <Level name=\"NuStore State\" column=\"store_state\" uniqueMembers=\"true\"/>\n"
+            + "  <Level name=\"NuStore City\" column=\"store_city\" uniqueMembers=\"false\"/>\n"
+            + "  <Level name=\"NuStore Name\" column=\"store_name\" uniqueMembers=\"true\"/>\n"
+            + "</Hierarchy>\n"
+            + "<Hierarchy caption=\"NuStore2\" name=\"NuStore2\" allMemberName=\"All NuStore2s\" hasAll=\"true\" primaryKey=\"NuStore_id\">\n"
+            + "  <Table name=\"store\"/>\n"
+            + "  <Level name=\"NuStore City\" column=\"store_city\" uniqueMembers=\"false\"/>\n"
+            + "  <Level name=\"NuStore Name\" column=\"store_name\"  uniqueMembers=\"true\"/>\n"
+            + "</Hierarchy>\n"
+            + "</Dimension>");
+
+        testContext.assertQueryReturns(
+            "with set [*NATIVE_CJ_SET] as '[*BASE_MEMBERS_NuStore]' "
+            + "set [*SORTED_ROW_AXIS] as 'Order([*CJ_ROW_AXIS], [NuStore].CurrentMember.OrderKey, BASC)' "
+            + "set [*BASE_MEMBERS_NuStore] as '[NuStore].[NuStore Country].Members' "
+            + "set [*BASE_MEMBERS_Measures] as '{[Measures].[*ZERO]}' "
+            + "set [*CJ_ROW_AXIS] as 'Generate([*NATIVE_CJ_SET], {[NuStore].CurrentMember})' "
+            + "set [*CJ_COL_AXIS] as '[*NATIVE_CJ_SET]' "
+            + "member [Measures].[*ZERO] as '0.0', SOLVE_ORDER = 0.0 "
+            + "select [*BASE_MEMBERS_Measures] ON COLUMNS, "
+            + "[*SORTED_ROW_AXIS] ON ROWS "
+            + "from [Sales]",
+            "Axis #0:\n"
+            + "{}\n"
+            + "Axis #1:\n"
+            + "{[Measures].[*ZERO]}\n"
+            + "Axis #2:\n"
+            + "{[NuStore].[Canada]}\n"
+            + "{[NuStore].[Mexico]}\n"
+            + "{[NuStore].[USA]}\n"
+            + "Row #0: 0\n"
+            + "Row #1: 0\n"
+            + "Row #2: 0\n");
+    }

