diff --git a/src/main/mondrian/olap/fun/RankFunDef.java b/src/main/mondrian/olap/fun/RankFunDef.java
index 86ca67f..85e5231 100644
--- a/src/main/mondrian/olap/fun/RankFunDef.java
+++ b/src/main/mondrian/olap/fun/RankFunDef.java
@@ -359 +359 @@
-                } else if (value == Util.nullValue) {
+                } else if (Util.isNull(value)) {
diff --git a/testsrc/main/mondrian/olap/fun/FunctionTest.java b/testsrc/main/mondrian/olap/fun/FunctionTest.java
index 0f7a92b..227b305 100644
--- a/testsrc/main/mondrian/olap/fun/FunctionTest.java
+++ b/testsrc/main/mondrian/olap/fun/FunctionTest.java
@@ -6049,0 +6050,21 @@
+     * Tests the 3-arg version of the RANK function with a value
+     * which returns null within a set of nulls.
+     */
+    public void testRankWithNulls() {
+        assertQueryReturns(
+            "with member [Measures].[X] as " +
+            "'iif([Measures].[Store Sales]=777," +
+            "[Measures].[Store Sales],Null)'\n" +
+            "member [Measures].[Y] as 'Rank([Gender].[M]," +
+            "{[Measures].[X],[Measures].[X],[Measures].[X]}," +
+            " [Marital Status].[All Marital Status].Parent)'" +
+            "select {[Measures].[Y]} on rows from Sales",
+            fold(
+                "Axis #0:\n" +
+                "{}\n" +
+                "Axis #1:\n" +
+                "{[Measures].[Y]}\n" +
+                "Row #0: 1\n"));
+    }
+    
+    /**

