diff --git a/applications/plugins/org.csstudio.opibuilder.test/src/org/csstudio/opibuilder/util/MacrosInputTest.java b/applications/plugins/org.csstudio.opibuilder.test/src/org/csstudio/opibuilder/util/MacrosInputTest.java
new file mode 100644
index 0000000..f788b6d
--- /dev/null
+++ b/applications/plugins/org.csstudio.opibuilder.test/src/org/csstudio/opibuilder/util/MacrosInputTest.java
@@ -0,0 +1,35 @@
+package org.csstudio.opibuilder.util;
+
+import static org.junit.Assert.*;
+
+import java.util.LinkedHashMap;
+
+import org.junit.Before;
+import org.junit.Test;
+
+public class MacrosInputTest {
+
+	MacrosInput macrosInput = new MacrosInput(
+			new LinkedHashMap<String, String>(), true);
+	String persistResult;
+	
+	@Before
+	public void setup(){
+		macrosInput.put("m1", "v1");
+		macrosInput.put("m2", "");
+		macrosInput.put("m3", "123");
+		persistResult="\"true\",\"m1=v1\",\"m2=\",\"m3=123\"";
+	}
+	
+	@Test
+	public void testToPersistenceString() {
+		String s=macrosInput.toPersistenceString();
+		assertEquals(persistResult, s);
+	}
+
+	@Test
+	public void testRecoverFromString() throws Exception {		
+		assertEquals(macrosInput, MacrosInput.recoverFromString(persistResult));
+	}
+
+}
diff --git a/applications/plugins/org.csstudio.opibuilder/src/org/csstudio/opibuilder/util/MacrosInput.java b/applications/plugins/org.csstudio.opibuilder/src/org/csstudio/opibuilder/util/MacrosInput.java
index dba3980..f67ba8c 100644
--- a/applications/plugins/org.csstudio.opibuilder/src/org/csstudio/opibuilder/util/MacrosInput.java
+++ b/applications/plugins/org.csstudio.opibuilder/src/org/csstudio/opibuilder/util/MacrosInput.java
@@ -145,0 +146,2 @@
+				else if(macro.length == 1) //if it is an empty value macro
+		        	macrosInput.getMacrosMap().put(macro[0], ""); //$NON-NLS-1$

