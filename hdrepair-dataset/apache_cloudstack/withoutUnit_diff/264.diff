diff --git a/core/src/com/cloud/network/resource/JuniperSrxResource.java b/core/src/com/cloud/network/resource/JuniperSrxResource.java
index 1fc5b1e..3d680c2 100644
--- a/core/src/com/cloud/network/resource/JuniperSrxResource.java
+++ b/core/src/com/cloud/network/resource/JuniperSrxResource.java
@@ -625 +625 @@
-            if (!ip.getVlanId().equals("untagged")) {
+            if (ip.getVlanId() != null && !ip.getVlanId().equals("untagged")) {
diff --git a/patches/systemvm/debian/config/etc/iptables/iptables-router b/patches/systemvm/debian/config/etc/iptables/iptables-router
index 5ac162a..e1972e3 100644
--- a/patches/systemvm/debian/config/etc/iptables/iptables-router
+++ b/patches/systemvm/debian/config/etc/iptables/iptables-router
@@ -24,0 +25,2 @@
+-A FORWARD -i eth0 -o eth0 -m state --state NEW -j ACCEPT
+-A FORWARD -i eth0 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
diff --git a/patches/systemvm/debian/config/root/firewall.sh b/patches/systemvm/debian/config/root/firewall.sh
index 7cc9ab5..4dd0e9e 100755
--- a/patches/systemvm/debian/config/root/firewall.sh
+++ b/patches/systemvm/debian/config/root/firewall.sh
@@ -50,0 +51,16 @@
+doHairpinNat () {
+  local vrGuestIPNetwork=$(sudo ip addr show dev eth0 | grep inet | grep eth0 | awk '{print $2}' )
+  local vrGuestIP=$(echo $vrGuestIPNetwork | awk -F'/' '{print $1}')
+
+  local publicIp=$1
+  local prot=$2
+  local port=$3
+  local guestVmIp=$4
+  local guestPort=$(echo $5 | sed 's/:/-/')
+  local op=$6
+  logger -t cloud "$(basename $0): create HairPin entry : public ip=$publicIp \
+  instance ip=$guestVmIp proto=$proto portRange=$guestPort op=$op"
+
+  (sudo iptables -t nat $op PREROUTING -d $publicIp -i eth0 -p $prot --dport $port -j DNAT --to-destination $guestVmIp:$guestPort &>> $OUTFILE || [ "$op" == "-D" ]) &&
+  (sudo iptables -t nat $op POSTROUTING -s $vrGuestIPNetwork -p $prot --dport $port -d $guestVmIp -j SNAT -o eth0 --to-source $vrGuestIP &>> $OUTFILE || [ "$op" == "-D" ])
+}
@@ -80,0 +97 @@
+  (doHairpinNat $publicIp $proto $port $instIp $dport0 $op) &&
@@ -143,0 +161 @@
+  (doHairpinNat $publicIp $proto $portRange $instIp $portRange $op) &&
diff --git a/patches/systemvm/debian/config/root/ipassoc.sh b/patches/systemvm/debian/config/root/ipassoc.sh
index 0ea9000..3fdc3f1 100644
--- a/patches/systemvm/debian/config/root/ipassoc.sh
+++ b/patches/systemvm/debian/config/root/ipassoc.sh
@@ -217 +217 @@
-  sudo iptables -t nat -I POSTROUTING   -j SNAT -o $ethDev --to-source $ipNoMask ;
+  sudo iptables -t nat -A POSTROUTING   -j SNAT -o $ethDev --to-source $ipNoMask ;
diff --git a/tools/testClient/deployDataCenter.py b/tools/testClient/deployDataCenter.py
index f867ee1..0439cc8 100644
--- a/tools/testClient/deployDataCenter.py
+++ b/tools/testClient/deployDataCenter.py
@@ -268,0 +269 @@
+            return self.enableZone(zoneId, "Enabled")
diff --git a/ui/index.jsp b/ui/index.jsp
index 684d3af..0dde35c 100644
--- a/ui/index.jsp
+++ b/ui/index.jsp
@@ -688 +688 @@
-          <div class="add-cluster" zone-wizard-form="primaryStorage"
+          <div class="add-cluster" zone-wizard-form="primaryStorage" zone-wizard-prefilter="addPrimaryStorage"
diff --git a/ui/scripts/instances.js b/ui/scripts/instances.js
index 243751e..66f2aa6 100644
--- a/ui/scripts/instances.js
+++ b/ui/scripts/instances.js
@@ -27,2 +27 @@
-      fields: {
-        name: { label: 'label.name', editable: true },
+      fields: {        
@@ -1491,4 +1490 @@
-              {
-                name: { label: 'label.name', isEditable: false }
-              },
-              {
+              {                       
@@ -1496 +1492 @@
-                displayname: { label: 'label.display.name', isEditable: true },
+                displayname: { label: 'label.display.name', isEditable: true },								   
@@ -1534 +1530,2 @@
-                created: { label: 'label.created', isEditable: false, converter: cloudStack.converters.toLocalDate }
+                created: { label: 'label.created', isEditable: false, converter: cloudStack.converters.toLocalDate },
+								name: { label: 'label.name', isEditable: false }
diff --git a/ui/scripts/network.js b/ui/scripts/network.js
index 6451966..bddd777 100644
--- a/ui/scripts/network.js
+++ b/ui/scripts/network.js
@@ -169,2 +168,0 @@
-
-
@@ -1053,2 +1051 @@
-              if (!ipAddress.issourcenat ||
-                  (ipAddress.issourcenat && !ipAddress.vpnenabled)) {
+              if (!ipAddress.vpnenabled) {
diff --git a/ui/scripts/storage.js b/ui/scripts/storage.js
index 683858d..bb6b6c6 100644
--- a/ui/scripts/storage.js
+++ b/ui/scripts/storage.js
@@ -223,7 +223,2 @@
-                         {jobId: jid,
-                          getUpdatedItem: function(json) {
-                            return json.queryasyncjobresultresponse.jobresult.snapshot;
-                          },
-                          getActionFilter: function() {
-                            return volumeActionfilter;
-                          }
+                         {
+												   jobId: jid //take snapshot from a volume doesn't change any property in this volume. So, don't need to specify getUpdatedItem() to return updated volume. Besides, createSnapshot API doesn't return updated volume. 
diff --git a/ui/scripts/system.js b/ui/scripts/system.js
index be5623e..c07e2ab 100644
--- a/ui/scripts/system.js
+++ b/ui/scripts/system.js
@@ -1149 +1149,2 @@
-                        array1.push("&zoneId=" + selectedZoneObj.id);
+                        array1.push("&zoneId=" + selectedZoneObj.id);												
+												array1.push("&physicalnetworkid=" + selectedPhysicalNetworkObj.id);		
@@ -1226 +1227 @@
-										//need to make 2 listNetworks API call to get all networks
+										//need to make 2 listNetworks API call to get all guest networks from one physical network in Advanced zone
@@ -1229 +1230 @@
-                      url: createURL("listNetworks&listAll=true&trafficType=Guest&zoneId=" + selectedZoneObj.id + "&page=" + args.page + "&pagesize=" + pageSize + array1.join("")),
+                      url: createURL("listNetworks&listAll=true&trafficType=Guest&zoneId=" + selectedZoneObj.id + "&physicalnetworkid=" + selectedPhysicalNetworkObj.id + "&page=" + args.page + "&pagesize=" + pageSize + array1.join("")),
@@ -1244 +1245 @@
-                      url: createURL("listNetworks&projectid=-1&trafficType=Guest&zoneId=" + selectedZoneObj.id + "&page=" + args.page + "&pagesize=" + pageSize + array1.join("")),
+                      url: createURL("listNetworks&projectid=-1&trafficType=Guest&zoneId=" + selectedZoneObj.id + "&physicalnetworkid=" + selectedPhysicalNetworkObj.id + "&page=" + args.page + "&pagesize=" + pageSize + array1.join("")),
@@ -1594,5 +1595,5 @@
-        dataProvider: function(args) {          
-          cloudStack.sections.system.naas.networkProviders.statusCheck({
-            context: args.context
-          });
-
+        dataProvider: function(args) {     
+				  //Comment out next line which causes Bug 13852 (Unable to configure multiple physical networks with service providers of the same device type).
+          //cloudStack.sections.system.naas.networkProviders.statusCheck({ context: args.context}); 
+					//Bug 13852 appears when there are multiple physical networks. Shouldn't call statusCheck() to render network provider chart before a physical network is selected. 
+										
@@ -1647,11 +1648,2 @@
-          selectedZoneObj = args.context.physicalResources[0];
-          $.ajax({
-            url: createURL("listPhysicalNetworks&zoneId=" + selectedZoneObj.id),
-            dataType: "json",
-            async: false,
-            success: function(json) {
-              var items = json.listphysicalnetworksresponse.physicalnetwork;
-              selectedPhysicalNetworkObj = items[0];
-            }
-          });
-
+          //selectedZoneObj = args.context.physicalResources[0];
+					
diff --git a/ui/scripts/zoneWizard.js b/ui/scripts/zoneWizard.js
index 7f53533..d64c66e 100644
--- a/ui/scripts/zoneWizard.js
+++ b/ui/scripts/zoneWizard.js
@@ -7 +7,2 @@
-
+  var configurationUseLocalStorage = false;
+	
@@ -160 +161,27 @@
-      }
+      },
+						
+			addPrimaryStorage: function(args) {		
+				$.ajax({
+				  url: createURL("listConfigurations&name=" + todb("use.local.storage")),
+					dataType: 'json',
+					async: false,
+					success: function(json) {					  
+					  var items = json.listconfigurationsresponse.configuration; //unfortunately, it returns 2 items("system.vm.use.local.storage", "use.local.storage") instead of 1 item. 						
+						if(items != null && items.length > 0) { 
+						  for(var i = 0; i < items.length; i++) {
+							  item = items[i];
+							  if(item.name == "use.local.storage") {								  
+								  break; //break for loop
+								}
+							}
+						}
+					}
+				});		
+
+				if(item == null || item.value == "false")
+				  configurationUseLocalStorage = false;
+				else				
+          configurationUseLocalStorage = true;
+					
+				return (!configurationUseLocalStorage);
+      }	
@@ -670,2 +697,2 @@
-            validation: { required: false }  // Primary storage is not required. User can use local storage instead of primary storage.
-          },
+            validation: { required: true }  
+					},
@@ -675,2 +702,2 @@
-            validation: { required: false }, // Primary storage is not required. User can use local storage instead of primary storage.
-            select: function(args) {
+            validation: { required: true }, 
+						select: function(args) {
@@ -892,2 +919,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -899,2 +926,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -906,2 +933,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -911,2 +938,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -918,2 +945,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -925,2 +952,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -930,2 +957,2 @@
-            validation: { required: false },  // Primary storage is not required. User can use local storage instead of primary storage.
-            isHidden: true
+            validation: { required: true },  
+						isHidden: true
@@ -937,2 +964,2 @@
-            validation: { required: false }   // Primary storage is not required. User can use local storage instead of primary storage.
-          }
+            validation: { required: false }   
+					}
@@ -2340,3 +2367,2 @@
-        addPrimaryStorage: function(args) {
-          var server = args.data.primaryStorage.server;
-          if(server == null || server.length == 0) {
+        addPrimaryStorage: function(args) {     
+					if(configurationUseLocalStorage == true) { //use local storage, don't need primary storage. So, skip this step.
@@ -2356,0 +2383 @@
+					var server = args.data.primaryStorage.server;

