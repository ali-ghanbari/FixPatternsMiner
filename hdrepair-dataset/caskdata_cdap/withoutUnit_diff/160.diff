diff --git a/cdap-cli/bin/cdap-cli.bat b/cdap-cli/bin/cdap-cli.bat
index 04c5c1c..a44ad7a 100755
--- a/cdap-cli/bin/cdap-cli.bat
+++ b/cdap-cli/bin/cdap-cli.bat
@@ -21,2 +21,2 @@
-cd %~dp0\..\lib
-java -cp .:* co.cask.cdap.shell.CLIMain
+cd
+java -cp %~dp0\..\lib;%~dp0\..\lib\* co.cask.cdap.shell.CLIMain
diff --git a/cdap-docs/developer-guide/source/arch.rst b/cdap-docs/developer-guide/source/arch.rst
index d49d490..f35fc61 100644
--- a/cdap-docs/developer-guide/source/arch.rst
+++ b/cdap-docs/developer-guide/source/arch.rst
@@ -40 +40 @@
-  `Cask Tephra <http://github.com/continuuity/tephra/>`__
+  `Cask Tephra <https://github.com/caskco/tephra/>`__
diff --git a/cdap-docs/developer-guide/source/getstarted.rst b/cdap-docs/developer-guide/source/getstarted.rst
index 20345e0..419e496 100644
--- a/cdap-docs/developer-guide/source/getstarted.rst
+++ b/cdap-docs/developer-guide/source/getstarted.rst
@@ -4,0 +5,2 @@
+.. _get-started:
+
@@ -9,3 +11,3 @@
-This chapter is a guide to help you get started with CDAP and prepares you to be familiar with the environment, At the
-end of this topic you will have CDAP up and running on your platform, you would learn how to develop, deploy and play with
-CDAP  with the help of the sample CDAP App provided in this chapter.
+This chapter is a guide to help you get started with CDAP. At the end of this topic you will have the CDAP SDK up
+and running in your development environment, and you will have built, deployed, run, and interacted with a sample
+application.
@@ -13,2 +15,2 @@
-CDAP SDK - Quick Intro
-----------------------
+Introduction to the CDAP SDK
+============================
@@ -16,10 +18,2 @@
-SDK is your entry door for developing apps that can run on CDAP,it provides nice and clean abstractions like ``Streams, Flows,Datasets`` to help solve your Big-data problems.
-  - Stream is entry point for data ingestion into CDAP, users can create and define streams and add streams to their application for processing.
-  - Processing happens at Flows, and the flow system is a Directed-acyclic graph constructed by the user and processing logic is provided by the user.
-  - CDAP SDK comes up with a good collection of in-built Datasets, that is developed to suit the needs of the Big-Data Storage and these datasets make it
-    easy for a user to think and store his data in a dataset - which is reflective of the kind of data. we believe this abstraction is more intuitive and
-    removes the complexity of the underlying storage engines for the user.
-  - The SDK comes with a standalone CDAP that implements all the features of CDAP, including data and app virtualizatiion, in a single JVM and can run on your laptop.
-  - The SDK also includes tools and clients that can help in developing, interacting-with and debugging CDAP applications.
-  - The SDK has features for running Map-Reduce and Spark Jobs
-  - The SDK provides Ad-hoc SQL support to query the datasets.
+The CDAP Software Developers Kit (SDK) is all you need to develop CDAP applications in your development environment
+(for example, your laptop or work station). It includes:
@@ -27,4 +21,17 @@
-Before Getting Started
-======================
-The minimum requirements to run CDAP applications are only three,
- - `JDK 6 or JDK 7 <http://www.oracle.com/technetwork/java/javase/downloads/index.html>`__ (required to run CDAP; note that $JAVA_HOME should be set)
+- A Standalone CDAP that can run on a single machine in a single JVM. It provides all of
+  the CDAP APIs without requiring a Hadoop cluster, using alternative, fully functional
+  implementations of CDAP features. For example, application containers are implemented as
+  Java threads instead of YARN containers.
+- The CDAP console, a web-based graphical user interface to interact with the Standalone CDAP
+  and the applications it runs.
+- The complete CDAP documentation, including this document and the Javadocs for the CDAP APIs.
+- A set of tools, datasets and example applications that help you get familiar with CDAP, and
+  can also serve as templates for developing for own applications.
+
+System Requirements and Dependencies for the SDK
+------------------------------------------------
+
+The CDAP SDK runs on Linux, Unix, MacOS and Windows, and only has three requirements:
+
+ - `JDK 6 or JDK 7 <http://www.oracle.com/technetwork/java/javase/downloads/index.html>`__ (required to run CDAP;
+   note that $JAVA_HOME should be set)
@@ -34,3 +41,5 @@
-Getting CDAP
-------------
-CDAP is available as a source tarball and binary on the Downloads section of Cask Website. If you want to get started quickly, the binary is the easiest way to get started.
+Downloading and Setting Up the CDAP SDK
+=======================================
+The SDK is available as a binary on the Downloads section of the Cask Website.
+[TODO: add link] Once downloaded, unzip it to a directory on your machine:
+::
@@ -38,19 +47,2 @@
-
-Building from Source
-====================
-
-**Check out the source** ::
-
-    $ git clone https://github.com/caskco/cdap cdap
-    $ cd cdap
-
-**Compile the Project** ::
-
-  $ mvn clean package -DskipTests -P examples -pl cdap-examples -am -amd && mvn package -pl cdap-standalone -am -DskipTests -P dist,release
-
-
-If you are an app-developer, you would want the binary distribution ::
-
-  $ cp cdap-standalone/target/cdap-sdk-<version>.zip .
-  $ tar -zxvf cdap-sdk-<version>.zip
-  $ cd cdap-sdk-<version>
+  $ tar -zxvf cdap-sdk-2.5.0.zip
+  $ cd cdap-sdk-2.5.0
@@ -60 +52 @@
-    $ ./bin/cdap.sh start (If you are using Windows, use the batch script to start)
+    $ ./bin/cdap.sh start
@@ -62 +54 @@
-Once CDAP is started successfully, you can see the CDAP web UI running at localhost:9999, you can head there to deploy sample example apps and experience CDAP.
+Or, if you are using Windows, use the batch script cdap.bat to start the SDK.
@@ -64,2 +56,2 @@
-For Developers
-==============
+Once CDAP is started successfully, you can see the CDAP console running at localhost:9999, and you can
+head there to deploy example applications and interact with CDAP.
@@ -67 +59,2 @@
-To generate a sample CDAP application, you would use the maven archetype ::
+Creating an Application
+=======================
@@ -69 +62,3 @@
-   ``$ mvn archetype:generate \
+The best way to start developing a CDAP application is using the Maven archetype::
+
+  $ mvn archetype:generate \
@@ -75,3 +70,4 @@
-To setup the CDAP application development environment, you need to import the generated pom file in your IDE,
-Now you are all set to start developing your first CDAP application. To help you familiarize with the environment and get developing CDAP apps, we have provided a set of Example Apps ,
-which uses and demonstrates the components of CDAP and we highly recommend you to read them before diving into CDAP.
+This creates a Maven project with all required dependencies and Maven plugins as well as a simple
+application template that you can modify to develop your application. You can import this Maven project
+into your favorite IDE, such as Eclipse or IntelliJ, and you are ready to start developing your first
+CDAP application.
@@ -81,2 +77,13 @@
-Example Apps
-------------
+First Steps
+===========
+
+Before you start developing your own applications, it is recommended to familiarize yourself with the
+APIs and concepts of CDAP as well as the CDAP console using example applications that are provided together
+with the SDK. Let's take a look at one of these:
+
+[TODO: Insert tutorial #1 by Terence].
+
+Other Example Applications
+==========================
+
+In addition to the previous example, the following examples are included in the SDK:
@@ -85 +92 @@
-==========
+----------
@@ -87 +94,2 @@
-A Simple HelloWorld App that's written using CDAP. It introduces how Stream,Dataset, Flow and Procedure are used in an CDAP application.
+A Simple HelloWorld App that's written using CDAP. It introduces how Stream, Dataset, Flow and Procedure
+are used in an CDAP application.
@@ -90 +98,2 @@
-========
+--------
+
@@ -94,6 +103,5 @@
- - PurchaseFlow Receives Events from a PurchaseStream about Purchases in the format "X bought Y apples for $Z", processes them
-   and stores it in a ``purchases dataset``.
- - A Mapreduce Job reads the ``purchase dataset`` , creates a purchase history object and stores them in a
-   ``history dataset``
- - Procedure and Ad-hoc SQL query support enables to query the ``history dataset`` to discover the purchase history
-   of users.
+ - The PurchaseFlow receives Events from a stream, each describing a purchase by a given customer
+   ("John bought 5 apples for $2"), processes and stores them it in a ``purchases`` dataset.
+ - A Mapreduce Job reads the ``purchase`` dataset, compiles the purchases of each customer into a purchase
+   history, and stores them in a ``history`` dataset.
+ - The ``history`` dataset can then be queried through a procedure and also through Ad-hoc SQL queries.
@@ -104 +112 @@
-===========
+-----------
@@ -112 +120 @@
-=============
+-------------
@@ -120 +128 @@
-=========
+---------
@@ -123 +131 @@
-It demonstrates the power of using Datasets and how they can be used to simplify storing complex data.
+It demonstrates the power of using datasets and how they can be used to simplify storing complex data.
diff --git a/cdap-docs/developer-guide/source/intro.rst b/cdap-docs/developer-guide/source/intro.rst
index f2769b7..3158a69 100644
--- a/cdap-docs/developer-guide/source/intro.rst
+++ b/cdap-docs/developer-guide/source/intro.rst
@@ -9,2 +9,3 @@
-The Cask |(TM)| Data Application Platform (CDAP) provides virtualization for data and applications
-on Hadoop.
+The Cask |(TM)| Data Application Platform (CDAP) is an open source project for distributed data
+and applications. CDAP is a layer of software running on top of Hadoop platforms such as the
+Cloudera Enterprise Data Hub or the Hortonworks Data Platform. CDAP provides 3 essential functions:
@@ -12,7 +13,10 @@
-- Data virtualization is through CDAP's dataset framework, which allows you to write
-  your application agnostic to the representation of data in actual storage engines, and to
-  encapsulate your applications data access patterns in reusable libraries.
-- Application virtualization is achieved by providing different runtimes for various
-  environments. Be it in memory for unit testing, a standalone runtime that runs on a
-  single computer, or a distributed runtime with execution in the YARN containers of a
-  Hadoop cluster. The application can be written independent of where it is executed.
+- Virtualization of data in the Hadoop environment by creating logical representations of underlying
+  data
+- Virtualization of applications by creating application containers
+- Services and tools that enable faster application creation in development and higher degrees of
+  operational control in production
+
+CDAP exposes developer APIs (Application Programming Interfaces), both for creating applications
+and accessing core CDAP services. CDAP defines and implements a collection of services that land
+applications and data on existing Hadoop infrastructure such as HBase, HDFS, YARN, MapReduce,
+Hive, and Spark.
@@ -21,4 +25,5 @@
-started and set up your development environment; it explains how CDAP works and teaches how
-develop and test application on top of CDAP, or how to virtualize an existing Hadoop application,
-and how to install, monitor and diagnose a fully distributed CDAP in a Hadoop cluster. It also
-contains a complete reference of CDAP programming APIs and client interfaces.
+started and set up your development environment; it explains how CDAP works and teaches how to
+develop and test applications with CDAP, or how to virtualize an existing Hadoop application.
+It also contains a complete reference of CDAP programming APIs and client interfaces.
+Furthermore, this document describes how to install, monitor and diagnose a fully distributed
+CDAP in a Hadoop cluster.
@@ -31,3 +36,3 @@
-- `Cask Data Application Platform Getting Started Guide <getstarted.html>`__,
-  which guides you through installing CDAP, setting up your development environment, and building and running
-  an example application.
+- :ref:`get-started`,
+  which guides you through installing the CDAP SDK, setting up your development environment,
+  and building and running an example application.
diff --git a/cdap-standalone/src/main/java/co/cask/cdap/WebCloudAppService.java b/cdap-standalone/src/main/java/co/cask/cdap/WebCloudAppService.java
index 2eed052..807d673 100644
--- a/cdap-standalone/src/main/java/co/cask/cdap/WebCloudAppService.java
+++ b/cdap-standalone/src/main/java/co/cask/cdap/WebCloudAppService.java
@@ -78,0 +79,2 @@
+    Preconditions.checkArgument(this.webAppPath.exists(),
+                                "webAppPath file does not exist: " + this.webAppPath.getAbsolutePath());

