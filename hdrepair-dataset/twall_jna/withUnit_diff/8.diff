diff --git a/native/Makefile b/native/Makefile
index fadf99e..10f9653 100644
--- a/native/Makefile
+++ b/native/Makefile
@@ -125 +125 @@
-CDEFINES=-DHAVE_PROTECTION -DPSAPI_VERSION=1
+CDEFINES=-DHAVE_PROTECTION -DPSAPI_VERSION=1 -DPROCEED_ON_ERROR
@@ -153 +153 @@
-MINGW_PREFIX=x86_64-pc-mingw32-
+#MINGW_PREFIX=x86_64-pc-mingw32-
@@ -162 +162 @@
-CDEFINES=-DPSAPI_VERSION=1
+CDEFINES=-DPSAPI_VERSION=1 -DPROCEED_ON_ERROR
@@ -176 +176 @@
-FFI_ENV+=LD="$(LD) cpp=$(CPP)"
+FFI_ENV+=LD="$(LD)" CPP="$(CPP)" CFLAGS="$(CDEFINES)"
diff --git a/native/callback.c b/native/callback.c
index a12d918..159354f 100644
--- a/native/callback.c
+++ b/native/callback.c
@@ -62 +62 @@
-static void *dll_fptrs[] = {
+static void * const dll_fptrs[] = {
@@ -120,0 +121,3 @@
+    }
+    else {
+      cb->arg_classes[i] = NULL;
@@ -225,2 +228 @@
-        jboolean found = JNI_FALSE;
-        for (i=0;i < DLL_FPTRS && !found;i++) {
+        for (i=0;i < DLL_FPTRS;i++) {
@@ -230 +232 @@
-            found = JNI_TRUE;
+            break;
@@ -233 +235 @@
-        if (!found) {
+        if (i == DLL_FPTRS) {
@@ -235 +237 @@
-          throw_msg = "All DLL callbacks have been allocated";
+          throw_msg = "No more DLL callback slots available";
@@ -255 +256,0 @@
-
@@ -262 +263,3 @@
-      (*env)->DeleteWeakGlobalRef(env, cb->arg_classes[i]);
+      if (cb->arg_classes[i]) {
+        (*env)->DeleteWeakGlobalRef(env, cb->arg_classes[i]);
+      }
@@ -267 +270 @@
-  if (cb->flags)
+  if (cb->flags) {
@@ -268,0 +272 @@
+  }
diff --git a/native/dispatch.h b/native/dispatch.h
index e47f9ea..b3d574f 100644
--- a/native/dispatch.h
+++ b/native/dispatch.h
@@ -16,2 +15,0 @@
-/* Avoid undefined 'abort' errors from libffi/src/dlmalloc.c */
-#define PROCEED_ON_ERROR
diff --git a/src/com/sun/jna/CallbackReference.java b/src/com/sun/jna/CallbackReference.java
index 0bbcef1..1a10d01 100644
--- a/src/com/sun/jna/CallbackReference.java
+++ b/src/com/sun/jna/CallbackReference.java
@@ -229 +228,0 @@
-
diff --git a/test/com/sun/jna/CallbacksTest.java b/test/com/sun/jna/CallbacksTest.java
index 1f86932..e0e2cae 100644
--- a/test/com/sun/jna/CallbacksTest.java
+++ b/test/com/sun/jna/CallbacksTest.java
@@ -1135,0 +1136,13 @@
+    }
+
+    public void testThrowOutOfMemoryWhenDLLCallbacksExhausted() throws Exception {
+        if (!Platform.HAS_DLL_CALLBACKS) {
+            return;
+        }
+
+        final boolean[] called = { false };
+        class TestCallback implements TestLibrary.VoidCallback, com.sun.jna.win32.DLLCallback {
+            public void callback() {
+                called[0] = true;
+            }
+        }

