diff --git a/core/src/main/java/org/cratedb/core/collections/LimitingCollectionIterator.java b/core/src/main/java/org/cratedb/core/collections/LimitingCollectionIterator.java
index 70a36f4..0c20855 100644
--- a/core/src/main/java/org/cratedb/core/collections/LimitingCollectionIterator.java
+++ b/core/src/main/java/org/cratedb/core/collections/LimitingCollectionIterator.java
@@ -27 +27 @@
-        return limit == 0 && collection.isEmpty();
+        return limit == 0 || collection.isEmpty();
diff --git a/core/src/test/java/org/cratedb/core/collections/LimitingCollectionIteratorTest.java b/core/src/test/java/org/cratedb/core/collections/LimitingCollectionIteratorTest.java
index 25dded4..497ecd5 100644
--- a/core/src/test/java/org/cratedb/core/collections/LimitingCollectionIteratorTest.java
+++ b/core/src/test/java/org/cratedb/core/collections/LimitingCollectionIteratorTest.java
@@ -7,0 +8 @@
+import static org.hamcrest.CoreMatchers.is;
@@ -8,0 +10 @@
+import static org.junit.Assert.assertThat;
@@ -29,0 +32,21 @@
+
+    @Test
+    public void testLimitingCollectionIteratorIsEmptyLimitZero() {
+
+        List<Integer> rows = new ArrayList<>(10);
+        for (int i = 0; i < 10; i++) {
+            rows.add(i);
+        }
+
+        LimitingCollectionIterator<Integer> integers = new LimitingCollectionIterator<>(rows, 0);
+        assertThat(integers.isEmpty(), is(true));
+    }
+
+    @Test
+    public void testLimitingCollectionIteratorIsEmptyEmptyInput() {
+
+        List<Integer> rows = new ArrayList<>(0);
+
+        LimitingCollectionIterator<Integer> integers = new LimitingCollectionIterator<>(rows, 10);
+        assertThat(integers.isEmpty(), is(true));
+    }

