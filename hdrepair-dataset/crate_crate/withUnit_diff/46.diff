diff --git a/CHANGES.txt b/CHANGES.txt
index bde2452..f393ce3 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -7,0 +8,2 @@
+ - calling _sql with `null` in the `args` no longer causes an error.
+
diff --git a/sql/src/main/java/org/cratedb/action/sql/parser/SQLArgsParseElement.java b/sql/src/main/java/org/cratedb/action/sql/parser/SQLArgsParseElement.java
index a13cb59..42613dd 100644
--- a/sql/src/main/java/org/cratedb/action/sql/parser/SQLArgsParseElement.java
+++ b/sql/src/main/java/org/cratedb/action/sql/parser/SQLArgsParseElement.java
@@ -35,0 +36,2 @@
+            } else if (token == XContentParser.Token.VALUE_NULL) {
+                subList.add(null);
diff --git a/sql/src/test/java/org/cratedb/integrationtests/RestSqlActionTest.java b/sql/src/test/java/org/cratedb/integrationtests/RestSqlActionTest.java
index 80e215f..9151b1f 100644
--- a/sql/src/test/java/org/cratedb/integrationtests/RestSqlActionTest.java
+++ b/sql/src/test/java/org/cratedb/integrationtests/RestSqlActionTest.java
@@ -90,0 +91,14 @@
+    @Test
+    public void testSqlRequestWithNullArgs() throws Exception {
+
+        String json = sql("{\n" +
+            "    \"stmt\": \"insert into locations (name, kind) values (?, ?)\",\n" +
+            "    \"args\": [\"Somewhere\", null]\n" +
+            "}\n");
+
+        JSONAssert.assertEquals(
+            "{\n" +
+                "  \"cols\" : [ ],\n" +
+                "  \"rows\" : [ ]\n" +
+                "}", json, true);
+    }

