diff --git a/sql/src/main/java/io/crate/operator/projectors/SortingTopNProjector.java b/sql/src/main/java/io/crate/operator/projectors/SortingTopNProjector.java
index e91b3cb..aece827 100644
--- a/sql/src/main/java/io/crate/operator/projectors/SortingTopNProjector.java
+++ b/sql/src/main/java/io/crate/operator/projectors/SortingTopNProjector.java
@@ -158 +158 @@
-        int resultSize = pq.size() - start;
+        final int resultSize = Math.max(pq.size() - start, 0);
diff --git a/sql/src/test/java/io/crate/operator/projectors/SortingTopNProjectorTest.java b/sql/src/test/java/io/crate/operator/projectors/SortingTopNProjectorTest.java
index ba5cc94..cb1a2f3 100644
--- a/sql/src/test/java/io/crate/operator/projectors/SortingTopNProjectorTest.java
+++ b/sql/src/test/java/io/crate/operator/projectors/SortingTopNProjectorTest.java
@@ -73,0 +74,23 @@
+    public void testWithHighOffset() throws Exception {
+        SortingTopNProjector projector = new SortingTopNProjector(
+                new Input<?>[] { INPUT, TRUE_LITERAL },
+                new CollectExpression[] { (CollectExpression<?>)INPUT },
+                2,
+                new int[] { 0 },
+                new boolean[] { false },
+                2,
+                30
+        );
+
+        projector.startProjection();
+        for (int i = 0; i < 10; i++) {
+            if (!projector.setNextRow(i)) {
+                break;
+            }
+        }
+
+        projector.finishProjection();
+        assertThat(projector.getRows().length, is(0));
+    }
+
+    @Test

