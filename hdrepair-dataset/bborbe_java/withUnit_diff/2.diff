diff --git a/website/src/main/java/de/benjaminborbe/website/link/LinkMailtoWidget.java b/website/src/main/java/de/benjaminborbe/website/link/LinkMailtoWidget.java
index f666de2..4447451 100644
--- a/website/src/main/java/de/benjaminborbe/website/link/LinkMailtoWidget.java
+++ b/website/src/main/java/de/benjaminborbe/website/link/LinkMailtoWidget.java
@@ -35 +34,0 @@
-		a.render(request, response, context);
diff --git a/website/src/test/java/de/benjaminborbe/website/link/LinkMailtoWidgetUnitTest.java b/website/src/test/java/de/benjaminborbe/website/link/LinkMailtoWidgetUnitTest.java
new file mode 100644
index 0000000..f682ecd
--- /dev/null
+++ b/website/src/test/java/de/benjaminborbe/website/link/LinkMailtoWidgetUnitTest.java
@@ -0,0 +1,35 @@
+package de.benjaminborbe.website.link;
+
+import de.benjaminborbe.html.api.HttpContext;
+import org.easymock.EasyMock;
+import org.junit.Test;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.PrintWriter;
+import java.io.StringWriter;
+
+import static org.junit.Assert.assertEquals;
+
+public class LinkMailtoWidgetUnitTest {
+
+	@Test
+	public void testLink() throws Exception {
+		final HttpServletRequest request = EasyMock.createMock(HttpServletRequest.class);
+		EasyMock.replay(request);
+
+		final StringWriter sw = new StringWriter();
+		final PrintWriter writer = new PrintWriter(sw);
+
+		final HttpServletResponse response = EasyMock.createMock(HttpServletResponse.class);
+		EasyMock.expect(response.getWriter()).andReturn(writer).anyTimes();
+		EasyMock.replay(response);
+
+		final HttpContext context = EasyMock.createMock(HttpContext.class);
+		EasyMock.replay(context);
+
+		final LinkMailtoWidget link = new LinkMailtoWidget("admin@examle.com", "admin");
+		link.render(request, response, context);
+		assertEquals("<a href=\"mailto:admin@examle.com\">admin</a>", sw.toString());
+	}
+}

