diff --git a/app/index.js b/app/index.js
index d74dad8..3e96be9 100644
--- a/app/index.js
+++ b/app/index.js
@@ -438,0 +439 @@
+            this.template('_gatling.gradle', 'gatling.gradle', this, {});
@@ -833,0 +835 @@
+    this.template(testJsDir + 'spec/app/account/admin/health/_healthControllerSpec.js', testJsDir + 'spec/app/account/health/healthControllerSpec.js', this, {});
diff --git a/app/templates/_build.gradle b/app/templates/_build.gradle
index 091bee7..dcc7709 100644
--- a/app/templates/_build.gradle
+++ b/app/templates/_build.gradle
@@ -36,0 +37 @@
+apply from: 'gatling.gradle'
@@ -164,0 +166 @@
+    testCompile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: gatling_version
diff --git a/app/templates/_gatling.gradle b/app/templates/_gatling.gradle
new file mode 100644
index 0000000..b6cb7e6
--- /dev/null
+++ b/app/templates/_gatling.gradle
@@ -0,0 +1,37 @@
+apply plugin: 'scala'
+
+sourceSets {
+    test {
+        scala {
+            srcDirs = ['src/test/gatling/simulations']
+            output.classesDir = 'target/test-classes'
+        }
+    }
+}
+
+task gatlingRun(dependsOn:'compileTestScala', type: JavaExec) {
+
+    group = "gatling"
+
+    standardInput = System.in
+
+    final def sourceSet = sourceSets.test
+    File configFile = file('src/test/gatling/conf/gatling.conf')
+
+    def String gatlingDataFolder = "$project.rootDir.absolutePath/src/test/gatling/data"
+    def String gatlingReportsFolder = "$project.buildDir.absolutePath/reports/gatling"
+    def String gatlingBodiesFolder = "$project.rootDir.absolutePath/src/test/gatling/bodies"
+    def String gatlingSimulationsFolder = "$project.rootDir.absolutePath/src/test/gatling/simulations"
+
+    classpath sourceSet.output + sourceSet.runtimeClasspath + files("src/test/gatling/conf")
+    main = "io.gatling.app.Gatling"
+
+    environment GATLING_HOME:''
+
+    args '-df', gatlingDataFolder
+    args '-rf', gatlingReportsFolder
+    args '-bdf', gatlingBodiesFolder
+    args "-sf", gatlingSimulationsFolder
+    args "-rd", ""
+
+}
diff --git a/app/templates/_gradle.properties b/app/templates/_gradle.properties
index 4af3c01..5a81db3 100644
--- a/app/templates/_gradle.properties
+++ b/app/templates/_gradle.properties
@@ -40,0 +41 @@
+gatling_version=2.1.4
diff --git a/app/templates/src/main/java/package/service/_UserService.java b/app/templates/src/main/java/package/service/_UserService.java
index 5fdf05a..c310645 100644
--- a/app/templates/src/main/java/package/service/_UserService.java
+++ b/app/templates/src/main/java/package/service/_UserService.java
@@ -9 +9 @@
-import com.mycompany.myapp.security.AuthoritiesConstants;<% } %>
+import <%=packageName%>.security.AuthoritiesConstants;<% } %>
diff --git a/app/templates/src/main/webapp/assets/styles/main.css b/app/templates/src/main/webapp/assets/styles/main.css
index 9f587f1..4d3c244 100755
--- a/app/templates/src/main/webapp/assets/styles/main.css
+++ b/app/templates/src/main/webapp/assets/styles/main.css
@@ -106,0 +107,4 @@
+.health-details {
+    min-width: 400px;
+}
+
diff --git a/app/templates/src/main/webapp/i18n/en/_health.json b/app/templates/src/main/webapp/i18n/en/_health.json
index 8a63240..bcb049b 100644
--- a/app/templates/src/main/webapp/i18n/en/_health.json
+++ b/app/templates/src/main/webapp/i18n/en/_health.json
@@ -5 +5,8 @@
-        "stacktrace": "Stacktrace",
+        "stacktrace": "Stacktrace",        
+        "details": {
+            "details": "Details",
+            "properties": "Properties",
+            "name": "Name",
+            "value": "Value",
+            "error": "Error"
+        },
diff --git a/app/templates/src/main/webapp/scripts/app/admin/health/_health.controller.js b/app/templates/src/main/webapp/scripts/app/admin/health/_health.controller.js
index bb18b2b..0b110b1 100644
--- a/app/templates/src/main/webapp/scripts/app/admin/health/_health.controller.js
+++ b/app/templates/src/main/webapp/scripts/app/admin/health/_health.controller.js
@@ -5,0 +6 @@
+        $scope.separator = '.';
@@ -9,2 +10,2 @@
-            MonitoringService.checkHealth().then(function (reponse) {
-                $scope.healthCheck = reponse;
+            MonitoringService.checkHealth().then(function (response) {
+                $scope.healthData = $scope.transformHealthData(response);
@@ -12,2 +13,2 @@
-            }, function (reponse) {
-                $scope.healthCheck = reponse.data;
+            }, function (response) {
+                $scope.healthData =  $scope.transformHealthData(response.data);
@@ -26,0 +28,108 @@
+
+        $scope.transformHealthData = function (data) {
+            var response = [];
+            $scope.flattenHealthData(response, null, data);
+            return response;
+        };
+
+        $scope.flattenHealthData = function (result, path, data) {
+            angular.forEach(data, function (value, key) {
+                if ($scope.isHealthObject(value)) {
+                    if ($scope.hasSubSystem(value)) {
+                        $scope.addHealthObject(result, false, value, $scope.getModuleName(path, key));
+                        $scope.flattenHealthData(result, $scope.getModuleName(path, key), value);
+                    } else {
+                        $scope.addHealthObject(result, true, value, $scope.getModuleName(path, key));
+                    }
+                }
+            });
+
+            return result;
+        };
+
+        $scope.getModuleName = function (path, name) {
+            var result;
+            if (path && name) {
+                result = path + $scope.separator + name;
+            }  else if (path) {
+                result = path;
+            } else if (name) {
+                result = name;
+            } else {
+                result = '';
+            }
+            return result;
+        };
+
+
+        $scope.showHealth = function (health) {
+            $scope.currentHealth = health;
+            $('#showHealthModal').modal('show');
+        };
+
+        $scope.addHealthObject = function (result, isLeaf, healthObject, name) {
+
+            var healthData = {
+                'name': name
+            };
+            var details = {};
+            var hasDetails = false;
+
+            angular.forEach(healthObject, function (value, key) {
+                if (key === 'status' || key === 'error') {
+                    healthData[key] = value;
+                } else {
+                    if (!$scope.isHealthObject(value)) {
+                        details[key] = value;
+                        hasDetails = true;
+                    }
+                }
+            });
+
+            // Add the of the details
+            if (hasDetails) {
+                angular.extend(healthData, { 'details': details});
+            }
+
+            // Only add nodes if they provide additional information
+            if (isLeaf || hasDetails || healthData.error) {
+                result.push(healthData);
+            }
+            return healthData;
+        };
+
+        $scope.hasSubSystem = function (healthObject) {
+            var result = false;
+            angular.forEach(healthObject, function (value) {
+                if (value && value.status) {
+                    result = true;
+                }
+            });
+            return result;
+        };
+
+        $scope.isHealthObject = function (healthObject) {
+            var result = false;
+            angular.forEach(healthObject, function (value, key) {
+                if (key === 'status') {
+                    result = true;
+                }
+            });
+            return result;
+        };
+
+        $scope.baseName = function (name) {
+            if (name) {
+              var split = name.split('.');
+              return split[0];
+            }
+        };
+
+        $scope.subSystemName = function (name) {
+            if (name) {
+              var split = name.split('.');
+              split.splice(0, 1);
+              var remainder = split.join('.');
+              return remainder ? ' - ' + remainder : '';
+            }
+        };
diff --git a/app/templates/src/main/webapp/scripts/app/admin/health/health.html b/app/templates/src/main/webapp/scripts/app/admin/health/health.html
index 57d9c7f..7581ccf 100644
--- a/app/templates/src/main/webapp/scripts/app/admin/health/health.html
+++ b/app/templates/src/main/webapp/scripts/app/admin/health/health.html
@@ -4,0 +5,44 @@
+    <div class="modal fade" id="showHealthModal" tabindex="-1" role="dialog" aria-labelledby="showHealthLabel"
+         aria-hidden="true">
+        <div class="modal-dialog">
+            <div class="modal-content">
+                <form name="form" role="form" novalidate
+                      class="ng-scope ng-invalid ng-invalid-required ng-dirty ng-valid-minlength"
+                      ng-submit="create()">
+
+                    <div class="modal-header">
+                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"
+                                ng-click="clear()">&times;</button>
+                        <h4 class="modal-title" id="showHealthLabel">
+                            {{'health.indicator.' + baseName(currentHealth.name) | translate}}
+                            {{subSystemName(currentHealth.name)}}
+                        </h4>
+                    </div>
+                    <div class="modal-body">
+                        <div ng-show="currentHealth.details">
+                            <h4>{{'health.details.properties' | translate}}</h4>
+                            <table class="table table-striped">
+                                <thead>
+                                    <tr>
+                                        <th class="col-md-6 text-left">{{'health.details.name' | translate}}</th>
+                                        <th class="col-md-6 text-left">{{'health.details.value' | translate}}</th>
+                                    </tr>
+                                </thead>
+                                <tbody>
+                                    <tr ng-repeat="(k,v) in currentHealth.details">
+                                        <td class="col-md-6 text-left">{{k}}</td>
+                                        <td class="col-md-6 text-left">{{v}}</td>
+                                    </tr>
+                                </tbody>
+                            </table>
+                        </div>
+                        <div ng-show="currentHealth.error">
+                            <h4>{{'health.details.error' | translate}}</h4>
+                                <pre>{{currentHealth.error}}</pre>
+                        </div>
+                    </div>
+                </form>
+            </div>
+        </div>
+    </div>
+
@@ -11 +55 @@
-    <table class="table table-striped">
+    <table id="healthCheck" class="table table-striped">
@@ -13,5 +57,6 @@
-        <tr>
-            <th>{{'health.table.service' | translate}}</th>
-            <th class="text-center">{{'health.table.status' | translate}}</th>
-            <th>{{'health.stacktrace' | translate}}</th>
-        </tr>
+            <tr>
+                <th class="col-md-7">{{'health.table.service' | translate}}</th>
+                <th class="col-md-2 text-center">{{'health.table.status' | translate}}</th>
+                <th class="col-md-2 text-center">{{'health.details.details' | translate}}</th>
+                <th class="col-md-1 text-center"></th>
+            </tr>
@@ -20,27 +65,14 @@
-        <tr ng-repeat="(k, v) in healthCheck" ng-show="k != 'status'">
-            <td>{{'health.indicator.' + k | translate}}</td>
-            <td class="text-center"><span class="label" ng-class="getLabelClass(v.status)">{{'health.status.' + v.status | translate}}</span></td>
-            <td class="text-center">
-                <div id="healthCheck" class="row" ng-show="v.error">
-                    <div class="col-md-4">
-                        <a class="hand" ng-click="showHealthcheckException = !showHealthcheckException">
-                            <i class="glyphicon glyphicon-eye-open"></i>
-                        </a>
-                        <div class="popover" ng-show="showHealthcheckException">
-                            <div class="popover-title">
-                                <h4>{{'health.stacktrace' | translate}}
-                                    <button type="button" class="close"
-                                            ng-click="showHealthcheckException = !showHealthcheckException">
-                                        x
-                                    </button>
-                                </h4>
-                            </div>
-                            <div class="popover-content">
-                                <pre>{{v.error}}</pre>
-                            </div>
-                        </div>
-                    </div>
-                </div>
-
-            </td>
-        </tr>
+            <tr ng-repeat="health in healthData">
+                <td>{{'health.indicator.' + baseName(health.name) | translate}}{{subSystemName(health.name)}}</td>
+                <td class="text-center">
+                    <span class="label" ng-class="getLabelClass(health.status)">
+                        {{'health.status.' + health.status | translate}}
+                    </span>
+                </td>
+                <td class="text-center">
+                    <a class="hand" ng-click="showHealth(health)" ng-show="health.details || health.error">
+                        <i class="glyphicon glyphicon-eye-open"></i>
+                    </a>
+                </td>
+                <td></td>
+            </tr>
diff --git a/app/templates/src/test/javascript/spec/app/account/admin/health/_healthControllerSpec.js b/app/templates/src/test/javascript/spec/app/account/admin/health/_healthControllerSpec.js
new file mode 100644
index 0000000..a56fb63
--- /dev/null
+++ b/app/templates/src/test/javascript/spec/app/account/admin/health/_healthControllerSpec.js
@@ -0,0 +1,305 @@
+'use strict';
+
+describe('Controllers Tests ', function () {
+
+    beforeEach(module('<%= angularAppName %>'));
+
+    describe('HealthController', function () {
+        var $scope, MonitoringService;
+
+        beforeEach(inject(function ($rootScope, $controller, Sessions) {
+            $scope = $rootScope.$new();
+
+            MonitoringService = Sessions;
+            $controller('HealthController', { $scope: $scope, Sessions: MonitoringService });
+        }));
+
+        describe('isHealthObject and hasSubSystem', function () {
+            it('should verify empty object is not a health property leaf', function () {
+                expect($scope.isHealthObject({})).toBe(false);
+                expect($scope.hasSubSystem({})).toBe(false);
+            });
+
+            it('should verify object with property status and no subsystems is a health property leaf', function () {
+                var healthObject = {
+                    'status': 'UP'
+                };
+                expect($scope.isHealthObject(healthObject)).toBe(true);
+                expect($scope.hasSubSystem(healthObject)).toBe(false);
+            });
+
+            it('should verify that object property status and unrecognized objects is a health property leaf', function () {
+                var healthObject = {
+                    'status': 'UP',
+                    'subsystem': {
+                        'hello': 'UP'
+                    }
+                };
+                expect($scope.isHealthObject(healthObject)).toBe(true);
+                expect($scope.hasSubSystem(healthObject)).toBe(false);
+            });
+
+            it('should verify object with property status but with subsystems is NOT a health property leaf', function () {
+                var healthObject = {
+                    'status': 'UP',
+                    'subsystem': {
+                        'status': 'UP'
+                    }
+                };
+                expect($scope.isHealthObject(healthObject)).toBe(true);
+                expect($scope.hasSubSystem(healthObject)).toBe(true);
+            });
+
+        });
+
+        describe('transformHealthData', function () {
+            it('should flatten empty health data', function () {
+                var data = {};
+                var expected = [];
+                expect($scope.transformHealthData(data)).toEqual(expected);
+            });
+
+            it('should flatten health data with no subsystems', function () {
+                var data = {
+                    'status': 'UP',
+                    'db': {
+                        'status': 'UP',
+                        'database': 'H2',
+                        'hello': '1'
+                    },
+                    'mail': {
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    }
+                };
+                var expected = [
+                    {
+                        'name': 'db',
+                        'status': 'UP',
+                        'details': {
+                            'database': 'H2',
+                            'hello': '1'
+                        }
+                    },
+                    {
+                        'name': 'mail',
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    }
+                ];
+                expect($scope.transformHealthData(data)).toEqual(expected);
+            });
+
+            it('should flatten health data with subsystems at level 1, main system has no additional information', function () {
+                var data = {
+                    'status': 'UP',
+                    'db': {
+                        'status': 'UP',
+                        'database': 'H2',
+                        'hello': '1'
+                    },
+                    'mail': {
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    'system': {
+                        'status': 'DOWN',
+                        'subsystem1': {
+                            'status': 'UP',
+                            'property1': 'system.subsystem1.property1'
+                        },
+                        'subsystem2': {
+                            'status': 'DOWN',
+                            'error': 'system.subsystem1.error',
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                };
+                var expected = [
+                    {
+                        'name': 'db',
+                        'status': 'UP',
+                        'details': {
+                            'database': 'H2',
+                            'hello': '1'
+                        }
+                    },
+                    {
+                        'name': 'mail',
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    {
+                        'name': 'system.subsystem1',
+                        'status': 'UP',
+                        'details': {
+                            'property1': 'system.subsystem1.property1'
+                        }
+                    },
+                    {
+                        'name': 'system.subsystem2',
+                        'status': 'DOWN',
+                        'error': 'system.subsystem1.error',
+                        'details': {
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                ];
+                expect($scope.transformHealthData(data)).toEqual(expected);
+            });
+
+            it('should flatten health data with subsystems at level 1, main system has additional information', function () {
+                var data = {
+                    'status': 'UP',
+                    'db': {
+                        'status': 'UP',
+                        'database': 'H2',
+                        'hello': '1'
+                    },
+                    'mail': {
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    'system': {
+                        'status': 'DOWN',
+                        'property1': 'system.property1',
+                        'subsystem1': {
+                            'status': 'UP',
+                            'property1': 'system.subsystem1.property1'
+                        },
+                        'subsystem2': {
+                            'status': 'DOWN',
+                            'error': 'system.subsystem1.error',
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                };
+                var expected = [
+                    {
+                        'name': 'db',
+                        'status': 'UP',
+                        'details': {
+                            'database': 'H2',
+                            'hello': '1'
+                        }
+                    },
+                    {
+                        'name': 'mail',
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    {
+                        'name': 'system',
+                        'status': 'DOWN',
+                        'details': {
+                            'property1': 'system.property1'
+                        }
+                    },
+                    {
+                        'name': 'system.subsystem1',
+                        'status': 'UP',
+                        'details': {
+                            'property1': 'system.subsystem1.property1'
+                        }
+                    },
+                    {
+                        'name': 'system.subsystem2',
+                        'status': 'DOWN',
+                        'error': 'system.subsystem1.error',
+                        'details': {
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                ];
+                expect($scope.transformHealthData(data)).toEqual(expected);
+            });
+
+            it('should flatten health data with subsystems at level 1, main system has additional error', function () {
+                var data = {
+                    'status': 'UP',
+                    'db': {
+                        'status': 'UP',
+                        'database': 'H2',
+                        'hello': '1'
+                    },
+                    'mail': {
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    'system': {
+                        'status': 'DOWN',
+                        'error': 'show me',
+                        'subsystem1': {
+                            'status': 'UP',
+                            'property1': 'system.subsystem1.property1'
+                        },
+                        'subsystem2': {
+                            'status': 'DOWN',
+                            'error': 'system.subsystem1.error',
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                };
+                var expected = [
+                    {
+                        'name': 'db',
+                        'status': 'UP',
+                        'details': {
+                            'database': 'H2',
+                            'hello': '1'
+                        }
+                    },
+                    {
+                        'name': 'mail',
+                        'status': 'UP',
+                        'error': 'mail.a.b.c'
+                    },
+                    {
+                        'name': 'system',
+                        'status': 'DOWN',
+                        'error': 'show me'
+                    },
+                    {
+                        'name': 'system.subsystem1',
+                        'status': 'UP',
+                        'details': {
+                            'property1': 'system.subsystem1.property1'
+                        }
+                    },
+                    {
+                        'name': 'system.subsystem2',
+                        'status': 'DOWN',
+                        'error': 'system.subsystem1.error',
+                        'details': {
+                            'property2': 'system.subsystem2.property2'
+                        }
+                    }
+                ];
+                expect($scope.transformHealthData(data)).toEqual(expected);
+            });
+        });
+
+        describe('getModuleName(path, name)', function () {
+            it('should show both path and name if defined', function () {
+                expect($scope.getModuleName('path', 'name')).toEqual('path' +  $scope.separator + 'name');
+            });
+
+            it('should show only path if name is not defined', function () {
+                expect($scope.getModuleName('path')).toEqual('path');
+                expect($scope.getModuleName('path', '')).toEqual('path');
+                expect($scope.getModuleName('path', null)).toEqual('path');
+            });
+
+            it('should show only name if path is not defined', function () {
+                expect($scope.getModuleName(null, 'name')).toEqual('name');
+                expect($scope.getModuleName('', 'name')).toEqual('name');
+            });
+
+            it('should show empty string if neither name nor path is defined', function () {
+                expect($scope.getModuleName()).toEqual('');
+            });
+
+        });
+    });
+
+});
diff --git a/package.json b/package.json
index 698d483..59a572c 100755
--- a/package.json
+++ b/package.json
@@ -3 +3 @@
-  "version": "2.4.0",
+  "version": "2.5.0",

