diff --git a/tutorials/www/calendars.template.html b/tutorials/www/calendars.template.html
index 94ff303..3d63c39 100644
--- a/tutorials/www/calendars.template.html
+++ b/tutorials/www/calendars.template.html
@@ -36 +36,135 @@
-<p>This section is not yet complete.</p>
+
+<p>Pivot supports two types of calendar components: a standalone <tt>Calendar</tt> component that can be used anywhere within an application's user interface, and a <tt>CalendarButton</tt> component that, like a <a href="lists.html">list button</a>, displays a popup calendar when pressed.</p>
+
+<p>The following sample application demonstrates both types of components:</p>
+
+<script>
+var attributes = {code:"org.apache.pivot.wtk.BrowserApplicationContext$HostApplet",
+    archive:"lib/@project_name@-core-@version@.jar,lib/@project_name@-wtk-@version@.jar,lib/@project_name@-wtk-@version@.terra.jar,lib/@project_name@-tutorials-@version@.jar",
+    width:360,
+    height:480
+};
+var parameters = {application_class_name:"org.apache.pivot.tutorials.calendars.Calendars",
+    codebase_lookup:false,
+    java_arguments:"-Dsun.awt.noerasebackground=true -Dsun.awt.erasebackgroundonresize=true"
+};
+deployJava.writeAppletTag(attributes, parameters);
+</script>
+
+<p>The WTKX source is as follows:</p>
+
+<pre class="brush:xml">
+&lt;Window title="Calendars" maximized="true"
+    xmlns:wtkx="http://pivot.apache.org/wtkx"
+    xmlns="org.apache.pivot.wtk"&gt;
+    &lt;content&gt;
+        &lt;Border styles="{padding:8}"&gt;
+            &lt;content&gt;
+                &lt;Form styles="{rightAlignLabels:true}"&gt;
+                    &lt;sections&gt;
+                        &lt;Form.Section&gt;
+                            &lt;Border Form.label="Calendar" styles="{padding:0, color:10}"&gt;
+                                &lt;content&gt;
+                                    &lt;Calendar wtkx:id="calendar"/&gt;
+                                &lt;/content&gt;
+                            &lt;/Border&gt;
+                            &lt;CalendarButton wtkx:id="calendarButton" Form.label="Calendar button"/&gt;
+                        &lt;/Form.Section&gt;
+                        &lt;Form.Section&gt;
+                            &lt;Label wtkx:id="selectedDateLabel" Form.label="Selected date"/&gt;
+                        &lt;/Form.Section&gt;
+                    &lt;/sections&gt;
+                &lt;/Form&gt;
+            &lt;/content&gt;
+        &lt;/Border&gt;
+    &lt;/content&gt;
+&lt;/Window&gt;
+</pre>
+
+<p>The Java source is as follows. It simply registers event handlers that keep the selection state of the <tt>Calendar</tt> and <tt>CalendarButton</tt> in sync:</p>
+
+<pre class="brush:java">
+package org.apache.pivot.tutorials.calendars;
+
+import org.apache.pivot.collections.Map;
+import org.apache.pivot.util.CalendarDate;
+import org.apache.pivot.wtk.Application;
+import org.apache.pivot.wtk.Calendar;
+import org.apache.pivot.wtk.CalendarButton;
+import org.apache.pivot.wtk.CalendarButtonSelectionListener;
+import org.apache.pivot.wtk.CalendarSelectionListener;
+import org.apache.pivot.wtk.DesktopApplicationContext;
+import org.apache.pivot.wtk.Display;
+import org.apache.pivot.wtk.Label;
+import org.apache.pivot.wtk.Window;
+import org.apache.pivot.wtkx.WTKXSerializer;
+
+public class Calendars implements Application {
+    private Window window = null;
+    private Calendar calendar = null;
+    private CalendarButton calendarButton = null;
+    private Label selectedDateLabel = null;
+
+    private boolean updatingSelectedDate = false;
+
+    @Override
+    public void startup(Display display, Map&lt;String, String&gt; properties)
+        throws Exception {
+        WTKXSerializer wtkxSerializer = new WTKXSerializer();
+        window = (Window)wtkxSerializer.readObject(this, "calendars.wtkx");
+        calendar = (Calendar)wtkxSerializer.get("calendar");
+        calendarButton = (CalendarButton)wtkxSerializer.get("calendarButton");
+        selectedDateLabel = (Label)wtkxSerializer.get("selectedDateLabel");
+
+        calendar.getCalendarSelectionListeners().add(new CalendarSelectionListener() {
+            @Override
+            public void selectedDateChanged(Calendar calendar, CalendarDate previousSelectedDate) {
+                updateSelectedDate(calendar.getSelectedDate());
+            }
+        });
+
+        calendarButton.getCalendarButtonSelectionListeners().add(new CalendarButtonSelectionListener() {
+            @Override
+            public void selectedDateChanged(CalendarButton calendarButton, CalendarDate previousSelectedDate) {
+                updateSelectedDate(calendarButton.getSelectedDate());
+            }
+        });
+
+        window.open(display);
+    }
+
+    @Override
+    public boolean shutdown(boolean optional) {
+        if (window != null) {
+            window.close();
+        }
+
+        return false;
+    }
+
+    @Override
+    public void suspend() {
+    }
+
+    @Override
+    public void resume() {
+    }
+
+    private void updateSelectedDate(CalendarDate selectedDate) {
+        if (!updatingSelectedDate) {
+            updatingSelectedDate = true;
+
+            calendar.setSelectedDate(selectedDate);
+            calendarButton.setSelectedDate(selectedDate);
+            selectedDateLabel.setText(selectedDate.toString());
+
+            updatingSelectedDate = false;
+        }
+    }
+
+    public static void main(String[] args) {
+        DesktopApplicationContext.main(Calendars.class, args);
+    }
+}
+</pre>
+
diff --git a/tutorials/www/sample_application.template.html b/tutorials/www/sample_application.template.html
index ae40f95..3b7aaf2 100644
--- a/tutorials/www/sample_application.template.html
+++ b/tutorials/www/sample_application.template.html
@@ -32,2 +32,2 @@
-    width:720,
-    height:480
+    width:800,
+    height:600
diff --git a/tutorials/www/table_views.json.template.html b/tutorials/www/table_views.json.template.html
index e48cf2d..09a08d4 100644
--- a/tutorials/www/table_views.json.template.html
+++ b/tutorials/www/table_views.json.template.html
@@ -120,0 +121 @@
+</ul>
diff --git a/tutorials/www/text.template.html b/tutorials/www/text.template.html
index 021ea7d..0cffa3b 100644
--- a/tutorials/www/text.template.html
+++ b/tutorials/www/text.template.html
@@ -45,2 +45 @@
-    height:40,
-    style:"border:solid 1px #999999"
+    height:40
diff --git a/tutorials/www/windows.template.html b/tutorials/www/windows.template.html
index 1c87421..0c54993 100644
--- a/tutorials/www/windows.template.html
+++ b/tutorials/www/windows.template.html
@@ -45 +45 @@
-<p>The following is a description of the window types shown in the diagram:</p>
+<p>The following is a description of each window type:</p>
@@ -61,0 +62,266 @@
+<p>The following sample application demonstrates each of these window types. It creates three top-level frames, each of which contains buttons for launching several other window types:</p>
+
+<script>
+var attributes = {code:"org.apache.pivot.wtk.BrowserApplicationContext$HostApplet",
+    archive:"lib/@project_name@-core-@version@.jar,lib/@project_name@-wtk-@version@.jar,lib/@project_name@-wtk-@version@.terra.jar,lib/@project_name@-tutorials-@version@.jar",
+    width:800,
+    height:600
+};
+var parameters = {application_class_name:"org.apache.pivot.tutorials.windows.Windows",
+    codebase_lookup:false,
+    java_arguments:"-Dsun.awt.noerasebackground=true -Dsun.awt.erasebackgroundonresize=true"
+};
+deployJava.writeAppletTag(attributes, parameters);
+</script>
+
+<p>The content of each frame is defined in "frame.wtkx":</p>
+
+<pre class="brush:xml">
+&lt;Frame wtkx:id="frame" icon="@application_form.png"
+    preferredWidth="480" preferredHeight="360"
+    xmlns:wtkx="http://pivot.apache.org/wtkx"
+    xmlns:content="org.apache.pivot.wtk.content"
+    xmlns="org.apache.pivot.wtk"&gt;
+    &lt;wtkx:define&gt;
+        &lt;wtkx:include wtkx:id="dialog" src="dialog.wtkx"/&gt;
+        &lt;wtkx:include wtkx:id="sheet" src="sheet.wtkx"/&gt;
+    &lt;/wtkx:define&gt;
+
+    &lt;wtkx:script&gt;
+    var palette = null;
+    &lt;/wtkx:script&gt;
+
+    &lt;content&gt;
+        &lt;BoxPane orientation="vertical"&gt;
+            &lt;PushButton buttonData="Show Alert"&gt;
+                &lt;buttonPressListeners&gt;
+                    &lt;wtkx:script&gt;
+                    &lt;![CDATA[
+                    importPackage(org.apache.pivot.wtk);
+                    function buttonPressed(button) {
+                        Alert.alert("This is an Alert.", frame);
+                    }
+                    ]]&gt;
+                    &lt;/wtkx:script&gt;
+                &lt;/buttonPressListeners&gt;
+            &lt;/PushButton&gt;
+
+            &lt;PushButton buttonData="Show Prompt"&gt;
+                &lt;buttonPressListeners&gt;
+                    &lt;wtkx:script&gt;
+                    &lt;![CDATA[
+                    importPackage(org.apache.pivot.wtk);
+                    function buttonPressed(button) {
+                        Prompt.prompt("This is a Prompt.", frame);
+                    }
+                    ]]&gt;
+                    &lt;/wtkx:script&gt;
+                &lt;/buttonPressListeners&gt;
+            &lt;/PushButton&gt;
+
+            &lt;PushButton buttonData="Show Dialog"&gt;
+                &lt;buttonPressListeners&gt;
+                    &lt;wtkx:script&gt;
+                    &lt;![CDATA[
+                    importPackage(org.apache.pivot.wtk);
+                    function buttonPressed(button) {
+                        dialog.open(frame, null);
+                    }
+                    ]]&gt;
+                    &lt;/wtkx:script&gt;
+                &lt;/buttonPressListeners&gt;
+            &lt;/PushButton&gt;
+
+            &lt;PushButton buttonData="Show Sheet"&gt;
+                &lt;buttonPressListeners&gt;
+                    &lt;wtkx:script&gt;
+                    &lt;![CDATA[
+                    importPackage(org.apache.pivot.wtk);
+                    function buttonPressed(button) {
+                        sheet.open(frame, null);
+                    }
+                    ]]&gt;
+                    &lt;/wtkx:script&gt;
+                &lt;/buttonPressListeners&gt;
+            &lt;/PushButton&gt;
+
+            &lt;PushButton buttonData="Show Palette"&gt;
+                &lt;buttonPressListeners&gt;
+                    &lt;wtkx:script&gt;
+                    &lt;![CDATA[
+                    importPackage(org.apache.pivot.wtk);
+                    function buttonPressed(button) {
+                        if (palette == null) {
+                            palette = application.load("palette.wtkx");
+                            palette.setLocation(frame.getX() + frame.getWidth() + 20, frame.getY() + 20);
+                        }
+
+                        palette.open(frame);
+                    }
+                    ]]&gt;
+                    &lt;/wtkx:script&gt;
+                &lt;/buttonPressListeners&gt;
+            &lt;/PushButton&gt;
+        &lt;/BoxPane&gt;
+    &lt;/content&gt;
+&lt;/Frame&gt;
+</pre>
+<p class="caption">frame.wtkx</p>
+
+<p>This file includes several additional WTKX files that define the dialog, sheet, and palette windows opened by the main frame:</p>
+
+<pre class="brush:xml">
+&lt;Dialog wtkx:id="dialog" title="Dialog"
+    xmlns:wtkx="http://pivot.apache.org/wtkx"
+    xmlns="org.apache.pivot.wtk"&gt;
+    &lt;content&gt;
+        &lt;TablePane preferredWidth="320" preferredHeight="210"&gt;
+            &lt;columns&gt;
+                &lt;TablePane.Column width="1*"/&gt;
+            &lt;/columns&gt;
+            &lt;rows&gt;
+                &lt;TablePane.Row height="1*"&gt;
+                    &lt;Label text="This is a dialog."
+                        preferredWidth="320" preferredHeight="210"
+                        styles="{horizontalAlignment:'center', verticalAlignment:'center'}"/&gt;
+                &lt;/TablePane.Row&gt;
+                &lt;TablePane.Row height="-1"&gt;
+                    &lt;BoxPane styles="{horizontalAlignment:'right'}"&gt;
+                        &lt;PushButton buttonData="Close"
+                            ButtonPressListener.buttonPressed="dialog.close()"/&gt;
+                    &lt;/BoxPane&gt;
+                &lt;/TablePane.Row&gt;
+            &lt;/rows&gt;
+        &lt;/TablePane&gt;
+    &lt;/content&gt;
+&lt;/Dialog&gt;
+</pre>
+<p class="caption">dialog.wtkx</p>
+
+<pre class="brush:xml">
+&lt;Sheet wtkx:id="sheet" title="Sheet"
+    xmlns:wtkx="http://pivot.apache.org/wtkx"
+    xmlns="org.apache.pivot.wtk"&gt;
+    &lt;content&gt;
+        &lt;BoxPane styles="{verticalAlignment:'bottom'}"&gt;
+            &lt;TablePane&gt;
+                &lt;columns&gt;
+                    &lt;TablePane.Column width="1*"/&gt;
+                &lt;/columns&gt;
+                &lt;rows&gt;
+                    &lt;TablePane.Row height="1*"&gt;
+                        &lt;Label text="This is a sheet."
+                            preferredWidth="320" preferredHeight="210"
+                            styles="{horizontalAlignment:'center', verticalAlignment:'center'}"/&gt;
+                    &lt;/TablePane.Row&gt;
+                    &lt;TablePane.Row height="-1"&gt;
+                        &lt;BoxPane styles="{horizontalAlignment:'right'}"&gt;
+                            &lt;PushButton buttonData="Close"
+                                ButtonPressListener.buttonPressed="sheet.close()"/&gt;
+                        &lt;/BoxPane&gt;
+                    &lt;/TablePane.Row&gt;
+                &lt;/rows&gt;
+            &lt;/TablePane&gt;
+        &lt;/BoxPane&gt;
+    &lt;/content&gt;
+&lt;/Sheet&gt;
+</pre>
+<p class="caption">sheet.wtkx</p>
+
+<pre class="brush:xml">
+&lt;Palette title="Palette" preferredWidth="60" preferredHeight="120"
+    xmlns:wtkx="http://pivot.apache.org/wtkx"
+    xmlns="org.apache.pivot.wtk"&gt;
+    &lt;content&gt;
+        &lt;FlowPane styles="{padding:1}"&gt;
+            &lt;PushButton buttonData="1" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+            &lt;PushButton buttonData="2" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+            &lt;PushButton buttonData="3" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+            &lt;PushButton buttonData="4" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+            &lt;PushButton buttonData="5" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+            &lt;PushButton buttonData="6" styles="{toolbar:true, minimumAspectRatio:1, maximumAspectRatio:1}"/&gt;
+        &lt;/FlowPane&gt;
+    &lt;/content&gt;
+&lt;/Palette&gt;
+</pre>
+<p class="caption">palette.wtkx</p>
+
+<p>The application code simply instantiates three <tt>Frame</tt> objects and sets the component read from the WTKX as the frames' contents:</p>
+
+<pre class="brush:java">
+package org.apache.pivot.tutorials.windows;
+
+import java.io.IOException;
+
+import org.apache.pivot.collections.Map;
+import org.apache.pivot.serialization.SerializationException;
+import org.apache.pivot.wtk.Application;
+import org.apache.pivot.wtk.DesktopApplicationContext;
+import org.apache.pivot.wtk.Display;
+import org.apache.pivot.wtk.Frame;
+import org.apache.pivot.wtk.Window;
+import org.apache.pivot.wtkx.WTKXSerializer;
+
+public class Windows implements Application {
+    private Display display = null;
+
+    @Override
+    public void startup(Display display, Map&lt;String, String&gt; properties) throws Exception {
+        this.display = display;
+
+        int x = 0;
+        int y = 0;
+
+        for (int i = 0; i &lt; 3; i++) {
+            WTKXSerializer wtkxSerializer = new WTKXSerializer();
+            wtkxSerializer.put("application", this);
+
+            Frame frame;
+            try {
+                frame = (Frame)wtkxSerializer.readObject(Windows.this, "frame.wtkx");
+            } catch (SerializationException exception) {
+                throw new RuntimeException(exception);
+            } catch (IOException exception) {
+                throw new RuntimeException(exception);
+            }
+
+            frame.setTitle("Frame " + (i + 1));
+            frame.setLocation(x, y);
+            x += 20;
+            y += 20;
+
+            frame.open(display);
+        }
+    }
+
+    @Override
+    public boolean shutdown(boolean optional) {
+        for (int i = display.getLength() - 1; i &gt;= 0; i--) {
+            Window window = (Window)display.get(i);
+            window.close();
+        }
+
+        return false;
+    }
+
+    @Override
+    public void suspend() {
+    }
+
+    @Override
+    public void resume() {
+    }
+
+    public Window load(String fileName)
+        throws SerializationException, IOException {
+        WTKXSerializer wtkxSerializer = new WTKXSerializer();
+        return (Window)wtkxSerializer.readObject(this, fileName);
+    }
+
+    public static void main(String[] args) {
+        DesktopApplicationContext.main(Windows.class, args);
+    }
+}
+</pre>
+
+<p>Next: <a href="clipboard.html">The Clipboard</a></p>
diff --git a/wtk/src/org/apache/pivot/wtk/skin/terra/TerraPaletteSkin.java b/wtk/src/org/apache/pivot/wtk/skin/terra/TerraPaletteSkin.java
index 8b3e036..5bf46c3 100644
--- a/wtk/src/org/apache/pivot/wtk/skin/terra/TerraPaletteSkin.java
+++ b/wtk/src/org/apache/pivot/wtk/skin/terra/TerraPaletteSkin.java
@@ -190 +190 @@
-        titleFont = titleFont.deriveFont(Math.round(titleFont.getSize2D() * 0.8f), Font.BOLD);
+        titleFont = titleFont.deriveFont(Font.BOLD, Math.round(titleFont.getSize2D() * 0.8f));

