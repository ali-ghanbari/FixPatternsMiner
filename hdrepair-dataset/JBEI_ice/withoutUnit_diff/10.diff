diff --git a/src/main/java/org/jbei/ice/lib/entry/EntryController.java b/src/main/java/org/jbei/ice/lib/entry/EntryController.java
index f12349d..0f1b208 100755
--- a/src/main/java/org/jbei/ice/lib/entry/EntryController.java
+++ b/src/main/java/org/jbei/ice/lib/entry/EntryController.java
@@ -254 +254 @@
-        dao.update(entry);
+        entry = dao.update(entry);
diff --git a/src/main/webapp/scripts/controllers.js b/src/main/webapp/scripts/controllers.js
index c603288..b2acfff 100755
--- a/src/main/webapp/scripts/controllers.js
+++ b/src/main/webapp/scripts/controllers.js
@@ -105 +104,0 @@
-        console.log(data);
@@ -1415,0 +1415 @@
+        // todo : this is pretty much a copy of submitPart in CreateEntryController
@@ -1416,0 +1417,22 @@
+            var canSubmit = EntryService.validateFields($scope.activePart, $scope.selectedFields);
+            $scope.activePart.type = $scope.activePart.type.toUpperCase();
+
+
+            // validate contained parts, if any
+            if ($scope.activePart.linkedParts && $scope.activePart.linkedParts.length) {
+                for (var idx = 0; idx < $scope.activePart.linkedParts.length; idx += 1) {
+                    var canSubmitLinked = EntryService.validateFields($scope.activePart.linkedParts[idx], $scope.selectedFields);
+                    if (!canSubmitLinked) {
+                        // show icon in tab
+                        // todo
+                        console.log("linked entry at idx " + idx + " is not valid");
+                        canSubmit = canSubmitLinked;
+                    }
+                }
+            }
+
+            if (!canSubmit) {
+                $("body").animate({scrollTop:130}, "slow");
+                return;
+            }
+
@@ -1424,0 +1447,8 @@
+
+            for (var i = 0; i < $scope.activePart.linkedParts.length; i += 1) {
+                $scope.activePart.linkedParts[i].links = EntryService.toStringArray($scope.activePart.linkedParts[i].links);
+                $scope.activePart.linkedParts[i].selectionMarkers = EntryService.toStringArray($scope.activePart.linkedParts[i].selectionMarkers);
+            }
+
+            // convert the part to a form the server can work with
+            $scope.activePart = EntryService.getTypeData($scope.activePart);
@@ -2154 +2184 @@
-                $scope.entry = result;
+                $scope.entry = EntryService.convertToUIForm(result);
diff --git a/src/main/webapp/scripts/services.js b/src/main/webapp/scripts/services.js
index 7d3861c..5fbfac8 100755
--- a/src/main/webapp/scripts/services.js
+++ b/src/main/webapp/scripts/services.js
@@ -59 +59 @@
-            autoCompleteField:'ORIGIN_OF_REPLICATION'},
+            autoCompleteField:'ORIGIN_OF_REPLICATION', subSchema:'plasmidData'},
@@ -68,2 +68,2 @@
-        {label:"Sent To ABRC", schema:'sentToABRC', help:"Help Text", inputType:'bool'},
-        {label:"Plant Type", schema:'plantType', options:[
+        {label:"Sent To ABRC", schema:'sentToABRC', help:"Help Text", inputType:'bool', subSchema:'arabidopsisSeedData'},
+        {label:"Plant Type", schema:'plantType', subSchema:'arabidopsisSeedData', options:[
@@ -77 +77 @@
-        {label:"Generation", schema:'generation', options:[
+        {label:"Generation", schema:'generation', subSchema:'arabidopsisSeedData', options:[
@@ -92,3 +92,3 @@
-        {label:"Harvest Date", schema:'harvestDate', inputType:'date'},
-        {label:"Homozygosity", schema:'backbone', inputType:'medium'},
-        {label:"Ecotype", schema:'backbone', inputType:'medium'},
+        {label:"Harvest Date", schema:'harvestDate', subSchema:'arabidopsisSeedData', inputType:'date'},
+        {label:"Homozygosity", schema:'backbone', subSchema:'arabidopsisSeedData', inputType:'medium'},
+        {label:"Ecotype", schema:'backbone', subSchema:'arabidopsisSeedData', inputType:'medium'},
@@ -103,2 +103,2 @@
-        {label:"Genotype/Phenotype", schema:'genotypePhenotype', subSchema:'strainData', inputType:'long'},
-        {label:"Plasmids", schema:'plasmids', inputType:'autoComplete', autoCompleteField:'PLASMID_PART_NUMBER'}
+        {label:"Genotype/Phenotype", schema:'genotypePhenotype', inputType:'long', subSchema:'strainData'},
+        {label:"Plasmids", schema:'plasmids', inputType:'autoComplete', autoCompleteField:'PLASMID_PART_NUMBER', subSchema:'strainData'}
@@ -213,0 +214,14 @@
+        // inverse of the above. converts to form ui can work with
+        convertToUIForm:function (entry) {
+            var type = entry.type.toLowerCase();
+            var fields = getFieldsForType(type);
+
+            angular.forEach(fields, function (field) {
+                if (field.subSchema && entry[field.subSchema]) {
+                    entry[field.schema] = entry[field.subSchema][field.schema];
+                }
+            });
+
+            return entry;
+        },
+

