diff --git a/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/PropertyMediator.java b/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/PropertyMediator.java
index 4819016..02c3f97 100644
--- a/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/PropertyMediator.java
+++ b/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/PropertyMediator.java
@@ -355,0 +356 @@
+            matchedValue = ""; //if not matched ideally should return empty string
diff --git a/java/modules/core/src/test/java/org/apache/synapse/mediators/builtin/PropertyMediatorTest.java b/java/modules/core/src/test/java/org/apache/synapse/mediators/builtin/PropertyMediatorTest.java
index f4e8667..6cb7f2a 100644
--- a/java/modules/core/src/test/java/org/apache/synapse/mediators/builtin/PropertyMediatorTest.java
+++ b/java/modules/core/src/test/java/org/apache/synapse/mediators/builtin/PropertyMediatorTest.java
@@ -24 +23,0 @@
-import org.apache.synapse.SynapseException;
@@ -32,0 +32 @@
+import java.util.regex.Pattern;
@@ -145 +145 @@
-        // Test XML property retreival
+        // Test XML property retrieval
@@ -211,0 +212,23 @@
+    public void testPropertyRegexTest() throws Exception {
+        String outputProperty = "regexProperty";
+
+        PropertyMediator propMediator = new PropertyMediator();
+        propMediator.setName(outputProperty);
+        propMediator.setExpression(new SynapseXPath("get-property('testProperty')"));
+        propMediator.setPattern(Pattern.compile("([A-Z]+)([0-9]+)"));
+
+        MessageContext synCtx = TestUtils.getTestContext("<empty/>");
+        synCtx.setProperty("testProperty", "HELLOWORLD123");
+        propMediator.mediate(synCtx);
+        assertEquals("HELLOWORLD123", synCtx.getProperty(outputProperty));
+
+        propMediator.setGroup(1);
+        propMediator.mediate(synCtx);
+        assertEquals("HELLOWORLD", synCtx.getProperty(outputProperty));
+
+        //testing the fix for SYNAPSE-890
+        synCtx.setProperty("testProperty", "HELLOWORLD");
+        propMediator.mediate(synCtx);
+        assertEquals("", synCtx.getProperty(outputProperty));
+    }
+

