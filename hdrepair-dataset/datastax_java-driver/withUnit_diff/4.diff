diff --git a/driver-core/src/main/java/com/datastax/driver/core/Host.java b/driver-core/src/main/java/com/datastax/driver/core/Host.java
index 704b1f4..66f4350 100644
--- a/driver-core/src/main/java/com/datastax/driver/core/Host.java
+++ b/driver-core/src/main/java/com/datastax/driver/core/Host.java
@@ -56,2 +56,3 @@
-    // ClusterMetadata keeps one Host object per inet address, so don't use
-    // that constructor unless you know what you do (use ClusterMetadata.getHost typically).
+    // ClusterMetadata keeps one Host object per inet address and we rely on this (more precisely,
+    // we rely on the fact that we can use Object equality as a valid equality), so don't use
+    // that constructor but ClusterMetadata.getHost instead.
diff --git a/driver-core/src/test/java/com/datastax/driver/core/AbstractReplicationStrategyTest.java b/driver-core/src/test/java/com/datastax/driver/core/AbstractReplicationStrategyTest.java
index e6a5652..c3d012e 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/AbstractReplicationStrategyTest.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/AbstractReplicationStrategyTest.java
@@ -58,0 +59,13 @@
+
+        @Override
+        public boolean equals(Object o) {
+            if (!(o instanceof HostMock))
+                return false;
+
+            return address.equals(((HostMock)o).address);
+        }
+
+        @Override
+        public int hashCode() {
+            return address.hashCode();
+        }
diff --git a/driver-core/src/test/java/com/datastax/driver/core/LoadBalancingPolicyTest.java b/driver-core/src/test/java/com/datastax/driver/core/LoadBalancingPolicyTest.java
index fd8ad5f..d2ac6fe 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/LoadBalancingPolicyTest.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/LoadBalancingPolicyTest.java
@@ -18,2 +18 @@
-import com.datastax.driver.core.exceptions.NoHostAvailableException;
-import com.datastax.driver.core.exceptions.UnavailableException;
+import com.datastax.driver.core.exceptions.*;
@@ -365,0 +365,3 @@
+            } catch (ReadTimeoutException e) {
+                assertEquals(1, e.getRequiredAcknowledgements());
+                assertEquals(0, e.getReceivedAcknowledgements());
@@ -367,2 +369,2 @@
-                assertEquals("Not enough replica available for query at consistency ONE (1 required but only 0 alive)",
-                             e.getMessage());
+                assertEquals(1, e.getRequiredReplicas());
+                assertEquals(0, e.getAliveReplicas());

