diff --git a/idea/src/org/jetbrains/jet/plugin/formatter/JetFormattingModelBuilder.java b/idea/src/org/jetbrains/jet/plugin/formatter/JetFormattingModelBuilder.java
index 67d7d83..e27bfe9 100644
--- a/idea/src/org/jetbrains/jet/plugin/formatter/JetFormattingModelBuilder.java
+++ b/idea/src/org/jetbrains/jet/plugin/formatter/JetFormattingModelBuilder.java
@@ -76 +76 @@
-                .around(TokenSet.create(PLUS, MINUS)).spaceIf(jetCommonSettings.SPACE_AROUND_ADDITIVE_OPERATORS)
+                .aroundInside(TokenSet.create(PLUS, MINUS), BINARY_EXPRESSION).spaceIf(jetCommonSettings.SPACE_AROUND_ADDITIVE_OPERATORS)
diff --git a/idea/testData/formatter/AddSpacesAroundOperations.kt b/idea/testData/formatter/AddSpacesAroundOperations.kt
deleted file mode 100644
index df1e093..0000000
--- a/idea/testData/formatter/AddSpacesAroundOperations.kt
+++ /dev/null
@@ -1,39 +0,0 @@
-class Some {
-    fun some() {
-        var int : Int=0
-
-        int=12
-        int+=12
-        int-=12
-        int*=12
-        int/=12
-        int%=12
-
-        true&&true
-        true||false
-
-        12===3
-        12!==3
-        12==3
-        12!=3
-
-        12<=3
-        12>=3
-        12<3
-        12>3
-
-        12+3-12
-
-        12%3*12/3
-
-        !true
-        int++
-        ++int
-        int--
-        --int
-        +12
-        -12
-
-        1..2
-    }
-}
\ No newline at end of file
diff --git a/idea/testData/formatter/AddSpacesAroundOperations_after.kt b/idea/testData/formatter/AddSpacesAroundOperations_after.kt
deleted file mode 100644
index 44663a4..0000000
--- a/idea/testData/formatter/AddSpacesAroundOperations_after.kt
+++ /dev/null
@@ -1,39 +0,0 @@
-class Some {
-    fun some() {
-        var int: Int = 0
-
-        int = 12
-        int += 12
-        int -= 12
-        int *= 12
-        int /= 12
-        int %= 12
-
-        true && true
-        true || false
-
-        12 === 3
-        12 !== 3
-        12 == 3
-        12 != 3
-
-        12 <= 3
-        12 >= 3
-        12 < 3
-        12 > 3
-
-        12 + 3 - 12
-
-        12 % 3 * 12 / 3
-
-        ! true
-        int ++
-        ++ int
-        int --
-        -- int
-        + 12
-        - 12
-
-        1 .. 2
-    }
-}
\ No newline at end of file
diff --git a/idea/testData/formatter/RemoveSpacesAroundOperations_after.kt b/idea/testData/formatter/RemoveSpacesAroundOperations_after.kt
deleted file mode 100644
index 10c5e98..0000000
--- a/idea/testData/formatter/RemoveSpacesAroundOperations_after.kt
+++ /dev/null
@@ -1,39 +0,0 @@
-class Some {
-    fun some() {
-        var int: Int=0
-
-        int=12
-        int+=12
-        int-=12
-        int*=12
-        int/=12
-        int%=12
-
-        true&&true
-        true||false
-
-        12===3
-        12!==3
-        12==3
-        12!=3
-
-        12<=3
-        12>=3
-        12<3
-        12>3
-
-        12+3-12
-
-        12%3*12/3
-
-        !true
-        int++
-        ++int
-        int--
-        --int
-        +12
-        -12
-
-        1..2
-    }
-}
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundOperations.kt b/idea/testData/formatter/SpacesAroundOperations.kt
new file mode 100644
index 0000000..4a2f66d
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundOperations.kt
@@ -0,0 +1,39 @@
+class Some {
+    fun some() {
+        var int : Int=0
+
+        int=12
+        int+=12
+        int-=12
+        int*=12
+        int/=12
+        int%=12
+
+        true&&true
+        true||false
+
+        12===3
+        12!==3
+        12==3
+        12!=3
+
+        12<=3
+        12>=3
+        12<3
+        12>3
+
+        12+3-12
+
+        12%3*12/3
+
+        1..2
+    }
+}
+
+// SET_TRUE: SPACE_AROUND_ASSIGNMENT_OPERATORS
+// SET_TRUE: SPACE_AROUND_LOGICAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_EQUALITY_OPERATORS
+// SET_TRUE: SPACE_AROUND_RELATIONAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_ADDITIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_MULTIPLICATIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_RANGE
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundOperations_after.kt b/idea/testData/formatter/SpacesAroundOperations_after.kt
new file mode 100644
index 0000000..ad75a93
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundOperations_after.kt
@@ -0,0 +1,39 @@
+class Some {
+    fun some() {
+        var int: Int = 0
+
+        int = 12
+        int += 12
+        int -= 12
+        int *= 12
+        int /= 12
+        int %= 12
+
+        true && true
+        true || false
+
+        12 === 3
+        12 !== 3
+        12 == 3
+        12 != 3
+
+        12 <= 3
+        12 >= 3
+        12 < 3
+        12 > 3
+
+        12 + 3 - 12
+
+        12 % 3 * 12 / 3
+
+        1 .. 2
+    }
+}
+
+// SET_TRUE: SPACE_AROUND_ASSIGNMENT_OPERATORS
+// SET_TRUE: SPACE_AROUND_LOGICAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_EQUALITY_OPERATORS
+// SET_TRUE: SPACE_AROUND_RELATIONAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_ADDITIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_MULTIPLICATIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_RANGE
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundOperations_after_inv.kt b/idea/testData/formatter/SpacesAroundOperations_after_inv.kt
new file mode 100644
index 0000000..57936cd
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundOperations_after_inv.kt
@@ -0,0 +1,39 @@
+class Some {
+    fun some() {
+        var int: Int=0
+
+        int=12
+        int+=12
+        int-=12
+        int*=12
+        int/=12
+        int%=12
+
+        true&&true
+        true||false
+
+        12===3
+        12!==3
+        12==3
+        12!=3
+
+        12<=3
+        12>=3
+        12<3
+        12>3
+
+        12+3-12
+
+        12%3*12/3
+
+        1..2
+    }
+}
+
+// SET_TRUE: SPACE_AROUND_ASSIGNMENT_OPERATORS
+// SET_TRUE: SPACE_AROUND_LOGICAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_EQUALITY_OPERATORS
+// SET_TRUE: SPACE_AROUND_RELATIONAL_OPERATORS
+// SET_TRUE: SPACE_AROUND_ADDITIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_MULTIPLICATIVE_OPERATORS
+// SET_TRUE: SPACE_AROUND_RANGE
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundUnaryOperations.kt b/idea/testData/formatter/SpacesAroundUnaryOperations.kt
new file mode 100644
index 0000000..6b37c0d
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundUnaryOperations.kt
@@ -0,0 +1,20 @@
+fun test() {
+    ! true
+    !true
+    int ++
+    int++
+    ++ int
+    ++int
+    int --
+    int--
+    -- int
+    --int
+    + 12
+    +12
+    - 12
+    -12
+    test!!
+    test !!
+}
+
+// SET_TRUE: SPACE_AROUND_UNARY_OPERATOR
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundUnaryOperations_after.kt b/idea/testData/formatter/SpacesAroundUnaryOperations_after.kt
new file mode 100644
index 0000000..3f2ff86
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundUnaryOperations_after.kt
@@ -0,0 +1,20 @@
+fun test() {
+    ! true
+    ! true
+    int ++
+    int ++
+    ++ int
+    ++ int
+    int --
+    int --
+    -- int
+    -- int
+    + 12
+    + 12
+    - 12
+    - 12
+    test !!
+    test !!
+}
+
+// SET_TRUE: SPACE_AROUND_UNARY_OPERATOR
\ No newline at end of file
diff --git a/idea/testData/formatter/SpacesAroundUnaryOperations_after_inv.kt b/idea/testData/formatter/SpacesAroundUnaryOperations_after_inv.kt
new file mode 100644
index 0000000..2888c58
--- /dev/null
+++ b/idea/testData/formatter/SpacesAroundUnaryOperations_after_inv.kt
@@ -0,0 +1,20 @@
+fun test() {
+    !true
+    !true
+    int++
+    int++
+    ++int
+    ++int
+    int--
+    int--
+    --int
+    --int
+    +12
+    +12
+    -12
+    -12
+    test!!
+    test!!
+}
+
+// SET_TRUE: SPACE_AROUND_UNARY_OPERATOR
\ No newline at end of file
diff --git a/idea/tests/org/jetbrains/jet/formatter/JetFormatterTest.java b/idea/tests/org/jetbrains/jet/formatter/JetFormatterTest.java
index d5712a3..5674b8d 100644
--- a/idea/tests/org/jetbrains/jet/formatter/JetFormatterTest.java
+++ b/idea/tests/org/jetbrains/jet/formatter/JetFormatterTest.java
@@ -27,14 +26,0 @@
-    public void testAddSpacesAroundOperations() throws Exception {
-        getSettings().SPACE_AROUND_ASSIGNMENT_OPERATORS = true;
-        getSettings().SPACE_AROUND_LOGICAL_OPERATORS = true;
-        getSettings().SPACE_AROUND_EQUALITY_OPERATORS = true;
-        getSettings().SPACE_AROUND_RELATIONAL_OPERATORS = true;
-        getSettings().SPACE_AROUND_ADDITIVE_OPERATORS = true;
-        getSettings().SPACE_AROUND_MULTIPLICATIVE_OPERATORS = true;
-        getSettings().SPACE_AROUND_UNARY_OPERATOR = true;
-        getJetSettings().SPACE_AROUND_RANGE = true;
-
-        doTest();
-
-        getSettings().clearCodeStyleSettings();
-    }
@@ -82,15 +67,0 @@
-    public void testRemoveSpacesAroundOperations() throws Exception {
-        getSettings().SPACE_AROUND_ASSIGNMENT_OPERATORS = false;
-        getSettings().SPACE_AROUND_LOGICAL_OPERATORS = false;
-        getSettings().SPACE_AROUND_EQUALITY_OPERATORS = false;
-        getSettings().SPACE_AROUND_RELATIONAL_OPERATORS = false;
-        getSettings().SPACE_AROUND_ADDITIVE_OPERATORS = false;
-        getSettings().SPACE_AROUND_MULTIPLICATIVE_OPERATORS = false;
-        getSettings().SPACE_AROUND_UNARY_OPERATOR = false;
-        getJetSettings().SPACE_AROUND_RANGE = false;
-
-        doTest();
-
-        getSettings().clearCodeStyleSettings();
-    }
-
@@ -104,0 +76,8 @@
+    public void testSpacesAroundOperations() throws Exception {
+        doTestWithInvert();
+    }
+
+    public void testSpacesAroundUnaryOperations() throws Exception {
+        doTestWithInvert();
+    }
+

