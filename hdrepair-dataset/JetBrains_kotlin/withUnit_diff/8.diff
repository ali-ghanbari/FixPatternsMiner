diff --git a/js/js.tests/test/org/jetbrains/k2js/test/semantics/AnnotationTest.java b/js/js.tests/test/org/jetbrains/k2js/test/semantics/AnnotationTest.java
new file mode 100644
index 0000000..9e6cf67
--- /dev/null
+++ b/js/js.tests/test/org/jetbrains/k2js/test/semantics/AnnotationTest.java
@@ -0,0 +1,29 @@
+/*
+ * Copyright 2010-2014 JetBrains s.r.o.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.jetbrains.k2js.test.semantics;
+
+import org.jetbrains.k2js.test.SingleFileTranslationTest;
+
+public class AnnotationTest extends SingleFileTranslationTest {
+    public AnnotationTest() {
+        super("annotation/");
+    }
+
+    public void testAnnotationClass() throws Exception {
+        checkFooBoxIsOk();
+    }
+}
diff --git a/js/js.translator/src/org/jetbrains/k2js/translate/context/Namer.java b/js/js.translator/src/org/jetbrains/k2js/translate/context/Namer.java
index cada21f..c201449 100644
--- a/js/js.translator/src/org/jetbrains/k2js/translate/context/Namer.java
+++ b/js/js.translator/src/org/jetbrains/k2js/translate/context/Namer.java
@@ -342 +341,0 @@
-                throw new IllegalStateException("Can't create annotation class instance: " + descriptor);
diff --git a/js/js.translator/testData/annotation/cases/annotationClass.kt b/js/js.translator/testData/annotation/cases/annotationClass.kt
new file mode 100644
index 0000000..83e9311
--- /dev/null
+++ b/js/js.translator/testData/annotation/cases/annotationClass.kt
@@ -0,0 +1,9 @@
+package foo
+
+annotation class bar
+
+public annotation class Baz(val a: String)
+
+fun box(): String {
+    return "OK"
+}

