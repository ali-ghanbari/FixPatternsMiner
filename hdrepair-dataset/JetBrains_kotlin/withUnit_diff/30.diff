diff --git a/compiler/frontend/src/org/jetbrains/jet/lang/psi/JetClass.java b/compiler/frontend/src/org/jetbrains/jet/lang/psi/JetClass.java
index 4b3b548..764e045 100644
--- a/compiler/frontend/src/org/jetbrains/jet/lang/psi/JetClass.java
+++ b/compiler/frontend/src/org/jetbrains/jet/lang/psi/JetClass.java
@@ -181 +181 @@
-        return true;
+        return false;
diff --git a/idea/testData/completion/handlers/NonStandardArray.kt b/idea/testData/completion/handlers/NonStandardArray.kt
new file mode 100644
index 0000000..e430663
--- /dev/null
+++ b/idea/testData/completion/handlers/NonStandardArray.kt
@@ -0,0 +1 @@
+val x : Arra<caret>
\ No newline at end of file
diff --git a/idea/testData/completion/handlers/NonStandardArray.kt.after b/idea/testData/completion/handlers/NonStandardArray.kt.after
new file mode 100644
index 0000000..4b09502
--- /dev/null
+++ b/idea/testData/completion/handlers/NonStandardArray.kt.after
@@ -0,0 +1 @@
+val x : java.lang.reflect.Array
\ No newline at end of file
diff --git a/idea/tests/org/jetbrains/jet/completion/handlers/CompletionHandlerTest.java b/idea/tests/org/jetbrains/jet/completion/handlers/CompletionHandlerTest.java
index 314a211..7cd9c7d 100644
--- a/idea/tests/org/jetbrains/jet/completion/handlers/CompletionHandlerTest.java
+++ b/idea/tests/org/jetbrains/jet/completion/handlers/CompletionHandlerTest.java
@@ -19,0 +20 @@
+import com.intellij.codeInsight.completion.JavaLookupElementBuilder;
@@ -20,0 +22 @@
+import com.intellij.codeInsight.lookup.LookupElement;
@@ -22,0 +25,3 @@
+import com.intellij.psi.JavaPsiFacade;
+import com.intellij.psi.PsiClass;
+import com.intellij.psi.search.GlobalSearchScope;
@@ -34 +39,8 @@
-        doTest(CompletionType.CLASS_NAME, 1, "SortedSet");
+        doTest(CompletionType.CLASS_NAME, 1, LookupElementBuilder.create("SortedSet"));
+    }
+
+    public void testNonStandardArray() {
+        PsiClass reflectArrayClass = JavaPsiFacade.getInstance(getProject()).findClass(
+                "java.lang.reflect.Array", GlobalSearchScope.allScope(getProject()));
+        assert reflectArrayClass != null;
+        doTest(CompletionType.CLASS_NAME, 1, JavaLookupElementBuilder.forClass(reflectArrayClass));
@@ -71 +83 @@
-    public void doTest(CompletionType type, int time, @Nullable String completeItem) {
+    public void doTest(CompletionType type, int time, @Nullable LookupElement completeItem) {
@@ -79 +91 @@
-                selectItem(LookupElementBuilder.create(completeItem), '\t');
+                selectItem(completeItem, '\t');

