diff --git a/idea/src/org/jetbrains/jet/plugin/quickfix/QuickFixes.java b/idea/src/org/jetbrains/jet/plugin/quickfix/QuickFixes.java
index 868ad7e..f177573 100644
--- a/idea/src/org/jetbrains/jet/plugin/quickfix/QuickFixes.java
+++ b/idea/src/org/jetbrains/jet/plugin/quickfix/QuickFixes.java
@@ -205,0 +206 @@
+        factories.put(PROJECTION_ON_NON_CLASS_TYPE_ARGUMENT, RemoveModifierFix.createRemoveProjectionFactory(false));
diff --git a/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument1.kt b/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument1.kt
new file mode 100644
index 0000000..9c334df
--- /dev/null
+++ b/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument1.kt
@@ -0,0 +1,6 @@
+// "Remove 'out' modifier" "true"
+fun foo<T>(x : T) {}
+
+fun bar() {
+    foo<Int>(44)
+}
diff --git a/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument2.kt b/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument2.kt
new file mode 100644
index 0000000..82c02ba
--- /dev/null
+++ b/idea/testData/quickfix/typeProjection/afterProjectionOnNonClassTypeArgument2.kt
@@ -0,0 +1,6 @@
+// "Remove 'in' modifier" "true"
+class A<T> {}
+
+class B {
+    var foo = A<<caret>Int>()
+}
diff --git a/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument1.kt b/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument1.kt
new file mode 100644
index 0000000..8f45686
--- /dev/null
+++ b/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument1.kt
@@ -0,0 +1,6 @@
+// "Remove 'out' modifier" "true"
+fun foo<T>(x : T) {}
+
+fun bar() {
+    foo<<caret>out Int>(44)
+}
diff --git a/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument2.kt b/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument2.kt
new file mode 100644
index 0000000..92f3318
--- /dev/null
+++ b/idea/testData/quickfix/typeProjection/beforeProjectionOnNonClassTypeArgument2.kt
@@ -0,0 +1,6 @@
+// "Remove 'in' modifier" "true"
+class A<T> {}
+
+class B {
+    var foo = A<<caret>in Int>()
+}

