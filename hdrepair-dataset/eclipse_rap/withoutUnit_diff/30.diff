diff --git a/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/ComboUtil.js b/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/ComboUtil.js
index 8cdbd68..7140cfc 100644
--- a/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/ComboUtil.js
+++ b/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/ComboUtil.js
@@ -28,0 +29 @@
+      org.eclipse.swt.ComboUtil.hijackAutoCompletition( combo );
@@ -41,0 +43,60 @@
+    // workaround for qx bug 555 (ComboBox prevents input when list is visible)
+    // http://bugzilla.qooxdoo.org/show_bug.cgi?id=555
+    hijackAutoCompletition : function( combo ) {
+      combo.removeEventListener("keyinput", combo._onkeyinput);
+      combo._onkeyinput = function(e) {};
+      combo.addEventListener("keyinput", combo._onkeyinput);
+      
+      // TODO: need to prevent clearing the input field when
+      // closing list with Escape key
+    },
+    
+    /**
+     * This function gets assigned to the 'keyup' event of a text widget if 
+     * there was a server-side ModifyListener registered.
+     */
+    modifyTextAction : function( evt ) {
+      var combo = evt.getTarget();
+      if( !( combo instanceof qx.ui.form.ComboBox ) ) {
+      	// this will be called for the combo *and* the inner textfield
+      	// just use the events of the combo
+      	return;
+      }
+      if(    !org_eclipse_rap_rwt_EventUtil_suspend 
+          && !org.eclipse.swt.TextUtil._isModified( combo ) 
+          && org.eclipse.swt.TextUtil._isModifyingKey( evt.getKeyIdentifier() ) ) 
+      {
+        var req = org.eclipse.swt.Request.getInstance();
+        // Register 'send'-listener that adds a request param with current text
+        if( !org.eclipse.swt.TextUtil._isModified( combo ) ) {
+          req.addEventListener( "send", org.eclipse.swt.ComboUtil._onSend, combo );
+          org.eclipse.swt.TextUtil._setModified( combo, true );
+        }
+        // add modifyText-event with sender-id to request parameters
+        var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
+        var id = widgetManager.findIdByWidget( combo );
+        req.addEvent( "org.eclipse.swt.events.modifyText", id );
+        // register listener that is notified when a request is sent
+        qx.client.Timer.once( org.eclipse.swt.TextUtil._delayedModifyText, 
+                              combo, 
+                              500 );
+      }
+      org.eclipse.swt.TextUtil.updateSelection( combo.getField() );
+    },
+    
+    _onSend : function( evt ) {
+      // NOTE: 'this' references the combo widget
+      var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
+      var id = widgetManager.findIdByWidget( this );
+      var req = org.eclipse.swt.Request.getInstance();
+      req.addParameter( id + ".text", this.getField().getComputedValue() );
+      // remove the _onSend listener and change the text widget state to 'unmodified'
+      req.removeEventListener( "send", org.eclipse.swt.ComboUtil._onSend, this );
+      org.eclipse.swt.TextUtil._setModified( this, false );
+      // Update the value property (which is qooxdoo-wise only updated on
+      // focus-lost) to be in sync with server-side
+      if( this.getFocused() ) {
+        this.setValue( this.getField().getComputedValue() );
+      }
+    },
+    
diff --git a/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/TextUtil.js b/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/TextUtil.js
index c633e82..4babae8 100644
--- a/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/TextUtil.js
+++ b/bundles/org.eclipse.rap.rwt/js/org/eclipse/swt/TextUtil.js
@@ -71 +71,2 @@
-        var id = org.eclipse.swt.TextUtil.getIdForWidget( text );
+        var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
+        var id = widgetManager.findIdByWidget(text);
@@ -89 +90,2 @@
-        var id = org.eclipse.swt.TextUtil.getIdForWidget( evt.getTarget() );
+        var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
+        var id = widgetManager.findIdByWidget( evt.getTarget() );
@@ -98 +100,2 @@
-      var id = org.eclipse.swt.TextUtil.getIdForWidget( this );
+      var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
+      var id = widgetManager.findIdByWidget( this );
@@ -117,10 +119,0 @@
-    },
-    
-    getIdForWidget : function( widget ) {
-        var widgetManager = org.eclipse.swt.WidgetManager.getInstance();
-        if( widget.getParent() instanceof qx.ui.form.ComboBox ) {
-          id = widgetManager.findIdByWidget( widget.getParent() );
-        } else {
-          id = widgetManager.findIdByWidget( widget );
-        }
-        return id;
@@ -202,2 +195 @@
-      if( text.classname != "qx.ui.form.TextArea" &&
-        !( text.getParent() instanceof qx.ui.form.ComboBox ) ) {
+      if( text.classname != "qx.ui.form.TextArea" ) {
diff --git a/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/internal/widgets/combokit/ComboLCA.java b/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/internal/widgets/combokit/ComboLCA.java
index 2e295de..094f619 100644
--- a/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/internal/widgets/combokit/ComboLCA.java
+++ b/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/internal/widgets/combokit/ComboLCA.java
@@ -60 +60 @@
-                        "org.eclipse.swt.TextUtil.modifyText",
+                        "org.eclipse.swt.ComboUtil.modifyText",

