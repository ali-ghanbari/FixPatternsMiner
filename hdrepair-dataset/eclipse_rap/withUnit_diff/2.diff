diff --git a/bundles/org.eclipse.rap.rwt/js/rwt/widgets/base/BasicText.js b/bundles/org.eclipse.rap.rwt/js/rwt/widgets/base/BasicText.js
index 83cfe71..9d49581 100644
--- a/bundles/org.eclipse.rap.rwt/js/rwt/widgets/base/BasicText.js
+++ b/bundles/org.eclipse.rap.rwt/js/rwt/widgets/base/BasicText.js
@@ -139,0 +140 @@
+        this._inputElement.style.position = "absolute";
@@ -289,8 +289,0 @@
-      // Emulate IE hard-coded margin
-      // Mozilla by default emulates this IE handling, but in a wrong
-      // way. IE adds the additional margin to the CSS margin where
-      // Mozilla replaces it. But this make it possible for the user
-      // to overwrite the margin, which is not possible in IE.
-      // See also: https://bugzilla.mozilla.org/show_bug.cgi?id=73817
-      // NOTE [tb] : Non-IE browser also shift text 1px to the right, correcting with margin:
-      this._inputElement.style.margin = "1px 0 1px -1px";
@@ -321,2 +314 @@
-        // Reduce height by 2 pixels (the manual or IE margin)
-        this._inputElement.style.height = Math.max( 0, this.getInnerHeight() - 2 ) + "px";
+        this._inputElement.style.height = this.getInnerHeight() + "px";
@@ -471 +463 @@
-          var top = ( innerHeight - inputElementHeight ) / 2 - 1;
+          var top = ( innerHeight - inputElementHeight ) / 2;
@@ -475,5 +467 @@
-          top = Math.floor( top );
-          // [if] Set padding instead of style.position of the _inputElement.
-          // style.position leads to problems with DOM events in FF 3.0.x
-          // see bug 292487 and bug 284356
-          this.setStyleProperty( "paddingTop", top + "px" );
+          this._inputElement.style.top = Math.floor( top ) + "px";
diff --git a/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/widgets/Text.java b/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/widgets/Text.java
index 6eb0d8c..2dec94c 100644
--- a/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/widgets/Text.java
+++ b/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/widgets/Text.java
@@ -840,5 +839,0 @@
-    // TODO [rst] Workaround for two missing pixels (Ã–, p are cut off), revise
-    // TODO [if] Move to fragment. These two pixels are hard-coded in qooxdoo
-    // TextField.js to emulate IE hard-coded margin.
-    // See also: https://bugzilla.mozilla.org/show_bug.cgi?id=73817
-    height += 2;
diff --git a/tests/org.eclipse.rap.rwt.jstest/js/org/eclipse/rwt/test/tests/TextTest.js b/tests/org.eclipse.rap.rwt.jstest/js/org/eclipse/rwt/test/tests/TextTest.js
index 5b2d659..be5883e 100644
--- a/tests/org.eclipse.rap.rwt.jstest/js/org/eclipse/rwt/test/tests/TextTest.js
+++ b/tests/org.eclipse.rap.rwt.jstest/js/org/eclipse/rwt/test/tests/TextTest.js
@@ -1416,3 +1416,3 @@
-      var textHeight= text.getInputElement().offsetHeight;
-      var expected = Math.floor( 100 / 2 - textHeight / 2 - 1 );
-      assertEquals( expected, parseInt( text.getElement().style.paddingTop, 10 ) );
+      var textHeight = text.getInputElement().offsetHeight;
+      var expected = Math.floor( 100 / 2 - textHeight / 2 );
+      assertEquals( expected, parseInt( text.getInputElement().style.top, 10 ) );
diff --git a/tests/org.eclipse.rap.rwt.test/src/org/eclipse/swt/widgets/Text_Test.java b/tests/org.eclipse.rap.rwt.test/src/org/eclipse/swt/widgets/Text_Test.java
index 283d783..3922264 100644
--- a/tests/org.eclipse.rap.rwt.test/src/org/eclipse/swt/widgets/Text_Test.java
+++ b/tests/org.eclipse.rap.rwt.test/src/org/eclipse/swt/widgets/Text_Test.java
@@ -2 +2 @@
- * Copyright (c) 2007, 2014 Innoopract Informationssysteme GmbH and others.
+ * Copyright (c) 2007, 2015 Innoopract Informationssysteme GmbH and others.
@@ -370 +370 @@
-    assertEquals( new Point( 85, 26 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 85, 24 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -376 +376 @@
-    assertEquals( new Point( 189, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 189, 26 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -382 +382 @@
-    assertEquals( new Point( 337, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 337, 26 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -389 +389 @@
-    assertEquals( new Point( 337, 30 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 337, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -396 +396 @@
-    assertEquals( new Point( 337, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 337, 26 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -404 +404 @@
-    assertEquals( new Point( 337, 30 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 337, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -411 +411 @@
-    assertEquals( new Point( 189, 47 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 189, 45 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -418 +418 @@
-    assertEquals( new Point( 71, 152 ), text.computeSize( 50, SWT.DEFAULT ) );
+    assertEquals( new Point( 71, 150 ), text.computeSize( 50, SWT.DEFAULT ) );
@@ -425 +425 @@
-    assertEquals( new Point( 73, 154 ), text.computeSize( 50, SWT.DEFAULT ) );
+    assertEquals( new Point( 73, 152 ), text.computeSize( 50, SWT.DEFAULT ) );
@@ -431 +431 @@
-    assertEquals(  new Point( 123, 114 ), text.computeSize( 100, 100 ) );
+    assertEquals(  new Point( 123, 112 ), text.computeSize( 100, 100 ) );
@@ -438 +438 @@
-    assertEquals( new Point( 191, 30 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 191, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -445 +445 @@
-    assertEquals( new Point( 210, 30 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 210, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
@@ -452 +452 @@
-    assertEquals( new Point( 229, 30 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );
+    assertEquals( new Point( 229, 28 ), text.computeSize( SWT.DEFAULT, SWT.DEFAULT ) );

