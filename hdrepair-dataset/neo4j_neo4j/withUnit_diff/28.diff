diff --git a/community/embedded-examples/src/test/java/org/neo4j/examples/GetOrCreateTest.java b/community/embedded-examples/src/test/java/org/neo4j/examples/GetOrCreateTest.java
index 471ed4f..0413dca 100644
--- a/community/embedded-examples/src/test/java/org/neo4j/examples/GetOrCreateTest.java
+++ b/community/embedded-examples/src/test/java/org/neo4j/examples/GetOrCreateTest.java
@@ -27,0 +28 @@
+import java.util.concurrent.atomic.AtomicReference;
@@ -71 +71,0 @@
-
@@ -92,0 +93 @@
+            final AtomicReference<RuntimeException> failure = new AtomicReference<RuntimeException>();
@@ -100,2 +101 @@
-                        List<Node> subresult = new ArrayList<Node>();
-                        for ( int j = 0; j < NUM_USERS; j++ )
+                        try
@@ -103 +103,6 @@
-                            subresult.add( impl.getOrCreateUser( getUsername( j ), graphdb(), lockNode ) );
+                            List<Node> subresult = new ArrayList<Node>();
+                            for ( int j = 0; j < NUM_USERS; j++ )
+                            {
+                                subresult.add( impl.getOrCreateUser( getUsername( j ), graphdb(), lockNode ) );
+                            }
+                            results.add( subresult );
@@ -105 +110,5 @@
-                        results.add( subresult );
+                        catch ( RuntimeException e )
+                        {
+                            failure.compareAndSet( null, e );
+                            throw e;
+                        }
@@ -123,0 +133,4 @@
+            
+            if ( failure.get() != null )
+                throw failure.get();
+            
diff --git a/community/server/src/main/java/org/neo4j/server/rest/repr/formats/JsonFormat.java b/community/server/src/main/java/org/neo4j/server/rest/repr/formats/JsonFormat.java
index 0d50714..0f3e60a 100644
--- a/community/server/src/main/java/org/neo4j/server/rest/repr/formats/JsonFormat.java
+++ b/community/server/src/main/java/org/neo4j/server/rest/repr/formats/JsonFormat.java
@@ -26 +25,0 @@
-import java.util.HashMap;

