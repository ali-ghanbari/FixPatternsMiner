diff --git a/vraptor-core/src/main/java/br/com/caelum/vraptor/http/route/RouteBuilder.java b/vraptor-core/src/main/java/br/com/caelum/vraptor/http/route/RouteBuilder.java
index 1ff26cc..2e7eb66 100644
--- a/vraptor-core/src/main/java/br/com/caelum/vraptor/http/route/RouteBuilder.java
+++ b/vraptor-core/src/main/java/br/com/caelum/vraptor/http/route/RouteBuilder.java
@@ -191 +191 @@
-		String closeBracesUntilEnd = "\\}[^\\{]*$";
+		String closeBracesUntilEnd = "\\}[^\\{\\}]*$";
diff --git a/vraptor-core/src/test/java/br/com/caelum/vraptor/http/route/RouteBuilderTest.java b/vraptor-core/src/test/java/br/com/caelum/vraptor/http/route/RouteBuilderTest.java
index 5bfb5d7..13d53f7 100644
--- a/vraptor-core/src/test/java/br/com/caelum/vraptor/http/route/RouteBuilderTest.java
+++ b/vraptor-core/src/test/java/br/com/caelum/vraptor/http/route/RouteBuilderTest.java
@@ -54,0 +55 @@
+
@@ -59 +60 @@
-		when(provider.parameterNamesFor(any(Method.class))).thenReturn(new String[] { "abc", "def", "ghi"});
+		when(provider.parameterNamesFor(any(Method.class))).thenReturn(new String[] { "abc", "def", "ghi" });
@@ -61 +62,2 @@
-		method = new DefaultResourceMethod(new DefaultResourceClass(MyResource.class), MyResource.class.getMethod("method", String.class, Integer.class, BigDecimal.class));
+		method = new DefaultResourceMethod(new DefaultResourceClass(MyResource.class), MyResource.class.getMethod(
+				"method", String.class, Integer.class, BigDecimal.class));
@@ -81,0 +84 @@
+
@@ -83 +86 @@
-	public void usePatternMatchinForRegexParameters() throws Exception {
+	public void usePatternMatchingForRegexParameters() throws Exception {
@@ -90,0 +94 @@
+
@@ -91,0 +96,26 @@
+
+	@Test
+	public void usingRegexesWithCurlyBraces() throws Exception {
+		builder = new RouteBuilder(proxifier, typeFinder, "/abc/{abc:[0-9A-Z]{5}}");
+
+		builder.is(MyResource.class, method.getMethod());
+		Route route = builder.build();
+
+		assertFalse("invalid uri", route.canHandle("/abc/notValid"));
+		assertFalse("invalid uri", route.canHandle("/abc/ABC123"));
+		assertTrue("valid uri", route.canHandle("/abc/10AB3"));
+
+	}
+	@Test
+	public void usingRegexesWithCurlyBracesNotOnTheEnd() throws Exception {
+		builder = new RouteBuilder(proxifier, typeFinder, "/abc/{abc:[0-9A-Z]{5}}/");
+
+		builder.is(MyResource.class, method.getMethod());
+		Route route = builder.build();
+
+		assertFalse("invalid uri", route.canHandle("/abc/notValid/"));
+		assertFalse("invalid uri", route.canHandle("/abc/ABC123/"));
+		assertTrue("valid uri", route.canHandle("/abc/10AB3/"));
+
+	}
+
@@ -99,2 +129,2 @@
-		Object parameters = new AsmBasedTypeCreator(provider)
-			.instanceWithParameters(this.method, "Anything", 123, new BigDecimal("123.45"));
+		Object parameters = new AsmBasedTypeCreator(provider).instanceWithParameters(this.method, "Anything", 123,
+				new BigDecimal("123.45"));

