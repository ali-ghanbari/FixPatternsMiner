diff --git a/modeshape-graph/src/main/java/org/modeshape/graph/request/RemovePropertyRequest.java b/modeshape-graph/src/main/java/org/modeshape/graph/request/RemovePropertyRequest.java
index 1de79a2..3056c24 100644
--- a/modeshape-graph/src/main/java/org/modeshape/graph/request/RemovePropertyRequest.java
+++ b/modeshape-graph/src/main/java/org/modeshape/graph/request/RemovePropertyRequest.java
@@ -37 +37 @@
-public class RemovePropertyRequest extends ChangeRequest {
+public class RemovePropertyRequest extends ChangeRequest implements PropertyChangeRequest {
diff --git a/modeshape-jcr/src/test/java/org/modeshape/jcr/JcrObservationManagerTest.java b/modeshape-jcr/src/test/java/org/modeshape/jcr/JcrObservationManagerTest.java
index 9beebd2..14ab59e 100644
--- a/modeshape-jcr/src/test/java/org/modeshape/jcr/JcrObservationManagerTest.java
+++ b/modeshape-jcr/src/test/java/org/modeshape/jcr/JcrObservationManagerTest.java
@@ -29,3 +28,0 @@
-import static org.junit.Assert.assertThat;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
@@ -69,0 +67 @@
+import static org.junit.Assert.*;
@@ -137 +135 @@
-    TestListener addListener( int eventsExpected,
+    TestListener addListener( int expectedEventsCount,
@@ -144 +142 @@
-        return addListener(eventsExpected, 1, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
+        return addListener(expectedEventsCount, 1, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
@@ -147 +145 @@
-    TestListener addListener( int eventsExpected,
+    TestListener addListener( int expectedEventsCount,
@@ -155 +153 @@
-        return addListener(this.session, eventsExpected, numIterators, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
+        return addListener(this.session, expectedEventsCount, numIterators, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
@@ -159 +157 @@
-                              int eventsExpected,
+                              int expectedEventsCount,
@@ -166 +164 @@
-        return addListener(session, eventsExpected, 1, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
+        return addListener(session, expectedEventsCount, 1, eventTypes, absPath, isDeep, uuids, nodeTypeNames, noLocal);
@@ -170 +168 @@
-                              int eventsExpected,
+                              int expectedEventsCount,
@@ -178 +176 @@
-        TestListener listener = new TestListener(eventsExpected, numIterators, eventTypes);
+        TestListener listener = new TestListener(expectedEventsCount, numIterators, eventTypes);
@@ -1965,0 +1964,23 @@
+    @FixFor(" MODE-1315 ")
+    @Test
+    public void shouldReceiveEventWhenPropertyDeletedOnCustomNode() throws Exception {
+        CndNodeTypeReader cndFactory = new CndNodeTypeReader(session);
+        cndFactory.read(getClass().getClassLoader().getResource("cars.cnd"));
+        session.getWorkspace().getNodeTypeManager().registerNodeTypes(cndFactory.getNodeTypeDefinitions(), true);
+
+        Node car = testRootNode.addNode("car", "car:Car");
+        car.setProperty("car:maker", "Audi");
+        session.save();
+
+        TestListener listener = addListener(1, Event.PROPERTY_REMOVED, null, true, null, new String[] {"car:Car"}, false);
+        Property carMakerProperty = car.getProperty("car:maker");
+        String propertyPath = carMakerProperty.getPath();
+        carMakerProperty.remove();
+        session.save();
+        listener.waitForEvents();
+        checkResults(listener);
+        Event receivedEvent = listener.getEvents().get(0);
+        assertEquals(Event.PROPERTY_REMOVED, receivedEvent.getType());
+        assertEquals(propertyPath, receivedEvent.getPath());
+    }
+
@@ -2010 +2031 @@
-        private final int expectedEvents;
+        private final int expectedEventsCount;
@@ -2013 +2034 @@
-        public TestListener( int expectedEvents,
+        public TestListener( int expectedEventsCount,
@@ -2017 +2038 @@
-            this.expectedEvents = expectedEvents;
+            this.expectedEventsCount = expectedEventsCount;
@@ -2035 +2056 @@
-            return this.expectedEvents;
+            return this.expectedEventsCount;
@@ -2065 +2086 @@
-                        if (this.eventsProcessed > this.expectedEvents) {
+                        if (this.eventsProcessed > this.expectedEventsCount) {
@@ -2087 +2108 @@
-            long millis = this.expectedEvents == 0 ? 50 : 250;
+            long millis = this.expectedEventsCount == 0 ? 50 : 250;

