diff --git a/src/main/java/br/com/caelum/tubaina/parser/html/RubyTag.java b/src/main/java/br/com/caelum/tubaina/parser/html/RubyTag.java
index dca2767..49cffe9 100644
--- a/src/main/java/br/com/caelum/tubaina/parser/html/RubyTag.java
+++ b/src/main/java/br/com/caelum/tubaina/parser/html/RubyTag.java
@@ -75 +75 @@
-		output = codeHighlightTag.parseHtml(output, highlights);
+		toProcess = codeHighlightTag.parseHtml(toProcess, highlights);
diff --git a/src/test/java/br/com/caelum/tubaina/parser/html/RubyTagTest.java b/src/test/java/br/com/caelum/tubaina/parser/html/RubyTagTest.java
index 6d9b888..68a0164 100644
--- a/src/test/java/br/com/caelum/tubaina/parser/html/RubyTagTest.java
+++ b/src/test/java/br/com/caelum/tubaina/parser/html/RubyTagTest.java
@@ -130,24 +130,13 @@
-		String code = "BEGIN class ensure nil self when END def false not super while alias defined for or then yield and do if redo true begin else in rescue undef break elsif module retry unless case end next return until raise defined?";
-		String result = rubyTag.parse(code, "");
-		Assert.assertEquals(BEGIN
-				+ "<span class=\"rubykeyword\">BEGIN</span>&nbsp;<span class=\"rubykeyword\">class</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">ensure</span>&nbsp;<span class=\"rubykeyword\">nil</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">self</span>&nbsp;<span class=\"rubykeyword\">when</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">END</span>&nbsp;<span class=\"rubykeyword\">def</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">false</span>&nbsp;<span class=\"rubykeyword\">not</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">super</span>&nbsp;<span class=\"rubykeyword\">while</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">alias</span>&nbsp;<span class=\"rubykeyword\">defined</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">for</span>&nbsp;<span class=\"rubykeyword\">or</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">then</span>&nbsp;<span class=\"rubykeyword\">yield</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">and</span>&nbsp;<span class=\"rubykeyword\">do</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">if</span>&nbsp;<span class=\"rubykeyword\">redo</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">true</span>&nbsp;<span class=\"rubykeyword\">begin</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">else</span>&nbsp;<span class=\"rubykeyword\">in</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">rescue</span>&nbsp;<span class=\"rubykeyword\">undef</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">break</span>&nbsp;<span class=\"rubykeyword\">elsif</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">module</span>&nbsp;<span class=\"rubykeyword\">retry</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">unless</span>&nbsp;<span class=\"rubykeyword\">case</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">end</span>&nbsp;<span class=\"rubykeyword\">next</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">return</span>&nbsp;<span class=\"rubykeyword\">until</span>&nbsp;"
-				+ "<span class=\"rubykeyword\">raise</span>&nbsp;<span class=\"rubykeyword\">defined?</span>"
-				+ END, result);
+		String[] keywords = {
+				"BEGIN", "class", "ensure", "nil", "self",
+				"when", "END", "def", "false", "not",
+				"super", "while", "alias", "defined", "for",
+				"or", "then", "yield", "and", "do",
+				"if", "redo", "true", "begin", "else",
+				"in", "rescue", "undef", "break", "elsif",
+				"module", "retry", "unless", "case", "end",
+				"next", "return", "until", "raise", "defined?"};
+		for (String keyword : keywords) {
+			String result = rubyTag.parse(keyword, "");
+			Assert.assertEquals(BEGIN + keyword(keyword) + END, result);
+		}
diff --git a/src/test/java/br/com/caelum/tubaina/parser/latex/RubyTagTest.java b/src/test/java/br/com/caelum/tubaina/parser/latex/RubyTagTest.java
index 4080bc7..bc7c0fa 100644
--- a/src/test/java/br/com/caelum/tubaina/parser/latex/RubyTagTest.java
+++ b/src/test/java/br/com/caelum/tubaina/parser/latex/RubyTagTest.java
@@ -132,24 +132,13 @@
-		String code = "BEGIN class ensure nil self when END def false not super while alias defined for or then yield and do if redo true begin else in rescue undef break elsif module retry unless case end next return until raise defined?";
-		String result = rubyTag.parse(code, "");
-		Assert.assertEquals(BEGIN
-				+ "\\rubykeyword BEGIN~\\rubykeyword class~"
-				+ "\\rubykeyword ensure~\\rubykeyword nil~"
-				+ "\\rubykeyword self~\\rubykeyword when~"
-				+ "\\rubykeyword END~\\rubykeyword def~"
-				+ "\\rubykeyword false~\\rubykeyword not~"
-				+ "\\rubykeyword super~\\rubykeyword while~"
-				+ "\\rubykeyword alias~\\rubykeyword defined~"
-				+ "\\rubykeyword for~\\rubykeyword or~"
-				+ "\\rubykeyword then~\\rubykeyword yield~"
-				+ "\\rubykeyword and~\\rubykeyword do~"
-				+ "\\rubykeyword if~\\rubykeyword redo~"
-				+ "\\rubykeyword true~\\rubykeyword begin~"
-				+ "\\rubykeyword else~\\rubykeyword in~"
-				+ "\\rubykeyword rescue~\\rubykeyword undef~"
-				+ "\\rubykeyword break~\\rubykeyword elsif~"
-				+ "\\rubykeyword module~\\rubykeyword retry~"
-				+ "\\rubykeyword unless~\\rubykeyword case~"
-				+ "\\rubykeyword end~\\rubykeyword next~"
-				+ "\\rubykeyword return~\\rubykeyword until~"
-				+ "\\rubykeyword raise~\\rubykeyword defined?"
-				+ END, result);
+		String[] keywords = {
+				"BEGIN", "class", "ensure", "nil", "self",
+				"when", "END", "def", "false", "not",
+				"super", "while", "alias", "defined", "for",
+				"or", "then", "yield", "and", "do",
+				"if", "redo", "true", "begin", "else",
+				"in", "rescue", "undef", "break", "elsif",
+				"module", "retry", "unless", "case", "end",
+				"next", "return", "until", "raise", "defined?"};
+		for (String keyword : keywords) {
+			String result = rubyTag.parse(keyword, "");
+			Assert.assertEquals(BEGIN + keyword(keyword) + END, result);
+		}

