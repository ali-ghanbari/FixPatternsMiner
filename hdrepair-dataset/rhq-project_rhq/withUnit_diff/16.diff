diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/authz/test/RoleManagerBeanTest.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/authz/test/RoleManagerBeanTest.java
index 3e900f7..c316462 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/authz/test/RoleManagerBeanTest.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/authz/test/RoleManagerBeanTest.java
@@ -75,2 +75,2 @@
-            PageList<Role> roles = roleManager.findRolesBySubject(subjectManager.getOverlord().getId(),
-                PageControl.getUnlimitedInstance());
+            PageList<Role> roles = roleManager.findRolesBySubject(subjectManager.getOverlord().getId(), PageControl
+                .getUnlimitedInstance());
@@ -98,2 +98,2 @@
-            PageList<Role> roles = roleManager.findRolesBySubject(subjectManager.getOverlord().getId(),
-                PageControl.getUnlimitedInstance());
+            PageList<Role> roles = roleManager.findRolesBySubject(subjectManager.getOverlord().getId(), PageControl
+                .getUnlimitedInstance());
@@ -102,2 +102,2 @@
-                PageList<Subject> subjects = roleManager.findSubjectsByRole(role.getId(),
-                    PageControl.getUnlimitedInstance());
+                PageList<Subject> subjects = roleManager.findSubjectsByRole(role.getId(), PageControl
+                    .getUnlimitedInstance());
@@ -133,2 +133,2 @@
-            PageList<Role> roles = roleManager.findRolesByIds(role_id_list.toArray(new Integer[0]),
-                PageControl.getUnlimitedInstance());
+            PageList<Role> roles = roleManager.findRolesByIds(role_id_list.toArray(new Integer[0]), PageControl
+                .getUnlimitedInstance());
@@ -151 +151 @@
-            createSession(superuser);
+            superuser = createSession(superuser);
@@ -156 +156 @@
-            createSession(subject);
+            subject = createSession(subject);
@@ -168,2 +168,2 @@
-            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[0],
-                PageControl.getUnlimitedInstance());
+            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[0], PageControl
+                .getUnlimitedInstance());
@@ -174,2 +174,2 @@
-            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(),
-                new Integer[] { new_role.getId() }, PageControl.getUnlimitedInstance());
+            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[] { new_role
+                .getId() }, PageControl.getUnlimitedInstance());
@@ -179,2 +179,2 @@
-            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(),
-                new Integer[] { new_role.getId(), new_role2.getId() }, PageControl.getUnlimitedInstance());
+            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[] {
+                new_role.getId(), new_role2.getId() }, PageControl.getUnlimitedInstance());
@@ -186,2 +186,2 @@
-            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[0],
-                PageControl.getUnlimitedInstance());
+            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[0], PageControl
+                .getUnlimitedInstance());
@@ -191,2 +191,2 @@
-            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(),
-                new Integer[] { new_role2.getId() }, PageControl.getUnlimitedInstance());
+            roles = roleManager.findAvailableRolesForSubject(superuser, subject.getId(), new Integer[] { new_role2
+                .getId() }, PageControl.getUnlimitedInstance());
@@ -199,2 +199,2 @@
-                roles = roleManager.findAvailableRolesForSubject(subject, subject.getId(), new Integer[0],
-                    PageControl.getUnlimitedInstance());
+                roles = roleManager.findAvailableRolesForSubject(subject, subject.getId(), new Integer[0], PageControl
+                    .getUnlimitedInstance());
@@ -235 +235 @@
-            createSession(newSubject1);
+            newSubject1 = createSession(newSubject1);
@@ -238 +238 @@
-            createSession(newSubject2);
+            newSubject2 = createSession(newSubject2);
@@ -240,2 +240,2 @@
-            assertEquals("Role should not be created or assigned yet", 0,
-                roleManager.findRolesBySubject(newSubject1.getId(), PageControl.getUnlimitedInstance()).size());
+            assertEquals("Role should not be created or assigned yet", 0, roleManager.findRolesBySubject(
+                newSubject1.getId(), PageControl.getUnlimitedInstance()).size());
@@ -244,2 +244,2 @@
-            assertEquals("Role should be assigned at the time the role is created", 1,
-                    roleManager.findRolesBySubject(newSubject1.getId(), PageControl.getUnlimitedInstance()).size());
+            assertEquals("Role should be assigned at the time the role is created", 1, roleManager.findRolesBySubject(
+                newSubject1.getId(), PageControl.getUnlimitedInstance()).size());
@@ -247,3 +247,3 @@
-            roleManager.addRolesToSubject(superuser, newSubject2.getId(), new int[]{role.getId()});
-            assertEquals("Role should be assigned", 1,
-                roleManager.findRolesBySubject(newSubject2.getId(), PageControl.getUnlimitedInstance()).size());
+            roleManager.addRolesToSubject(superuser, newSubject2.getId(), new int[] { role.getId() });
+            assertEquals("Role should be assigned", 1, roleManager.findRolesBySubject(newSubject2.getId(),
+                PageControl.getUnlimitedInstance()).size());
@@ -252,2 +252,2 @@
-            assertEquals("Role should have been unassigned", 0,
-                roleManager.findRolesBySubject(newSubject1.getId(), PageControl.getUnlimitedInstance()).size());
+            assertEquals("Role should have been unassigned", 0, roleManager.findRolesBySubject(newSubject1.getId(),
+                PageControl.getUnlimitedInstance()).size());
@@ -256,2 +256,2 @@
-            assertFalse("Roles should have been deleted",
-                roleManager.findRoles(PageControl.getUnlimitedInstance()).contains(role));
+            assertFalse("Roles should have been deleted", roleManager.findRoles(PageControl.getUnlimitedInstance())
+                .contains(role));
@@ -273 +273 @@
-            createSession(superuser);
+            superuser = createSession(superuser);
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/configuration/ConfigurationManagerBeanTest.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/configuration/ConfigurationManagerBeanTest.java
index 0a3efd8..22a2dd4 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/configuration/ConfigurationManagerBeanTest.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/configuration/ConfigurationManagerBeanTest.java
@@ -638 +638 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -680 +680 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -710 +710 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -730 +730 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -775 +775 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -806 +806 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -820 +820 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -864 +864 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -869,2 +869,4 @@
-        assert requests.get(0).getStatus() == ConfigurationUpdateStatus.FAILURE : "actual: " + requests.get(0).getStatus();
-        assert requests.get(1).getStatus() == ConfigurationUpdateStatus.SUCCESS : "actual: " + requests.get(1).getStatus();
+        assert requests.get(0).getStatus() == ConfigurationUpdateStatus.FAILURE : "actual: "
+            + requests.get(0).getStatus();
+        assert requests.get(1).getStatus() == ConfigurationUpdateStatus.SUCCESS : "actual: "
+            + requests.get(1).getStatus();
@@ -880 +882 @@
-                configUpdatesPageControl);
+            configUpdatesPageControl);
@@ -904 +906 @@
-            createSession(noPermSubject);
+            noPermSubject = createSession(noPermSubject);
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/operation/OperationManagerBeanTest.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/operation/OperationManagerBeanTest.java
index 0ae4e9e..2f47aa2 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/operation/OperationManagerBeanTest.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/operation/OperationManagerBeanTest.java
@@ -30,2 +29,0 @@
-import org.rhq.core.domain.operation.bean.GroupOperationSchedule;
-import org.rhq.core.domain.operation.bean.ResourceOperationSchedule;
@@ -49,0 +48,2 @@
+import org.rhq.core.domain.operation.bean.GroupOperationSchedule;
+import org.rhq.core.domain.operation.bean.ResourceOperationSchedule;
@@ -1493 +1493 @@
-            createSession(noPermSubject);
+            noPermSubject = createSession(noPermSubject);
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceGroupManagerBeanTest.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceGroupManagerBeanTest.java
index a4c60ce..af20900 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceGroupManagerBeanTest.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceGroupManagerBeanTest.java
@@ -97 +96,0 @@
-            createSession(testSubject);
@@ -131 +129,0 @@
-            createSession(testSubject);
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceStorageTest.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceStorageTest.java
index e580229..4e3241c 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceStorageTest.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/resource/test/ResourceStorageTest.java
@@ -66 +66 @@
-            createSession(subject);
+            subject = createSession(subject);
@@ -109 +109 @@
-            createSession(subject);
+            subject = createSession(subject);
@@ -191 +191 @@
-            createSession(rhqadmin);
+            rhqadmin = createSession(rhqadmin);
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/test/AbstractEJB3Test.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/test/AbstractEJB3Test.java
index 5811792..ee2a45f 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/test/AbstractEJB3Test.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/test/AbstractEJB3Test.java
@@ -208 +208 @@
-     * @return the session activated subject, a copy of the subjected passed in. 
+     * @return the session activated subject, a copy of the subject passed in. 
diff --git a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/util/SessionTestHelper.java b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/util/SessionTestHelper.java
index 09d8190..6ec3cbf 100644
--- a/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/util/SessionTestHelper.java
+++ b/modules/enterprise/server/jar/src/test/java/org/rhq/enterprise/server/util/SessionTestHelper.java
@@ -93 +93 @@
-        newSubject.setSessionId(sessionSubject.getId());
+        newSubject.setSessionId(sessionSubject.getSessionId());

