diff --git a/src/main/java/spoon/reflect/factory/FieldFactory.java b/src/main/java/spoon/reflect/factory/FieldFactory.java
index 8708c36..f74438e 100644
--- a/src/main/java/spoon/reflect/factory/FieldFactory.java
+++ b/src/main/java/spoon/reflect/factory/FieldFactory.java
@@ -92 +92 @@
-			target.getFields().add(newField);
+			target.addField(newField);
diff --git a/src/test/java/spoon/test/factory/FieldFactoryTest.java b/src/test/java/spoon/test/factory/FieldFactoryTest.java
index 7d64340..272ac7d 100644
--- a/src/test/java/spoon/test/factory/FieldFactoryTest.java
+++ b/src/test/java/spoon/test/factory/FieldFactoryTest.java
@@ -41,0 +42,22 @@
+
+	@Test
+	public void testCreateFromSource() throws Exception {
+
+		CtClass<?> target = build("spoon.test", "SampleClass");
+		CtClass<?> type = build("spoon.test.fieldaccesses.testclasses", "Foo");
+		CtField<?> source = type.getField("i");
+		FieldFactory ff = type.getFactory().Field();
+		TypeFactory tf = type.getFactory().Type();
+		
+		ff.create(target,source);
+		
+		CtField<?> field = target.getField("i");
+		Assert.assertEquals("i", field.getSimpleName());
+		CtTypeReference<?> tref = tf.createReference("int");
+		Assert.assertEquals(tref, field.getType());
+		
+		CtElement parent = field.getParent();
+		Assert.assertFalse(parent.isRootElement());
+		Assert.assertTrue(parent instanceof CtClass<?>);
+		Assert.assertEquals("SampleClass", ((CtClass<?>)parent).getSimpleName());
+	}

