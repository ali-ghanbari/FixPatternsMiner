diff --git a/src/javasources/KTool/src/org/kframework/ktest/Configuration.java b/src/javasources/KTool/src/org/kframework/ktest/Configuration.java
index b79eeb0..7604993 100644
--- a/src/javasources/KTool/src/org/kframework/ktest/Configuration.java
+++ b/src/javasources/KTool/src/org/kframework/ktest/Configuration.java
@@ -30 +30 @@
-	public static List<String> EXTENSIONS = new LinkedList<String>();
+	public static List<String> EXTENSIONS = null; //new LinkedList<String>();
diff --git a/src/javasources/KTool/src/org/kframework/ktest/KTest.java b/src/javasources/KTool/src/org/kframework/ktest/KTest.java
index 6030181..0ad1ae9 100644
--- a/src/javasources/KTool/src/org/kframework/ktest/KTest.java
+++ b/src/javasources/KTool/src/org/kframework/ktest/KTest.java
@@ -105 +105,15 @@
-            // Required: --extensions
+            // Optional: --programs
+            if (cmd.hasOption(Configuration.PROGRAMS_OPTION)) {
+                Configuration.PGM_DIR = cmd.getOptionValue(Configuration.PROGRAMS_OPTION).trim();
+                if (Configuration.PGM_DIR.equals("")) {
+                    Configuration.PGM_DIR = null;
+                }
+            }
+            // Optional: --results
+            if (cmd.hasOption(Configuration.RESULTS_OPTION)) {
+                Configuration.RESULTS_FOLDER = cmd.getOptionValue(Configuration.RESULTS_OPTION).trim();
+                if (Configuration.RESULTS_FOLDER.equals("")) {
+                    Configuration.RESULTS_FOLDER = null;
+                }
+            }
+            // Optional: --extensions
@@ -107 +121,12 @@
-                Configuration.EXTENSIONS = Arrays.asList(cmd.getOptionValue(Configuration.EXTENSIONS_OPTION).split("\\s+"));
+                String extensionsOption = cmd.getOptionValue(Configuration.EXTENSIONS_OPTION).trim();
+                if (!extensionsOption.equals("")) {
+                    Configuration.EXTENSIONS = Arrays.asList(extensionsOption.split("\\s+"));
+                }
+            }
+            // Required: all or nothing: --programs and --extensions
+            if (Configuration.EXTENSIONS != null) {
+                // --extensions without --programs
+                if (Configuration.PGM_DIR == null) {
+                    String msg = "The given --extensions option has no effect. You might miss --programs option.";
+                    GlobalSettings.kem.register(new KException(ExceptionType.ERROR, KExceptionGroup.CRITICAL, msg, "command line", "System file."));
+                }
@@ -109 +134,2 @@
-                if (cmd.hasOption(Configuration.PROGRAMS_OPTION)) {
+                // --programs without --extensions
+                if (Configuration.PGM_DIR != null) {
@@ -125,0 +152,15 @@
+            String inputDir = new File(input).getAbsoluteFile().getParent();
+            // Optional: --programs
+            if (cmd.hasOption(Configuration.PROGRAMS_OPTION)) {
+                Configuration.PGM_DIR = cmd.getOptionValue(Configuration.PROGRAMS_OPTION).trim();
+                org.kframework.utils.Error.checkIfInputDirectory(Configuration.PGM_DIR);
+            } else {
+                Configuration.PGM_DIR = inputDir;
+            }
+            // Optional: --results
+            if (cmd.hasOption(Configuration.RESULTS_OPTION)) {
+                Configuration.RESULTS_FOLDER = cmd.getOptionValue(Configuration.RESULTS_OPTION).trim();
+                org.kframework.utils.Error.checkIfInputDirectory(Configuration.RESULTS_FOLDER);
+            } else {
+                Configuration.RESULTS_FOLDER = inputDir;
+            }
@@ -140,16 +180,0 @@
-        {
-            String inputDir = new File(input).getAbsoluteFile().getParent();
-            Configuration.PGM_DIR = inputDir;
-            Configuration.RESULTS_FOLDER = inputDir;
-        }
-
-        // Programs folder
-        if (cmd.hasOption(Configuration.PROGRAMS_OPTION)) {
-            Configuration.PGM_DIR = cmd
-                    .getOptionValue(Configuration.PROGRAMS_OPTION);
-            org.kframework.utils.Error.checkIfInputDirectory(Configuration.PGM_DIR);
-            /*
-            // also set the results to be programs folder by default
-            Configuration.RESULTS_FOLDER = Configuration.PGM_DIR;
-            */
-        }
@@ -161,7 +185,0 @@
-        }
-
-        // Results directory
-        if (cmd.hasOption(Configuration.RESULTS_OPTION)) {
-            Configuration.RESULTS_FOLDER = cmd
-                    .getOptionValue(Configuration.RESULTS_OPTION);
-            org.kframework.utils.Error.checkIfInputDirectory(Configuration.RESULTS_FOLDER);
@@ -215,0 +234 @@
+            List<String> extensions = Configuration.EXTENSIONS == null ? new LinkedList<String>() : Configuration.EXTENSIONS;
@@ -217 +236 @@
-                    Configuration.EXTENSIONS, Configuration.EXCLUDE_PROGRAMS,
+                    extensions, Configuration.EXCLUDE_PROGRAMS,
diff --git a/src/javasources/KTool/src/org/kframework/ktest/tests/Test.java b/src/javasources/KTool/src/org/kframework/ktest/tests/Test.java
index 934fa0d..639049a 100644
--- a/src/javasources/KTool/src/org/kframework/ktest/tests/Test.java
+++ b/src/javasources/KTool/src/org/kframework/ktest/tests/Test.java
@@ -306,0 +307,12 @@
+        // programs without extensions
+        if (!test.getAttribute(Configuration.PROGRAMS_DIR).trim().equals("") && test.getAttribute(Configuration.EXTENSIONS2).trim().equals("")) {
+            String msg = "You missed 'extension' attribute: ";
+            msg += "<test definition=" + test.getAttribute(Configuration.LANGUAGE) + " programs=" + test.getAttribute(Configuration.PROGRAMS_DIR) + " />";
+            GlobalSettings.kem.register(new KException(ExceptionType.ERROR, KExceptionGroup.CRITICAL, msg, "", ""));
+        // extensions without programs
+        } else if (test.getAttribute(Configuration.PROGRAMS_DIR).trim().equals("") && !test.getAttribute(Configuration.EXTENSIONS2).trim().equals("")) {
+            String msg = "You cannot use 'extension' attribute without 'programs' attribute: ";
+            msg += "<test definition=" + test.getAttribute(Configuration.LANGUAGE) + " programs=" + test.getAttribute(Configuration.PROGRAMS_DIR) + " />";
+            GlobalSettings.kem.register(new KException(ExceptionType.ERROR, KExceptionGroup.CRITICAL, msg, "", ""));
+        }
+
@@ -307,0 +320 @@
+        programsFolders = new LinkedList<String>();
@@ -309 +322 @@
-                Configuration.PROGRAMS_DIR).split("\\s+"));
+                Configuration.PROGRAMS_DIR).trim().split("\\s+"));
@@ -311 +323,0 @@
-            programsFolders = new LinkedList<String>();
@@ -324,3 +335,0 @@
-        List<String> allrd = new LinkedList<String>();
-        if (test.hasAttribute(Configuration.RESULTS))
-                allrd = Arrays.asList(test.getAttribute(Configuration.RESULTS).split("\\s+"));
@@ -327,0 +337 @@
+        List<String> allrd = Arrays.asList(test.getAttribute(Configuration.RESULTS).trim().split("\\s+"));
@@ -329,2 +339 @@
-            // reset the default results folder if Configuration.RESULTS is given
-            for (String rd : allrd)
+            for (String rd : allrd) {
@@ -334 +343 @@
-                    if (p != null)
+                    if (p != null) {
@@ -335,0 +345 @@
+                    }
@@ -337,2 +347 @@
-        } else {
-            resultsFolders.add(rootResultsDir);
+            }
@@ -374 +383 @@
-                .split("\\s+"));
+                .trim().split("\\s+"));
@@ -378 +387 @@
-                .getAttribute(Configuration.EXCLUDE).split("\\s+"));
+                .getAttribute(Configuration.EXCLUDE).trim().split("\\s+"));
diff --git a/tests/config.xml b/tests/config.xml
index 7715beb..7695c5f 100644
--- a/tests/config.xml
+++ b/tests/config.xml
@@ -754,0 +755 @@
+      extension="test"
@@ -787 +788 @@
-      extensions="imp"
+      extension="imp"
@@ -800 +801 @@
-      extensions="imp"
+      extension="imp"
@@ -815 +816 @@
-      extensions="simple"
+      extension="simple"

