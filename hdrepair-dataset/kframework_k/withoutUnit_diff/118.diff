diff --git a/k-distribution/src/test/resources/convertor-tests/configuration-expected.k b/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
index 688084c..f2b1b3c 100644
--- a/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
@@ -16,2 +16,2 @@
-  configuration <t><k>.K<k> <env><'.Map sort="Map"><'.Map><env> <stack>.Bag<stack><t> ensures true
-endmodule
\ No newline at end of file
+  configuration <t><k>.K</k> <env>'.Map() [sort(Map)]</env> <stack>.Bag</stack></t> ensures true
+endmodule
diff --git a/k-distribution/src/test/resources/convertor-tests/syntaxWithOR-kilexpected.k b/k-distribution/src/test/resources/convertor-tests/syntaxWithOR-kilexpected.k
index cd7a09b..1a444fa 100644
--- a/k-distribution/src/test/resources/convertor-tests/syntaxWithOR-kilexpected.k
+++ b/k-distribution/src/test/resources/convertor-tests/syntaxWithOR-kilexpected.k
@@ -5,2 +4,0 @@
-  syntax Foo ::= "x"
-
@@ -8,0 +7 @@
+  syntax Foo ::= "x"
@@ -10 +9,2 @@
-endmodule
+
+endmodule
\ No newline at end of file
diff --git a/kernel/src/main/java/org/kframework/kore/convertors/KOREtoKIL.java b/kernel/src/main/java/org/kframework/kore/convertors/KOREtoKIL.java
index 457ef24..f872c35 100644
--- a/kernel/src/main/java/org/kframework/kore/convertors/KOREtoKIL.java
+++ b/kernel/src/main/java/org/kframework/kore/convertors/KOREtoKIL.java
@@ -308,0 +309,2 @@
+        kilProd.setAttributes(convertAttributes(syntaxProduction.att()));
+
diff --git a/kore/src/main/scala/org/kframework/kore/Attributes.scala b/kore/src/main/scala/org/kframework/kore/Attributes.scala
index e355368..6b77eef 100644
--- a/kore/src/main/scala/org/kframework/kore/Attributes.scala
+++ b/kore/src/main/scala/org/kframework/kore/Attributes.scala
@@ -10 +10 @@
-    case KApply(KLabel(label), _, _) => true
+    case KApply(KLabel(`label`), _, _) => true
@@ -49,5 +49,5 @@
-    (this map[String] {
-      case KApply(KLabel(keyName), KList(KToken(_, KString(value), _)), _) => keyName + "(" + value + ")"
-      case x => x.toString
-    }).sorted.mkString(" ") +
-    "]"
+      (this.filteredAtt map {
+        case KApply(KLabel(keyName), KList(KToken(_, KString(value), _)), _) => keyName + "(" + value + ")"
+        case x => x.toString
+      }).toList.sorted.mkString(" ") +
+      "]"
@@ -55 +55,5 @@
-  def postfixString = if (att.isEmpty) "" else (" " + toString())
+  def postfixString = {
+    if (filteredAtt.isEmpty) "" else (" " + toString())
+  }
+
+  lazy val filteredAtt: Set[K] = att filter { case KApply(KLabel("productionID"), _, _) => false; case _ => true } // TODO: remove along with KIL to KORE to KIL convertors
diff --git a/kore/src/main/scala/org/kframework/kore/outer/outer-ext.scala b/kore/src/main/scala/org/kframework/kore/outer/outer-ext.scala
index fb62610..8870ac3 100644
--- a/kore/src/main/scala/org/kframework/kore/outer/outer-ext.scala
+++ b/kore/src/main/scala/org/kframework/kore/outer/outer-ext.scala
@@ -25 +25 @@
-        "<" + label.name + ">"
+        "</" + label.name + ">"

