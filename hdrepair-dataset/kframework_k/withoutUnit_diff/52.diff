diff --git a/k-distribution/src/test/java/org/kframework/kore/convertors/TstTinyOnKORE.java b/k-distribution/src/test/java/org/kframework/kore/convertors/TstTinyOnKORE.java
index 6486f7d..d0f160a 100644
--- a/k-distribution/src/test/java/org/kframework/kore/convertors/TstTinyOnKORE.java
+++ b/k-distribution/src/test/java/org/kframework/kore/convertors/TstTinyOnKORE.java
@@ -48 +48 @@
-                                cons.KApply(cons.KLabel("'_<=_"), cons.stringToId("x"), cons.intToToken(1000)),
+                                cons.KApply(cons.KLabel("'_<=_"), cons.stringToId("x"), cons.intToToken(10)),
diff --git a/k-distribution/src/test/resources/convertor-tests/complex-expected.k b/k-distribution/src/test/resources/convertor-tests/complex-expected.k
index 0a1628d..310e920 100644
--- a/k-distribution/src/test/resources/convertor-tests/complex-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/complex-expected.k
@@ -7,2 +7,2 @@
-  rule #token(#Bool,"true")=>INJECTED-KLIST() requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"8"),#token(Int,"3"),#token(Int,"8"),#token(Int,"21"))]
-  rule #token(#Bool,"true")=>INJECTED-KLIST(#token(#Bool,"true")) requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"9"),#token(Int,"3"),#token(Int,"9"),#token(Int,"29"))]
+  rule #token(#Bool,"true")=>INJECTED-KLIST() requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"8"),#token(Int,"3"),#token(Int,"8"),#token(Int,"21"))]
+  rule #token(#Bool,"true")=>INJECTED-KLIST(#token(#Bool,"true")) requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"9"),#token(Int,"3"),#token(Int,"9"),#token(Int,"29"))]
diff --git a/k-distribution/src/test/resources/convertor-tests/complex-kilexpected.k b/k-distribution/src/test/resources/convertor-tests/complex-kilexpected.k
index d99761e..5d8b1e1 100644
--- a/k-distribution/src/test/resources/convertor-tests/complex-kilexpected.k
+++ b/k-distribution/src/test/resources/convertor-tests/complex-kilexpected.k
@@ -4,2 +4,2 @@
-  rule #token("#Bool", "true")() => INJECTED-KLIST(#token("#Bool", "true")())
-  rule #token("#Bool", "true")() => INJECTED-KLIST()
+  rule #token("#Bool", "true")() => INJECTED-KLIST(#token("#Bool", "true")()) requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
+  rule #token("#Bool", "true")() => INJECTED-KLIST() requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
@@ -13 +13,2 @@
-endmodule
\ No newline at end of file
+endmodule
+
diff --git a/k-distribution/src/test/resources/convertor-tests/configuration-expected.k b/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
index 1a307cb..8a6b1a1 100644
--- a/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/configuration-expected.k
@@ -15 +15 @@
-  Configuration(t(KBag(k(.K),env('.Map()),stack(KBag()))),#token(KBoolean,"true"),[org.kframework.attributes.Location(#token(Int,"6"),#token(Int,"17"),#token(Int,"6"),#token(Int,"108"))])
+  Configuration(t(KBag(k(.K),env('.Map()),stack(KBag()))),#token(Bool,"true"),[org.kframework.attributes.Location(#token(Int,"6"),#token(Int,"17"),#token(Int,"6"),#token(Int,"108"))])
diff --git a/k-distribution/src/test/resources/convertor-tests/context-expected.k b/k-distribution/src/test/resources/convertor-tests/context-expected.k
index 8a2a1f0..9b9d0a0 100644
--- a/k-distribution/src/test/resources/convertor-tests/context-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/context-expected.k
@@ -16,2 +16,2 @@
-  context '_+_(_,HOLE(#token(KItem,""))) requires #token(KBoolean,"true")
-  context '_+_(HOLE(#token(KItem,"")),_) requires #token(KBoolean,"true")
+  context '_+_(_,HOLE(#token(KItem,""))) requires #token(Bool,"true")
+  context '_+_(HOLE(#token(KItem,"")),_) requires #token(Bool,"true")
diff --git a/k-distribution/src/test/resources/convertor-tests/kapp-expected.k b/k-distribution/src/test/resources/convertor-tests/kapp-expected.k
index bc5772c..eaae039 100644
--- a/k-distribution/src/test/resources/convertor-tests/kapp-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/kapp-expected.k
@@ -11,4 +11,4 @@
-  rule 'notBool_(#token(#Bool,"true"))=>#token(#Bool,"false") requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"10"),#token(Int,"3"),#token(Int,"10"),#token(Int,"28"))]
-  rule 'notBool_(#token(#Bool,"false"))=>#token(#Bool,"true") requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"11"),#token(Int,"3"),#token(Int,"11"),#token(Int,"28"))]
-  rule 'notBool(#token(#Bool,"true"))=>#token(#Bool,"false") requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"13"),#token(Int,"3"),#token(Int,"13"),#token(Int,"30"))]
-  rule '_,_(#token(#Bool,"true"),#token(#Bool,"true"))=>'.List{"'_,_"}() requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"17"),#token(Int,"3"),#token(Int,"17"),#token(Int,"27"))]
+  rule 'notBool_(#token(#Bool,"true"))=>#token(#Bool,"false") requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"10"),#token(Int,"3"),#token(Int,"10"),#token(Int,"28"))]
+  rule 'notBool_(#token(#Bool,"false"))=>#token(#Bool,"true") requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"11"),#token(Int,"3"),#token(Int,"11"),#token(Int,"28"))]
+  rule 'notBool(#token(#Bool,"true"))=>#token(#Bool,"false") requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"13"),#token(Int,"3"),#token(Int,"13"),#token(Int,"30"))]
+  rule '_,_(#token(#Bool,"true"),#token(#Bool,"true"))=>'.List{"'_,_"}() requires '_andBool_(#token(Bool,"true"),#token(Bool,"true")) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"17"),#token(Int,"3"),#token(Int,"17"),#token(Int,"27"))]
diff --git a/k-distribution/src/test/resources/convertor-tests/kapp-kilexpected.k b/k-distribution/src/test/resources/convertor-tests/kapp-kilexpected.k
index c2b6479..093bcdf 100644
--- a/k-distribution/src/test/resources/convertor-tests/kapp-kilexpected.k
+++ b/k-distribution/src/test/resources/convertor-tests/kapp-kilexpected.k
@@ -4,4 +4,4 @@
-  rule '_,_(#token("#Bool", "true")(), #token("#Bool", "true")()) => '.List{"'_,_"}()
-  rule 'notBool(#token("#Bool", "true")()) => #token("#Bool", "false")()
-  rule notBool #token("#Bool", "false")()  => #token("#Bool", "true")()
-  rule notBool #token("#Bool", "true")()  => #token("#Bool", "false")()
+  rule '_,_(#token("#Bool", "true")(), #token("#Bool", "true")()) => '.List{"'_,_"}() requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
+  rule 'notBool(#token("#Bool", "true")()) => #token("#Bool", "false")() requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
+  rule notBool #token("#Bool", "false")()  => #token("#Bool", "true")() requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
+  rule notBool #token("#Bool", "true")()  => #token("#Bool", "false")() requires '_andBool_(#token("Bool", "true")(),, #token("Bool", "true")())
diff --git a/k-distribution/src/test/resources/convertor-tests/kore_imp-backend-expected.txt b/k-distribution/src/test/resources/convertor-tests/kore_imp-backend-expected.txt
index 4705841..323b588 100644
--- a/k-distribution/src/test/resources/convertor-tests/kore_imp-backend-expected.txt
+++ b/k-distribution/src/test/resources/convertor-tests/kore_imp-backend-expected.txt
@@ -2,2 +2 @@
-
-'<top>('<k>('_/_(Int(#"1"),, Int(#"0"))),, '<state>(Id(#"x2") |-> Int(#"0") Id(#"x1") |-> Int(#"1")   ))
\ No newline at end of file
+'<top>('<k>('_/_(Int(#"1"),, Int(#"0"))),, '<state>(Id(#"x2") |-> Int(#"0") Id(#"x1") |-> Int(#"1")   ))
diff --git a/k-distribution/src/test/resources/convertor-tests/kore_imp_tiny-tiny-expected.txt b/k-distribution/src/test/resources/convertor-tests/kore_imp_tiny-tiny-expected.txt
index 7456369..f18f048 100644
--- a/k-distribution/src/test/resources/convertor-tests/kore_imp_tiny-tiny-expected.txt
+++ b/k-distribution/src/test/resources/convertor-tests/kore_imp_tiny-tiny-expected.txt
@@ -2,2 +2 @@
-
-???
+'<top>('<k>(~>()),'<state>('_Map_(Tuple2(x:Id,11),Tuple2(y:Id,2))))
diff --git a/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-expected.k b/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-expected.k
index a132dfc..62454b8 100644
--- a/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-expected.k
@@ -5,3 +5,3 @@
-  rule A=>A requires A ensures A [org.kframework.attributes.Location(#token(Int,"8"),#token(Int,"3"),#token(Int,"8"),#token(Int,"38"))]
-  rule A=>A requires A ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"6"),#token(Int,"3"),#token(Int,"6"),#token(Int,"28"))]
-  rule A=>A requires #token(KBoolean,"true") ensures A [org.kframework.attributes.Location(#token(Int,"7"),#token(Int,"3"),#token(Int,"7"),#token(Int,"27"))]
+  rule A=>A requires '_andBool_(A,isExp(A)) ensures A [org.kframework.attributes.Location(#token(Int,"8"),#token(Int,"3"),#token(Int,"8"),#token(Int,"38"))]
+  rule A=>A requires '_andBool_(A,isExp(A)) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"6"),#token(Int,"3"),#token(Int,"6"),#token(Int,"28"))]
+  rule A=>A requires '_andBool_(#token(Bool,"true"),isExp(A)) ensures A [org.kframework.attributes.Location(#token(Int,"7"),#token(Int,"3"),#token(Int,"7"),#token(Int,"27"))]
diff --git a/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-kilexpected.k b/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-kilexpected.k
index 7be9fcb..cf8883b 100644
--- a/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-kilexpected.k
+++ b/k-distribution/src/test/resources/convertor-tests/ruleWithRequiresEnsures-kilexpected.k
@@ -4,3 +4,3 @@
-  rule A:Exp => A:Exp ensures A:Exp
-  rule A:Exp => A:Exp requires A:Exp
-  rule A:Exp => A:Exp requires A:Exp ensures A:Exp
+  rule A:Exp => A:Exp requires '_andBool_(#token("Bool", "true")(),, isExp(A:Exp)) ensures A:Exp
+  rule A:Exp => A:Exp requires '_andBool_(A:Exp,, isExp(A:Exp))
+  rule A:Exp => A:Exp requires '_andBool_(A:Exp,, isExp(A:Exp)) ensures A:Exp
diff --git a/k-distribution/src/test/resources/convertor-tests/simpleRule-expected.k b/k-distribution/src/test/resources/convertor-tests/simpleRule-expected.k
index ef87d47..ce8c206 100644
--- a/k-distribution/src/test/resources/convertor-tests/simpleRule-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/simpleRule-expected.k
@@ -5 +5 @@
-  rule A=>A requires #token(KBoolean,"true") ensures #token(KBoolean,"true") [org.kframework.attributes.Location(#token(Int,"5"),#token(Int,"3"),#token(Int,"5"),#token(Int,"17"))]
+  rule A=>A requires '_andBool_(#token(Bool,"true"),isExp(A)) ensures #token(Bool,"true") [org.kframework.attributes.Location(#token(Int,"5"),#token(Int,"3"),#token(Int,"5"),#token(Int,"17"))]
diff --git a/k-distribution/src/test/resources/convertor-tests/simpleRule-kilexpected.k b/k-distribution/src/test/resources/convertor-tests/simpleRule-kilexpected.k
index 9bd70c9..8368bb4 100644
--- a/k-distribution/src/test/resources/convertor-tests/simpleRule-kilexpected.k
+++ b/k-distribution/src/test/resources/convertor-tests/simpleRule-kilexpected.k
@@ -4 +4 @@
-  rule A:Exp => A:Exp
+  rule A:Exp => A:Exp requires '_andBool_(#token("Bool", "true")(),, isExp(A:Exp))
diff --git a/k-distribution/src/test/resources/convertor-tests/simpleRuleKORE-expected.k b/k-distribution/src/test/resources/convertor-tests/simpleRuleKORE-expected.k
index 1ab9455..7a182d2 100644
--- a/k-distribution/src/test/resources/convertor-tests/simpleRuleKORE-expected.k
+++ b/k-distribution/src/test/resources/convertor-tests/simpleRuleKORE-expected.k
@@ -2 +1,0 @@
-
@@ -6 +5 @@
-endmodule
\ No newline at end of file
+endmodule

