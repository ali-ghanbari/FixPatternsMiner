diff --git a/core/pom.xml b/core/pom.xml
index 4a173b0..1f91989 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -20,4 +19,0 @@
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-        </dependency>
@@ -27,0 +24,5 @@
+        <dependency>
+            <groupId>ch.qos.logback</groupId>
+            <artifactId>logback-classic</artifactId>
+            <version>${logback.version}</version>
+        </dependency>
diff --git a/core/src/main/resources/brooklyn/logback-debug.xml b/core/src/main/resources/brooklyn/logback-debug.xml
new file mode 100644
index 0000000..d5c2d48
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-debug.xml
@@ -0,0 +1,14 @@
+<included>
+
+    <logger name="brooklyn" level="DEBUG"/>
+    
+    <logger name="jclouds" level="DEBUG"/>
+    <logger name="org.jclouds" level="DEBUG"/>
+    <logger name="org.apache.whirr" level="DEBUG"/>
+
+    <root level="INFO">
+        <appender-ref ref="STDOUT" />
+        <appender-ref ref="FILE" />
+    </root>
+  
+</included>
diff --git a/core/src/main/resources/brooklyn/logback-default.groovy b/core/src/main/resources/brooklyn/logback-default.groovy
new file mode 100644
index 0000000..f838acd
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-default.groovy
@@ -0,0 +1,46 @@
+
+// if you want to run the groovy config, use this file
+// we use XML however, as it can (more easily) be included
+
+appender("STDOUT", ConsoleAppender) {
+  filter(ThresholdFilter) {
+      level = INFO
+  }
+  encoder(PatternLayoutEncoder) {
+    pattern = "%d %-5level %msg%n"
+  }
+}
+
+appender("MAIN_FILE", FileAppender) {
+    file = "brooklyn.log"
+    append = true
+    encoder(PatternLayoutEncoder) {
+      pattern = "%d %-5level %logger{30} [%thread{15}]: %msg%n"
+    }
+//log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
+//log4j.appender.R.MaxFileSize=100MB
+//log4j.appender.R.MaxBackupIndex=10
+}
+
+root(INFO, ["STDOUT", "MAIN_FILE"])
+
+// these generate lots of uninteresting info
+(expand("org.hibernate.{SQL,type,tool.hbm2ddl}")+
+    "org.eclipse.jetty"
+).each { logger(it, WARN) }
+// schmizz sshj almost always uninteresting; restrict to file
+logger("net.schmizz", WARN, ["MAIN_FILE"], false)
+// this one can be noisy too; file only
+logger("org.apache.whirr.service.ComputeCache", DEBUG, ["MAIN_FILE"], false)
+
+// now go for DEBUG on the root of relevant packages
+logger("brooklyn", DEBUG)
+logger("jclouds", DEBUG)
+logger("org.jclouds", DEBUG)
+logger("org.apache.whirr", DEBUG)
+
+// these individual categories are interesting, if you've bumped the above to info
+// you might consider re-enabling these
+logger("brooklyn.SSH", DEBUG)  // SSH i/o is very useful
+logger("brooklyn.location.basic.jclouds", DEBUG)  // jclouds provisioning debug info also useful
+logger("brooklyn.util.internal.ssh", DEBUG)
diff --git a/core/src/main/resources/brooklyn/logback-default.xml b/core/src/main/resources/brooklyn/logback-default.xml
new file mode 100644
index 0000000..d08c663
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-default.xml
@@ -0,0 +1,10 @@
+<included>
+
+    <include resource="brooklyn/logback-stdout.xml"/>
+    <include resource="brooklyn/logback-file.xml"/>
+    
+    <include resource="brooklyn/logback-excludes.xml"/>
+    
+    <include resource="brooklyn/logback-debug.xml"/>
+
+</included>
diff --git a/core/src/main/resources/brooklyn/logback-excludes.xml b/core/src/main/resources/brooklyn/logback-excludes.xml
new file mode 100644
index 0000000..f16b122
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-excludes.xml
@@ -0,0 +1,16 @@
+<included>
+    
+    <!-- schmizz (sshj) very noisy, profligate with errors, put to file only, at warn level -->
+    <logger name="net.schmizz" level="WARN" additivity="false">
+        <appender-ref ref="FILE" />
+    </logger>
+
+    <!-- quite noisy at INFO, and uninteresting -->
+    <logger name="org.eclipse.jetty" level="WARN"/>
+    
+    <!-- quite noisy at INFO, but poss interesting; put to file only -->
+    <logger name="org.apache.whirr.service.ComputeCache" level="DEBUG" additivity="false">
+        <appender-ref ref="FILE" />
+    </logger>
+
+</included>
diff --git a/core/src/main/resources/brooklyn/logback-favs.xml b/core/src/main/resources/brooklyn/logback-favs.xml
new file mode 100644
index 0000000..de32dd0
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-favs.xml
@@ -0,0 +1,9 @@
+<included>
+
+<!-- if you're just going to have a few debug categories these are recommended -->
+
+    <logger name="brooklyn.SSH" level="DEBUG"/>
+    <logger name="brooklyn.location.basic.jclouds" level="DEBUG"/>
+    <logger name="brooklyn.util.internal.ssh" level="DEBUG"/>
+
+</included>
diff --git a/core/src/main/resources/brooklyn/logback-file.xml b/core/src/main/resources/brooklyn/logback-file.xml
new file mode 100644
index 0000000..4bb1051
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-file.xml
@@ -0,0 +1,11 @@
+<included>
+
+  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
+    <file>brooklyn.log</file>
+    <append>true</append>
+    <encoder>
+      <pattern>%d %-5level %logger{30} [%thread{15}]: %msg%n</pattern>
+    </encoder>
+  </appender>
+
+</included>
diff --git a/core/src/main/resources/brooklyn/logback-stdout.xml b/core/src/main/resources/brooklyn/logback-stdout.xml
new file mode 100644
index 0000000..60b2004
--- /dev/null
+++ b/core/src/main/resources/brooklyn/logback-stdout.xml
@@ -0,0 +1,12 @@
+<included>
+
+  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
+    <encoder>
+      <pattern>%d %-5level %msg%n</pattern>
+    </encoder>
+    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
+        <level>INFO</level>
+    </filter>
+  </appender>
+
+</included>
diff --git a/docs/dev/tips/logging.md b/docs/dev/tips/logging.md
index ab2774b..7ee42e0 100644
--- a/docs/dev/tips/logging.md
+++ b/docs/dev/tips/logging.md
@@ -7 +7 @@
-## A Quick Overview
+## Logging: A Quick Overview
@@ -9 +9,3 @@
-For logging, we use the ``slf4j`` facade, usually hooked up to a ``log4j`` implementation.
+For logging, we use **logback** which implements the slf4j API.
+This means you can use any slf4j compliant logging framework,
+or if you just want something that works logback will work out of the box.
@@ -11 +13,6 @@
-Tests have debug logging across the board, included by default from ``usage/test-support``
+The CLI launcher includes a ``logback.xml`` which logs at DEBUG level 
+to a file ``./brooklyn.log`` and INFO to the console,
+with a few exceptions.  Exceptions --- and the inverse, favourites which
+you might want to enable even if the root logger level is bumped to INFO ---
+are in files in ``core/src/main/resources/brooklyn/`` which can easily
+be included in your own ``logback.xml`` (one of the nicest features of logback).
@@ -13,2 +20,2 @@
-Launcher (and all) define a log4j.properties which logs at INFO level with a few selected categories at DEBUG
-(debug output goes only to a file, ``./brooklyn.log``).
+Tests have debug logging across the board, included by default from 
+``usage/test-support/src/main/resources/logback-tests.xml``.
@@ -16 +23 @@
-Some categories are quite useful, as you'll see in the ``log4j.properties`` files in the project:
+You can set a specific logback config file to use with:
@@ -18,41 +25 @@
-* brooklyn
-* brooklyn.SSH
-* org.jclouds
-
-
-## Dependencies
-
-### log4j.properties
-
-If you've not inherited brooklyn-launcher (or brooklyn-all) you'll need a ``log4j.properties`` 
-(or ``log4j.xml``, which will dominate).
-There are plenty of other valid reasons for wanting to supply your own logging as well.
-
-A good starting point is the configuration file in 
-[launcher](https://github.com/brooklyncentral/brooklyn/blob/master/usage/launcher/src/main/resources/log4j.properties).
-
-Once you've tweaked this, place it in your classpath, 
-or specify ``-Dlog4j.configuration=/path/to/your/log4j.properties``. 
-For more information see [logging.apache.org/log4j](http://logging.apache.org/log4j/1.2/manual.html).
-
-### Maven
-
-If you've not inherited brooklyn-launcher (or brooklyn-all) you may not have an SLF4J implementation project
-on your classpath (you'll see some SLF4J complaints at runtime).
-Adding a dependency on an implementation, such as ``log4j12``, should resolve the problem:
-
-{% highlight xml %}
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <optional>true</optional>
-        </dependency>
-{% endhighlight %} 
-
-As of this writing we use 1.5.11 for the version,
-as per the [root pom](https://github.com/brooklyncentral/brooklyn/blob/master/pom.xml).
-The ``optional`` line means the dependency should not be passed to any projects
-which depend on your project; you can remove it to force the import your logging implementation choice.
-(You can of course use a differing slf4j-compliant logger, such as ``java.util.logging`` or ``ch.qos.logback``.)
-
+    -Dlogback.configurationFile=/path/to/config.xml
@@ -62 +29,2 @@
-* SLF4J **version >= 1.6** is **not compatible** with 1.5.x and breaks certain things (such as the web console written in Grails).
+* logback uses SLF4J version 1.6 which is **not compatible** with 1.5.x. 
+  If you have dependent projects using 1.5.x (such as older Grails) things may break.
@@ -64,4 +32,7 @@
-* Logging for **tests** isn't picked up correctly in some environments (some Eclipse flavours).
-  The root cause seems to be a rogue log4j.properties included in the groovy-all OSGi bundle bsf.jar which sets a FATAL threshhold.
-  To resolve this add an explicit project dependency on test-support, 
-  or create your own log4j.properties file.
+* If you're not getting the logging you expect in the IDE, make sure 
+  ``src/main/resources`` is included in the classpath.
+  (In eclipse, right-click the project, the Build Path -> Configure,
+  then make sure all dirs are included (All) and excluded (None) -- 
+  ``mvn clean install`` should do this for you.)
+  You may find that your IDE logs to a file ``brooklyn-tests.log`` 
+  if it doesn't distinguish between test build classpaths and normal classpaths.
diff --git a/examples/global-web-fabric/src/main/resources/log4j.properties b/examples/global-web-fabric/src/main/resources/log4j.properties
deleted file mode 100644
index 84963ee..0000000
--- a/examples/global-web-fabric/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,35 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
diff --git a/examples/global-web-fabric/src/main/resources/logback.xml b/examples/global-web-fabric/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/examples/global-web-fabric/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/examples/hadoop-and-whirr/src/main/resources/log4j.properties b/examples/hadoop-and-whirr/src/main/resources/log4j.properties
deleted file mode 100644
index 9202921..0000000
--- a/examples/hadoop-and-whirr/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,43 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# schmizz (sshj) is especially bad, screaming about "errors" that are normal; 
-# would be nice to downgrade but difficult, but at least don't write to console
-log4j.logger.net.schmizz=INFO, R
-log4j.additivity.net.schmizz=false
-# similarly ComputeCache is noisy with its info output, write to file only
-log4j.logger.org.apache.whirr.service.ComputeCache=DEBUG, R
-log4j.additivity.org.apache.whirr.service.ComputeCache=false
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored); turn these off if too noisy
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
\ No newline at end of file
diff --git a/examples/hadoop-and-whirr/src/main/resources/logback.xml b/examples/hadoop-and-whirr/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/examples/hadoop-and-whirr/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/examples/portable-cloudfoundry/src/main/resources/log4j.properties b/examples/portable-cloudfoundry/src/main/resources/log4j.properties
deleted file mode 100644
index 84963ee..0000000
--- a/examples/portable-cloudfoundry/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,35 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
diff --git a/examples/portable-cloudfoundry/src/main/resources/logback.xml b/examples/portable-cloudfoundry/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/examples/portable-cloudfoundry/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/examples/simple-messaging-pubsub/pom.xml b/examples/simple-messaging-pubsub/pom.xml
index 210af1e..fc0ed51 100644
--- a/examples/simple-messaging-pubsub/pom.xml
+++ b/examples/simple-messaging-pubsub/pom.xml
@@ -34,5 +33,0 @@
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-        </dependency>
-        <dependency>
diff --git a/examples/simple-messaging-pubsub/src/main/resources/log4j.properties b/examples/simple-messaging-pubsub/src/main/resources/log4j.properties
deleted file mode 100644
index 0c9919b..0000000
--- a/examples/simple-messaging-pubsub/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,35 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
\ No newline at end of file
diff --git a/examples/simple-messaging-pubsub/src/main/resources/logback.xml b/examples/simple-messaging-pubsub/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/examples/simple-messaging-pubsub/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/examples/simple-web-cluster/src/main/resources/log4j.properties b/examples/simple-web-cluster/src/main/resources/log4j.properties
deleted file mode 100644
index d10c2c3..0000000
--- a/examples/simple-web-cluster/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,43 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# schmizz (sshj) is especially bad, screaming about "errors" that are normal; 
-# would be nice to downgrade but difficult, but at least don't write to console
-log4j.logger.net.schmizz=INFO, R
-log4j.additivity.net.schmizz=false
-# similarly ComputeCache is noisy with its info output, write to file only
-log4j.logger.org.apache.whirr.service.ComputeCache=DEBUG, R
-log4j.additivity.org.apache.whirr.service.ComputeCache=false
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location=DEBUG
-log4j.logger.brooklyn.entity=DEBUG
diff --git a/examples/simple-web-cluster/src/main/resources/logback.xml b/examples/simple-web-cluster/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/examples/simple-web-cluster/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/pom.xml b/pom.xml
index 2f22851..7d660b7 100644
--- a/pom.xml
+++ b/pom.xml
@@ -95 +95,2 @@
-        <slf4j.version>1.6.4</slf4j.version>
+        <logback.version>1.0.7</logback.version>
+        <slf4j.version>1.6.6</slf4j.version>
@@ -356,10 +356,0 @@
-                         <systemProperties>
-                              <property>
-                                <name>maven.junit.sysproperties</name>
-                                <value>log4j.configuration</value>
-                            </property>
-                            <property>
-                                <name>log4j.configuration</name>
-                                <value>test-log4j.properties</value>
-                            </property>
-                        </systemProperties>
@@ -881 +871,0 @@
-                                <log4j.configuration>test-log4j.properties</log4j.configuration>
diff --git a/sandbox/dropwizard/pom.xml b/sandbox/dropwizard/pom.xml
index 2526bf8..f1b8ada 100644
--- a/sandbox/dropwizard/pom.xml
+++ b/sandbox/dropwizard/pom.xml
@@ -116,6 +115,0 @@
-            <exclusions>
-                <exclusion>
-                    <groupId>org.slf4j</groupId>
-                    <artifactId>slf4j-log4j12</artifactId>
-                </exclusion>
-            </exclusions>
diff --git a/sandbox/mgmt/pom.xml b/sandbox/mgmt/pom.xml
index bc4b4f1..3bcc365 100644
--- a/sandbox/mgmt/pom.xml
+++ b/sandbox/mgmt/pom.xml
@@ -31,7 +30,0 @@
-    <!--  FIXME slf4j-jdk14 is only wanted for a "run" scope or similar (to start the mgmt console)  -->
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-        </dependency>
-
diff --git a/systems/whirr/base/pom.xml b/systems/whirr/base/pom.xml
index 511149b..c39077b 100644
--- a/systems/whirr/base/pom.xml
+++ b/systems/whirr/base/pom.xml
@@ -50,2 +50 @@
-                <!-- solr pulls v1.6 of this in. but it breaks 1.5 compatibility needed elsewhere.
-                     solr may not work until brooklyn (grails) allows 1.6 -->
+                <!-- solr pulls v1.6 of this in. used to break things. might be okay now (now using logback). -->
@@ -56,5 +54,0 @@
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
diff --git a/usage/all/pom.xml b/usage/all/pom.xml
index 8ab0ed5..0e2a258 100644
--- a/usage/all/pom.xml
+++ b/usage/all/pom.xml
@@ -23,5 +22,0 @@
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-        </dependency>
-        <dependency>
@@ -108,2 +103 @@
-                <!-- solr pulls v1.6 of this in. but it breaks 1.5 compatibility needed elsewhere.
-                     solr may not work until brooklyn (grails) allows 1.6 -->
+                <!-- solr pulls v1.6 of this in. might be okay now... -->
diff --git a/usage/cli/pom.xml b/usage/cli/pom.xml
index f1b8f5f..78c5e92 100644
--- a/usage/cli/pom.xml
+++ b/usage/cli/pom.xml
@@ -25,7 +24,0 @@
-
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <optional>true</optional>
-        </dependency>
diff --git a/usage/jsgui/pom.xml b/usage/jsgui/pom.xml
index 140bba7..bb0a39d 100644
--- a/usage/jsgui/pom.xml
+++ b/usage/jsgui/pom.xml
@@ -24,12 +23,0 @@
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-            <version>${slf4j.version}</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
@@ -52,6 +39,0 @@
-            <exclusions>
-                <exclusion>
-                    <groupId>org.slf4j</groupId>
-                    <artifactId>slf4j-log4j12</artifactId>
-                </exclusion>
-            </exclusions>
diff --git a/usage/jsgui/src/main/webapp/assets/css/prettybrook.css b/usage/jsgui/src/main/webapp/assets/css/prettybrook.css
index 3e1fa1f..8e7fb25 100644
--- a/usage/jsgui/src/main/webapp/assets/css/prettybrook.css
+++ b/usage/jsgui/src/main/webapp/assets/css/prettybrook.css
@@ -530,0 +531,9 @@
+.app-summary .inforow > div { display: inline-block; }
+.app-summary .inforow .name { font-weight: 700; width: 80px; padding-right: 12px;}
+.app-summary > .name { margin-bottom: 18px; }
+.app-summary .json { margin-top: 18px; }
+
+#activity-details div.for-activity-textarea {
+	/* correct for textarea width oddity */
+	margin-right: 10px;
+}
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/entity-activities.js b/usage/jsgui/src/main/webapp/assets/js/view/entity-activities.js
index fb30921..94e1a23 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/entity-activities.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/entity-activities.js
@@ -32,0 +33 @@
+                this.$("#activity-details-none-selected").hide()
@@ -47,0 +49,2 @@
+                } else {
+                    this.$("#activity-details-none-selected").show()                    
@@ -59,2 +62 @@
-                this.activeTask = null
-                this.$("#activity-details").hide(100)
+                this.showFullActivity(null)
@@ -67,0 +70 @@
+            this.$("#activity-details-none-selected").hide(100)
@@ -71,0 +75,2 @@
+                this.$("#activity-details-none-selected").show(100)
+                return
@@ -73,5 +78,11 @@
-            var html = _.template(ActivityDetailsHtml, {
-                displayName:this.model.get("displayName"),
-                description:FormatJSON(task.toJSON())                
-            })
-            this.$("#activity-details").html(html)
+            
+            var $ta = this.$("#activity-details textarea")
+            if ($ta.length) {
+                $ta.val(FormatJSON(task.toJSON()))
+            } else {
+                var html = _.template(ActivityDetailsHtml, {
+                    displayName:this.model.get("displayName"),
+                    description:FormatJSON(task.toJSON())                
+                })
+                this.$("#activity-details").html(html)
+            }
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/entity-config.js b/usage/jsgui/src/main/webapp/assets/js/view/entity-config.js
index 899b0a4..5cf7482 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/entity-config.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/entity-config.js
@@ -23 +22,0 @@
-            this.viewUtils = new ViewUtils({})
@@ -35 +34 @@
-                that.viewUtils.myDataTable($table)
+                ViewUtils.myDataTable($table)
@@ -46 +45 @@
-            this.viewUtils.toggleFilterEmpty(this.$('#config-table'), 1)
+            ViewUtils.toggleFilterEmpty(this.$('#config-table'), 1)
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/entity-sensors.js b/usage/jsgui/src/main/webapp/assets/js/view/entity-sensors.js
index 19c5cdc..63c9b04 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/entity-sensors.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/entity-sensors.js
@@ -23 +22,0 @@
-            this.viewUtils = new ViewUtils({})
@@ -42 +41 @@
-                that.viewUtils.myDataTable($table)
+                ViewUtils.myDataTable($table)
@@ -53 +52 @@
-            this.viewUtils.toggleFilterEmpty(this.$('#sensors-table'), 2)
+            ViewUtils.toggleFilterEmpty(this.$('#sensors-table'), 2)
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/entity-summary.js b/usage/jsgui/src/main/webapp/assets/js/view/entity-summary.js
index 2f7ef84..2d587ca 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/entity-summary.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/entity-summary.js
@@ -6,2 +6,3 @@
-    "underscore", "jquery", "backbone", "text!tpl/apps/summary.html", "formatJson"
-], function (_, $, Backbone, SummaryHtml) {
+    "underscore", "jquery", "backbone", "view/viewutils",
+    "text!tpl/apps/summary.html", "formatJson", "brooklyn-utils"
+], function (_, $, Backbone, ViewUtils, SummaryHtml) {
@@ -11 +12,3 @@
-        render:function () {
+        initialize: function() {
+            var that = this
+            var ej = FormatJSON(this.model.toJSON());
@@ -13,2 +16,4 @@
-                entity:FormatJSON(this.model.toJSON()),
-                application:FormatJSON(this.options.application.toJSON())
+                entity:this.model,
+                application:this.options.application,
+                entityJson:ej,
+                applicationJson:FormatJSON(this.options.application.toJSON())
@@ -15,0 +21,7 @@
+            ViewUtils.updateTextareaWithData($(".for-textarea", this.$el), ej, true, 150, 400)
+            ViewUtils.attachToggler(this.$el)
+            that.callPeriodically("entity-summary-sensors", 
+                    function() { that.updateSensorsNow(that) }, 3000)
+            that.updateSensorsNow(that)
+        },
+        render:function () {
@@ -16,0 +29,13 @@
+        },
+        revealIfHasValue: function(that, sensor, $div) {
+            $.ajax({
+                url: that.model.getLinkByName("sensors")+"/"+sensor,
+                contentType:"application/json",
+                success:function (data) {
+                    $(".value", $div).html(_.escape(data))
+                    $div.show()
+                }})            
+        },
+        updateSensorsNow: function(that) {
+            that.revealIfHasValue(that, "service.isUp", that.$(".serviceUp"))
+            that.revealIfHasValue(that, "service.state", that.$(".status"))
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/script-groovy.js b/usage/jsgui/src/main/webapp/assets/js/view/script-groovy.js
index 0e457de..a9610f8 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/script-groovy.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/script-groovy.js
@@ -2,0 +3 @@
+    "view/viewutils",
@@ -10,2 +11,2 @@
-    "brooklyn-utils"
-], function (_, $, Backbone, GroovyHtml) {
+    "brooklyn-utils",
+], function (_, $, Backbone, ViewUtils, GroovyHtml) {
@@ -29 +30 @@
-            $(".toggler-header", this.$el).click(this.toggleNext)
+            ViewUtils.attachToggler(this.$el)
@@ -33,13 +33,0 @@
-        },
-        toggleNext: function(event) {
-            var root = $(event.currentTarget).closest(".toggler-header");
-            root.toggleClass("user-hidden");
-            $(".toggler-icon", root).
-                toggleClass("icon-chevron-left").
-                toggleClass("icon-chevron-down");
-                
-            var next = root.next();
-            if (root.hasClass("user-hidden")) 
-                next.hide('fast');
-            else 
-                next.show('fast')
@@ -62,18 +50 @@
-            var $ta = $("textarea", $div)
-            var show = alwaysShow
-            if (data !== undefined) {
-                $ta.val(data)
-                show = true
-            } else {
-                $ta.val("")
-            }
-            if (show) {
-                log("foo")
-                $div.show(100)
-                $ta.css("height", 50);
-                var height = Math.min($ta.prop("scrollHeight"), 350)
-                $ta.css("height", height);
-                log(height)
-            } else {
-                $div.hide()
-            }
+            ViewUtils.updateTextareaWithData($div, data, alwaysShow, 50, 350) 
diff --git a/usage/jsgui/src/main/webapp/assets/js/view/viewutils.js b/usage/jsgui/src/main/webapp/assets/js/view/viewutils.js
index b802119..7572ffd 100644
--- a/usage/jsgui/src/main/webapp/assets/js/view/viewutils.js
+++ b/usage/jsgui/src/main/webapp/assets/js/view/viewutils.js
@@ -5 +5 @@
-    var ViewUtils = Backbone.View.extend({
+    var ViewUtils = {
@@ -41,0 +42,42 @@
+        },
+
+        attachToggler: function($scope) {
+            var $togglers;
+            if ($scope === undefined) $togglers = $(".toggler-header")
+            else $togglers = $(".toggler-header", $scope);
+            $togglers.click(this.onTogglerClick)
+        },
+        onTogglerClick: function(event) {
+            var root = $(event.currentTarget).closest(".toggler-header");
+            root.toggleClass("user-hidden");
+            $(".toggler-icon", root).
+                toggleClass("icon-chevron-left").
+                toggleClass("icon-chevron-down");
+                
+            var next = root.next();
+            if (root.hasClass("user-hidden")) 
+                next.hide('fast');
+            else 
+                next.show('fast')
+        },
+        
+        updateTextareaWithData: function($div, data, alwaysShow, minPx, maxPx) {
+            var $ta = $("textarea", $div)
+            var show = alwaysShow
+            if (data !== undefined) {
+                $ta.val(data)
+                show = true
+            } else {
+                $ta.val("")
+            }
+            if (show) {
+                $div.show(100)
+                $ta.css("height", minPx);
+                // scrollHeight prop works sometimes (e.g. groovy page) but not others (e.g. summary)
+                var height = $ta.prop("scrollHeight")
+                height = Math.min(height, maxPx)
+                height = Math.max(height, minPx)
+                $ta.css("height", height);
+            } else {
+                $div.hide()
+            }
@@ -44 +86,2 @@
-    })
+    }
+    
diff --git a/usage/jsgui/src/main/webapp/assets/tpl/apps/activities.html b/usage/jsgui/src/main/webapp/assets/tpl/apps/activities.html
index 8dbe3ec..d894035 100644
--- a/usage/jsgui/src/main/webapp/assets/tpl/apps/activities.html
+++ b/usage/jsgui/src/main/webapp/assets/tpl/apps/activities.html
@@ -15 +15,6 @@
-<div id="activity-details"></div>
+<div id="activity-details">
+</div>
+
+<div id="activity-details-none-selected">
+    <i>Select an entity above to view details.</i>
+</div>
diff --git a/usage/jsgui/src/main/webapp/assets/tpl/apps/activity-details.html b/usage/jsgui/src/main/webapp/assets/tpl/apps/activity-details.html
index 83faca7..136e8ae 100644
--- a/usage/jsgui/src/main/webapp/assets/tpl/apps/activity-details.html
+++ b/usage/jsgui/src/main/webapp/assets/tpl/apps/activity-details.html
@@ -1 +1 @@
-<div>
+<div class="for-activity-textarea">
diff --git a/usage/jsgui/src/main/webapp/assets/tpl/apps/summary.html b/usage/jsgui/src/main/webapp/assets/tpl/apps/summary.html
index baf8863..48f5d23 100644
--- a/usage/jsgui/src/main/webapp/assets/tpl/apps/summary.html
+++ b/usage/jsgui/src/main/webapp/assets/tpl/apps/summary.html
@@ -1 +1,41 @@
-<textarea readonly="readonly" rows="25"><%= entity %></textarea>
+<div class="app-summary">
+
+  <div class="name">
+    <h2><%= entity.get('name') %></h2>
+  </div>
+
+  <div class="id inforow">
+    <div class="name">ID</div>
+    <div class="value"><%= entity.get('id') %></div>
+  </div>
+
+  <div class="status inforow hide">
+    <div class="name">Status</div>
+    <div class="value"><i>Loading...</i></div>
+  </div>
+  <div class="serviceUp inforow hide">
+    <div class="name">Available</div>
+    <div class="value"><i>Loading...</i></div>
+  </div>
+  <!-- TODO
+	<div class="toggler-region location inforow">
+		<div class="name">Location</div>
+		<div class="value"><i>Loading...</i></div>
+	</div>
+	-->
+  <!-- TODO
+    parent, app, children
+    map
+  -->
+
+  <div class="toggler-region json">
+    <div class="toggler-header">
+      <div class="toggler-icon icon-chevron-down"></div>
+      <div><b>JSON</b></div>
+    </div>
+    <div class="for-textarea">
+      <textarea id="json-textrea" readonly="readonly"><%= entityJson %></textarea>
+    </div>
+  </div>
+
+</div>
\ No newline at end of file
diff --git a/usage/jsgui/src/test/resources/log4j.properties b/usage/jsgui/src/test/resources/log4j.properties
deleted file mode 100644
index ec2e823..0000000
--- a/usage/jsgui/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,49 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# schmizz (sshj) is especially bad, screaming about "errors" that are normal; 
-# would be nice to downgrade but difficult, but at least don't write to console
-log4j.logger.net.schmizz=INFO, R
-log4j.additivity.net.schmizz=false
-# similarly ComputeCache is noisy with its info output, write to file only
-log4j.logger.org.apache.whirr.service.ComputeCache=DEBUG, R
-log4j.additivity.org.apache.whirr.service.ComputeCache=false
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored); but jclouds can be chatty so only to file
-log4j.logger.jclouds=DEBUG, R
-log4j.additivity.jclouds=false
-log4j.logger.org.jclouds=DEBUG, R
-log4j.additivity.org.jclouds=false
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
-# reenable this one because grails can clobber debug logging, above
-log4j.logger.brooklyn.entity=DEBUG
-
-log4j.logger.com.sun.jersey.spi.inject.Errors=DEBUG
diff --git a/usage/jsgui/src/test/resources/logback-test.xml b/usage/jsgui/src/test/resources/logback-test.xml
deleted file mode 100644
index 75f192b..0000000
--- a/usage/jsgui/src/test/resources/logback-test.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<configuration>
-    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
-        <encoder>
-            <outputPatternAsHeader>false</outputPatternAsHeader>
-            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
-        </encoder>
-    </appender>
-    <root level="debug">
-        <appender-ref ref="STDOUT"/>
-    </root>
-</configuration>
diff --git a/usage/launcher/src/main/resources/log4j.properties b/usage/launcher/src/main/resources/log4j.properties
deleted file mode 100644
index 925fd85..0000000
--- a/usage/launcher/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,47 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# schmizz (sshj) is especially bad, screaming about "errors" that are normal; 
-# would be nice to downgrade but difficult, but at least don't write to console
-log4j.logger.net.schmizz=INFO, R
-log4j.additivity.net.schmizz=false
-# similarly ComputeCache is noisy with its info output, write to file only
-log4j.logger.org.apache.whirr.service.ComputeCache=DEBUG, R
-log4j.additivity.org.apache.whirr.service.ComputeCache=false
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored); but jclouds can be chatty so only to file
-log4j.logger.jclouds=DEBUG, R
-log4j.additivity.jclouds=false
-log4j.logger.org.jclouds=DEBUG, R
-log4j.additivity.org.jclouds=false
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
-# reenable this one because grails can clobber debug logging, above
-log4j.logger.brooklyn.entity=DEBUG
diff --git a/usage/launcher/src/main/resources/logback.xml b/usage/launcher/src/main/resources/logback.xml
new file mode 100644
index 0000000..25f3755
--- /dev/null
+++ b/usage/launcher/src/main/resources/logback.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-default.xml"/>
+    
+</configuration>
diff --git a/usage/qa/pom.xml b/usage/qa/pom.xml
index 9fc290f..eede372 100644
--- a/usage/qa/pom.xml
+++ b/usage/qa/pom.xml
@@ -19,6 +18,0 @@
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
diff --git a/usage/qa/src/main/resources/log4j.properties b/usage/qa/src/main/resources/log4j.properties
deleted file mode 100644
index 0e420a3..0000000
--- a/usage/qa/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,35 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# these categories may be interesting
-log4j.logger.brooklyn=INFO
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
diff --git a/usage/rest/pom.xml b/usage/rest/pom.xml
index 0633f73..789b0ab 100644
--- a/usage/rest/pom.xml
+++ b/usage/rest/pom.xml
@@ -83,4 +82,0 @@
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-        </dependency>
@@ -92,6 +87,0 @@
-            <exclusions>
-                <exclusion>
-                    <groupId>org.slf4j</groupId>
-                    <artifactId>slf4j-log4j12</artifactId>
-                </exclusion>
-            </exclusions>
@@ -149,6 +138,0 @@
-<!-- needed?
-                <exclusion>
-                    <groupId>javax.ws.rs</groupId>
-                    <artifactId>jsr311-api</artifactId>
-                </exclusion>
--->
diff --git a/usage/rest/src/main/java/brooklyn/rest/resources/SensorResource.java b/usage/rest/src/main/java/brooklyn/rest/resources/SensorResource.java
index 41b6f3d..33532e1 100644
--- a/usage/rest/src/main/java/brooklyn/rest/resources/SensorResource.java
+++ b/usage/rest/src/main/java/brooklyn/rest/resources/SensorResource.java
@@ -100,0 +101 @@
+  @Produces("text/plain")
diff --git a/usage/rest/src/test/resources/log4j.properties b/usage/rest/src/test/resources/log4j.properties
deleted file mode 100644
index ec2e823..0000000
--- a/usage/rest/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,49 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# schmizz (sshj) is especially bad, screaming about "errors" that are normal; 
-# would be nice to downgrade but difficult, but at least don't write to console
-log4j.logger.net.schmizz=INFO, R
-log4j.additivity.net.schmizz=false
-# similarly ComputeCache is noisy with its info output, write to file only
-log4j.logger.org.apache.whirr.service.ComputeCache=DEBUG, R
-log4j.additivity.org.apache.whirr.service.ComputeCache=false
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# for some low-level activity, including jclouds+whirr, detail can be useful
-# especially if something goes wrong (or you get bored); but jclouds can be chatty so only to file
-log4j.logger.jclouds=DEBUG, R
-log4j.additivity.jclouds=false
-log4j.logger.org.jclouds=DEBUG, R
-log4j.additivity.org.jclouds=false
-log4j.logger.org.apache.whirr=DEBUG
-log4j.logger.brooklyn.location.basic.jclouds=DEBUG
-log4j.logger.brooklyn.util.internal.ssh=DEBUG
-# reenable this one because grails can clobber debug logging, above
-log4j.logger.brooklyn.entity=DEBUG
-
-log4j.logger.com.sun.jersey.spi.inject.Errors=DEBUG
diff --git a/usage/rest/src/test/resources/logback-test.xml b/usage/rest/src/test/resources/logback-test.xml
deleted file mode 100644
index 8333438..0000000
--- a/usage/rest/src/test/resources/logback-test.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<configuration>
-    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
-        <encoder>
-            <outputPatternAsHeader>false</outputPatternAsHeader>
-            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
-        </encoder>
-    </appender>
-    <root level="info">
-        <appender-ref ref="STDOUT"/>
-    </root>
-</configuration>
diff --git a/usage/test-support/pom.xml b/usage/test-support/pom.xml
index 0a0d1ca..25da9ad 100644
--- a/usage/test-support/pom.xml
+++ b/usage/test-support/pom.xml
@@ -33,7 +33,3 @@
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
+            <groupId>ch.qos.logback</groupId>
+            <artifactId>logback-classic</artifactId>
+            <version>${logback.version}</version>
diff --git a/usage/test-support/src/main/resources/brooklyn/logback-test-file.xml b/usage/test-support/src/main/resources/brooklyn/logback-test-file.xml
new file mode 100644
index 0000000..2a45dd2
--- /dev/null
+++ b/usage/test-support/src/main/resources/brooklyn/logback-test-file.xml
@@ -0,0 +1,11 @@
+<included>
+
+  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
+    <file>brooklyn-tests.log</file>
+    <append>true</append>
+    <encoder>
+      <pattern>%d %-5level %logger{30} [%thread{15}]: %msg%n</pattern>
+    </encoder>
+  </appender>
+
+</included>
diff --git a/usage/test-support/src/main/resources/brooklyn/logback-test.xml b/usage/test-support/src/main/resources/brooklyn/logback-test.xml
new file mode 100644
index 0000000..72f4e6a
--- /dev/null
+++ b/usage/test-support/src/main/resources/brooklyn/logback-test.xml
@@ -0,0 +1,10 @@
+<included>
+
+    <include resource="brooklyn/logback-stdout.xml"/>
+    <include resource="brooklyn/logback-test-file.xml"/>
+    
+    <include resource="brooklyn/logback-excludes.xml"/>
+    
+    <include resource="brooklyn/logback-debug.xml"/>
+
+</included>
diff --git a/usage/test-support/src/main/resources/logback-test.xml b/usage/test-support/src/main/resources/logback-test.xml
new file mode 100644
index 0000000..f79afa0
--- /dev/null
+++ b/usage/test-support/src/main/resources/logback-test.xml
@@ -0,0 +1,5 @@
+<configuration>
+
+    <include resource="brooklyn/logback-test.xml"/>
+
+</configuration>
diff --git a/usage/test-support/src/main/resources/test-log4j.properties b/usage/test-support/src/main/resources/test-log4j.properties
deleted file mode 100644
index 19148e8..0000000
--- a/usage/test-support/src/main/resources/test-log4j.properties
+++ /dev/null
@@ -1,32 +0,0 @@
-# two outputs by default, stdout and ./brooklyn.log
-log4j.appender.stdout=org.apache.log4j.ConsoleAppender
-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-log4j.appender.stdout.layout.ConversionPattern=%d %-5p %m%n
-log4j.appender.stdout.Threshold=INFO
-
-log4j.appender.R=org.apache.log4j.RollingFileAppender
-log4j.appender.R.File=brooklyn-tests.log
-log4j.appender.R.layout=org.apache.log4j.PatternLayout
-log4j.appender.R.layout.ConversionPattern=%d %5p %c: %m%n
-log4j.appender.R.MaxFileSize=100MB
-log4j.appender.R.MaxBackupIndex=10
-
-# default level is info
-log4j.rootLogger=INFO, stdout, R
-
-#these external items can be noisy and uninteresting
-log4j.logger.org.hibernate.SQL = WARN
-log4j.logger.org.hibernate.type = WARN
-log4j.logger.org.hibernate.tool.hbm2ddl = WARN
-log4j.logger.org.eclipse.jetty = WARN
-
-# these categories may be interesting
-log4j.logger.brooklyn=DEBUG
-
-# ssh i/o for entities is very useful
-log4j.logger.brooklyn.SSH=DEBUG
-
-# jclouds activity detail can be useful, if something goes wrong (or you get bored)
-log4j.logger.jclouds=DEBUG
-log4j.logger.org.jclouds=DEBUG
-log4j.logger.net.schmizz.sshj=WARN

