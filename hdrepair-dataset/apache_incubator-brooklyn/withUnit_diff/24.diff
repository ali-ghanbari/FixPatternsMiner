diff --git a/core/src/main/java/brooklyn/management/internal/LocalManagementContext.java b/core/src/main/java/brooklyn/management/internal/LocalManagementContext.java
index bde1387..2e8baba 100644
--- a/core/src/main/java/brooklyn/management/internal/LocalManagementContext.java
+++ b/core/src/main/java/brooklyn/management/internal/LocalManagementContext.java
@@ -39 +39 @@
-    public static final List<LocalManagementContext> INSTANCES = new CopyOnWriteArrayList<LocalManagementContext>();
+    private static final List<LocalManagementContext> INSTANCES = new CopyOnWriteArrayList<LocalManagementContext>();
diff --git a/core/src/test/java/brooklyn/entity/group/GroupPickUpEntitiesTest.java b/core/src/test/java/brooklyn/entity/group/GroupPickUpEntitiesTest.java
index dfd9d80..6b4a290 100644
--- a/core/src/test/java/brooklyn/entity/group/GroupPickUpEntitiesTest.java
+++ b/core/src/test/java/brooklyn/entity/group/GroupPickUpEntitiesTest.java
@@ -13,0 +14 @@
+import brooklyn.management.internal.LocalManagementContext;
@@ -21,3 +22 @@
-import org.testng.annotations.AfterTest;
-import org.testng.annotations.BeforeTest;
-import org.testng.annotations.Test;
+import org.testng.annotations.*;
@@ -33 +32 @@
-    @BeforeTest(alwaysRun = true)
+    @BeforeMethod(alwaysRun = true)
@@ -35,2 +33,0 @@
-        Thread.sleep(10000);
-
@@ -43 +40 @@
-    @AfterTest(alwaysRun = true)
+    @AfterMethod(alwaysRun = true)
@@ -45,5 +42,2 @@
-        try {
-            if (app != null) Entities.destroyAll(app.getManagementContext());
-        } catch (Exception e) {
-
-        }
+        if (app != null) Entities.destroyAll(app.getManagementContext());
+        LocalManagementContext.terminateAll();
diff --git a/core/src/test/java/brooklyn/entity/group/MembershipTrackingPolicyTest.java b/core/src/test/java/brooklyn/entity/group/MembershipTrackingPolicyTest.java
index cd1cc37..582c31e 100644
--- a/core/src/test/java/brooklyn/entity/group/MembershipTrackingPolicyTest.java
+++ b/core/src/test/java/brooklyn/entity/group/MembershipTrackingPolicyTest.java
@@ -35 +35 @@
-    
+
@@ -41 +41 @@
-    
+
@@ -53 +53 @@
-        
+
@@ -62 +62 @@
-    
+
@@ -69 +69 @@
-    
+
@@ -73 +73 @@
-        
+
@@ -75 +75 @@
-        
+
@@ -83 +83 @@
-        
+
@@ -85 +85 @@
-        
+
@@ -92 +92 @@
-        
+
@@ -94 +94 @@
-        
+
@@ -101 +101 @@
-        
+
@@ -103 +103 @@
-        
+
@@ -105 +105 @@
-        
+
@@ -108 +108 @@
-        
+
@@ -110,3 +110,3 @@
-        
-        // Order of members set is non-deterministic, so could get [e1,e1,e2] or [e1,e2,e1] 
-        assertRecordsEventually(policy, ImmutableList.of(Record.newAdded(e1), Record.newAdded(e1), Record.newAdded(e2)), 
+
+        // Order of members set is non-deterministic, so could get [e1,e1,e2] or [e1,e2,e1]
+        assertRecordsEventually(policy, ImmutableList.of(Record.newAdded(e1), Record.newAdded(e1), Record.newAdded(e2)),
@@ -120 +120 @@
-        
+
@@ -134 +134 @@
-        
+
@@ -141 +141 @@
-    
+
@@ -145 +145 @@
-    
+
@@ -155 +155 @@
-    
+
@@ -162 +162 @@
-    
+
@@ -165 +165 @@
-        
+
@@ -182 +182 @@
-    
+
@@ -186 +186 @@
-        
+

