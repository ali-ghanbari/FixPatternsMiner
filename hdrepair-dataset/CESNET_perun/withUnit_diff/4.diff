diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java
index 277112a..3ddbe59 100644
--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java
+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java
@@ -874 +874 @@
-		if(AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN)) {
+		if(!AuthzResolver.hasRole(sess.getPerunPrincipal(), Role.PERUNADMIN) && AuthzResolver.hasRole(sess.getPerunPrincipal(), Role.FACILITYADMIN)) {
diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntryIntegrationTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntryIntegrationTest.java
index 367c255..49f0cdc 100644
--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntryIntegrationTest.java
+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntryIntegrationTest.java
@@ -611,0 +612,25 @@
+
+	@Test
+	public void getHostsByHostname()throws Exception{
+		System.out.println(FACILITIES_MANAGER + ".getHostsByHostname()");
+
+		Facility secondFacility = new Facility(0, "testFacilityGetHostsByHostnname");
+		secondFacility = perun.getFacilitiesManagerBl().createFacility(sess, secondFacility);
+
+		String hostname = "sameHostNameForAllHosts";
+		Host host1 = new Host(0, hostname);
+		Host host2 = new Host(0, hostname);
+		Host host3 = new Host(0, hostname);
+		host1 = perun.getFacilitiesManagerBl().addHost(sess, host1, facility);
+		host2 = perun.getFacilitiesManagerBl().addHost(sess, host2, facility);
+		host3 = perun.getFacilitiesManagerBl().addHost(sess, host3, secondFacility);
+
+		List<Host> expectedHosts = facilitiesManagerEntry.getHostsByHostname(sess, hostname);
+		assertEquals("There should be 3 hosts",3, expectedHosts.size());
+		assertTrue(expectedHosts.contains(host1));
+		assertTrue(expectedHosts.contains(host2));
+		assertTrue(expectedHosts.contains(host3));
+
+	}
+
+

