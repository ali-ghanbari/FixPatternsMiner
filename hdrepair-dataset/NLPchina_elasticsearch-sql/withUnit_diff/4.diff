diff --git a/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java b/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java
index 0a1ea53..9ceacb5 100644
--- a/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java
+++ b/src/main/java/org/nlpcn/es4sql/parse/SqlParser.java
@@ -106 +106 @@
-			if (sub.operator.priority < expr.operator.priority) {
+			if (sub.operator.priority > expr.operator.priority) {
diff --git a/src/test/java/org/nlpcn/es4sql/QueryTest.java b/src/test/java/org/nlpcn/es4sql/QueryTest.java
index afbcbcc..90ec972 100644
--- a/src/test/java/org/nlpcn/es4sql/QueryTest.java
+++ b/src/test/java/org/nlpcn/es4sql/QueryTest.java
@@ -406,0 +407,18 @@
+    @Test
+    public void testMultipartWhere() throws IOException, SqlParseException, SQLFeatureNotSupportedException{
+        SearchHits response = query(String.format("SELECT * FROM %s/account WHERE (firstname LIKE 'opal' OR firstname like 'rodriquez') AND (state like 'oh' OR state like 'hi')", TEST_INDEX));
+        Assert.assertEquals(2, response.getTotalHits());
+    }
+
+    @Test
+    public void testMultipartWhere2() throws IOException, SqlParseException, SQLFeatureNotSupportedException{
+        SearchHits response = query(String.format("SELECT * FROM %s/account where ((account_number > 200 and account_number < 300) or gender like 'm') and (state like 'hi' or address like 'avenue')", TEST_INDEX));
+        Assert.assertEquals(11, response.getTotalHits());
+    }
+
+    @Test
+    public void testMultipartWhere3() throws IOException, SqlParseException, SQLFeatureNotSupportedException{
+        SearchHits response = query(String.format("SELECT * FROM %s/account where ((account_number > 25 and account_number < 75) and age >35 ) and (state like 'md' or (address like 'avenue' or address like 'street'))", TEST_INDEX));
+        Assert.assertEquals(7, response.getTotalHits());
+    }
+

