diff --git a/server/src/main/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolver.java b/server/src/main/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolver.java
index 6e5cef8..2ee8204 100644
--- a/server/src/main/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolver.java
+++ b/server/src/main/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolver.java
@@ -46 +46 @@
-        final String requestAsString = request.getResourceRef().toString();
+        String requestAsString =getHttpServletRequest().getContextPath();
diff --git a/server/src/test/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolverTest.java b/server/src/test/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolverTest.java
index 04306fb..3f4c3aa 100644
--- a/server/src/test/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolverTest.java
+++ b/server/src/test/java/org/bonitasoft/web/rest/server/api/extension/ResourceExtensionResolverTest.java
@@ -15 +14,0 @@
-
@@ -39,0 +39,2 @@
+    public static final String API_EXTENSION_GET_MAPPING_KEY = "apiExtension|GET|helloWorld";
+
@@ -66 +66,0 @@
-
@@ -78 +78 @@
-    public void should_resolve_class_file_name() throws Exception {
+    public void should_post_resolve_class_file_name() throws Exception {
@@ -86 +85,0 @@
-
@@ -90,0 +90,12 @@
+    @Test
+    public void should_get_resolve_class_file_name() throws Exception {
+        //given
+        Request request = new Request(Method.GET, "/bonita/API/extension/helloWorld");
+        ResourceExtensionResolver resourceExtensionResolver = new ResourceExtensionResolver(request, new PageMappingService());
+
+        //when
+        final String s = resourceExtensionResolver.resolveClassFileName(pageResourceProvider);
+
+        //then
+        assertThat(s).isEqualTo("Index.groovy");
+    }
@@ -118,0 +130,12 @@
+    @Test
+    public void should_generate_mapping_key_with_parameters() throws Exception {
+        //given
+        Request request = new Request(Method.GET, "/bonita/API/extension/helloWorld?param1=a&param2=b");
+        ResourceExtensionResolver resourceExtensionResolver = new ResourceExtensionResolver(request, new PageMappingService());
+
+        //when
+        final String mappingKey = resourceExtensionResolver.generateMappingKey();
+
+        //then
+        assertThat(mappingKey).isEqualTo(API_EXTENSION_GET_MAPPING_KEY);
+    }
@@ -136,0 +160,36 @@
+    }
+
+    @Test
+    public void should_resolve_pageId_with_parameters() throws Exception {
+        //given
+        Request request = new Request(Method.GET, "/bonita/API/extension/helloWorld?param1=a&param2=b");
+
+        doReturn(Locale.FRENCH).when(httpServletRequest).getLocale();
+        doReturn(pageReference).when(pageMappingService).getPage(httpServletRequest, apiSession, API_EXTENSION_GET_MAPPING_KEY, Locale.FRENCH, false);
+        doReturn(PAGE_ID).when(pageReference).getPageId();
+        doReturn("/bonita/API/extension/helloWorld").when(httpServletRequest).getContextPath();
+
+        ResourceExtensionResolver resourceExtensionResolver = spy(new ResourceExtensionResolver(request, pageMappingService));
+        doReturn(httpServletRequest).when(resourceExtensionResolver).getHttpServletRequest();
+
+        //when
+        final Long pageId = resourceExtensionResolver.resolvePageId(apiSession);
+
+        //then
+        verify(pageMappingService).getPage(any(HttpServletRequest.class), eq(apiSession), eq(API_EXTENSION_GET_MAPPING_KEY), any(Locale.class), eq(false));
+        assertThat(pageId).isEqualTo(PAGE_ID);
+    }
+
+    @Test
+    public void should_mapping_key_exclude_parameters() throws Exception {
+        //given
+        Request request = new Request(Method.GET, "/bonita/API/extension/helloWorld?param1=a&param2=b");
+        doReturn("/bonita/API/extension/helloWorld").when(httpServletRequest).getContextPath();
+        ResourceExtensionResolver resourceExtensionResolver = spy(new ResourceExtensionResolver(request, pageMappingService));
+        doReturn(httpServletRequest).when(resourceExtensionResolver).getHttpServletRequest();
+
+        //when
+        final String mappingKey = resourceExtensionResolver.generateMappingKey();
+
+        //then
+        assertThat(mappingKey).isEqualTo(API_EXTENSION_GET_MAPPING_KEY);
@@ -159 +218 @@
-}
\ No newline at end of file
+}

