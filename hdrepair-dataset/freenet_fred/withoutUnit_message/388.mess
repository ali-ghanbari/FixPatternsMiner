1231:
Scaling peers with bandwidth:
- Increase the FOAF peers limit for an opennet peer, beyond which we dump the peer, to 50.
- Scale with square root from 10 peers to 40 peers, 11 peers at 10KB/sec, 15 at 20KB/sec, 19 at 30K, 26 at 60K, 34 at 100K, 40 at 140K.
- Show the max peers limit on the peers counts box.
- Fix the max connections alert.
- Temporarily limit max peers to 35, will be 40. Fix the config setting for max peers.
Content filtering:
- Merge kurmi's BMP filter.
- Wire it in, BMPs will now be filtered.
- Unit tests for the BMP filter.
- Merge kurmi's HTML/XHTML changes (cherry-pick'ed, not merged, the branch is rather messy):
-- Detect XHTML and set a flag.
-- Void elements are elements that cannot contain any other elements. Anything that isn't void must be closed. Track the stack of non-void elements, when exiting the filter, in XHTML mode, close any that are still outstanding, strip all attributes from end-tags in XHTML mode.
-- Escape \u00A0's into &nbsp's.
-- Add closing / to void elements as needed in XHTML mode.
Datastore/first time wizard:
- Preallocate the datastore in the background when changing store type, move the migration to happen after that. This is most notable in the first-time wizard, where setting the store size was stalling until the preallocation completed - potentially a very long time, long enough for the browser to timeout and the user to be perpetually stuck in the wizard unless they guess the URL of the next step (which is unlikely!).
Web interface:
- Use reflection to find HTTP method handlers. handleGet -> handleMethodGET, etc. Will allow us to implement WebDAV relatively easily in plugins. supportedMethods() is synthesised from which handleMethod's we have. Allow payloads on any method, unless POST is disallowed.
- HTTPRequest.getRawData() getter (presumably for plugins), getHeader(), getContentLength().
- Use annotations to indicate whether a method is allowed to have data/must have data (plus a hardcoded list).
- Add config option for whether to allow extended method handling.
- Require new XMLSpider plugin version. Library, Freetalk and WoT are also updated for the new API.
- Move makeHTTPDate to TimeUtil.
Stats:
- Persist overall total output ever in the database.
L10n:
- Trivial english fix.
- Minor english clarifications.
- German update.
- French update.
Client layer:
- Try to workaround a wierd db4o corruption (probably left over objects), and detect more detail.
- Workaround wierd corruption caused by GCJ.
- SnoopMetadata and SnoopBucket callbacks enable KeyExplorer-style metadata access without having to implement the whole fetch algorithm yourself. TMCI new DUMP: command dumps metadata to stderr.
- Rewrite the multi-container site insert code. (Still not yet deployed, but merge from saces' tree). Refactoring, split up PutHandler into various different handlers for different jobs, more error checking, temporary hack to detect bad call stacks in onSuccess(), synchronization, logging, minor code cleanups.
- Verbose list of compression codecs in NodeHello.
- Can specify what compression codecs to try with new FCP option Codecs= on puts.
- Refactor, tidy up InsertCompressor slightly.
Content filter:
- Allow access to /library/ (new XMLLibrarian replacement plugin, not official yet).
Dev stuff:
- Delete some ancient dead variables in InsertContext, FetchContext.
- Generics.
- Fix some 1.6isms.
- Javadocs.
- Comments.
- Better build process for Version.java, never leave the tag in. Copy to build/ so we can keep Version.java as Version.java.
- Better access to Version including public version and transition time and cvs version, use the function not the constant, will be up to date on a partial rebuild.
- Remove unnecessary throws declaration on Metadata.getDefaultDocument.
- Make freenet.support.Executor extend java.util.concurrent.Executor.
- Imports.
- Logging.

saces
toad
Tommy[D]
Markus
3BUIb3S50i
platy
sdiz
Artefact2
infinity0

