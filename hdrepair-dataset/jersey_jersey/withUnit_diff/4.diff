diff --git a/core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java b/core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java
index 05dadb3..acc7575 100644
--- a/core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java
+++ b/core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java
@@ -82 +82 @@
-            return fromString(v);
+            return fromString((v == null && isDefaultValueRegistered()) ? getDefaultValueString() : v);
diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ParamConverterTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ParamConverterTest.java
index db1c263..fbce049 100644
--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ParamConverterTest.java
+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ParamConverterTest.java
@@ -48,0 +49 @@
+import javax.ws.rs.DefaultValue;
@@ -157,0 +159,41 @@
+    @Test
+    public void testMyBeanFormParamDefault() {
+        Form form = new Form();
+        Response response = target().path("resource/myBeanFormDefault")
+                .request().post(Entity.entity(form, MediaType.APPLICATION_FORM_URLENCODED_TYPE));
+        String str = response.readEntity(String.class);
+        assertEquals("*form-default*", str);
+    }
+
+    @Test
+    public void testMyBeanQueryParamDefault() {
+        final Response response = target().path("resource/myBeanQueryDefault")
+                .request().get();
+        final String str = response.readEntity(String.class);
+        assertEquals("*query-default*", str);
+    }
+
+    @Test
+    public void testMyBeanMatrixParamDefault() {
+        final Response response = target().path("resource/myBeanMatrixDefault")
+                .request().get();
+        final String str = response.readEntity(String.class);
+        assertEquals("*matrix-default*", str);
+    }
+
+    @Test
+    public void testMyBeanCookieParamDefault() {
+        final Response response = target().path("resource/myBeanCookieDefault")
+                .request().get();
+        final String str = response.readEntity(String.class);
+        assertEquals("*cookie-default*", str);
+    }
+
+    @Test
+    public void testMyBeanHeaderParamDefault() {
+        final Response response = target().path("resource/myBeanHeaderDefault")
+                .request().get();
+        final String str = response.readEntity(String.class);
+        assertEquals("*header-default*", str);
+    }
+
@@ -202,0 +245,30 @@
+        @Path("myBeanFormDefault")
+        public String postMyBeanFormDefault(@DefaultValue("form-default") @FormParam("form") MyBean pathParam) {
+            return pathParam.getValue();
+        }
+
+        @GET
+        @Path("myBeanQueryDefault")
+        public String getMyBeanQueryDefault(@DefaultValue("query-default") @QueryParam("q") MyBean queryParam) {
+            return queryParam.getValue();
+        }
+
+        @GET
+        @Path("myBeanMatrixDefault")
+        public String getMyBeanMatrixDefault(@DefaultValue("matrix-default") @MatrixParam("m") MyBean matrixParam) {
+            return matrixParam.getValue();
+        }
+
+        @GET
+        @Path("myBeanCookieDefault")
+        public String getMyBeanCookieDefault(@DefaultValue("cookie-default") @CookieParam("c") MyBean cookieParam) {
+            return cookieParam.getValue();
+        }
+
+        @GET
+        @Path("myBeanHeaderDefault")
+        public String getMyBeanHeaderDefault(@DefaultValue("header-default") @HeaderParam("h") MyBean headerParam) {
+            return headerParam.getValue();
+        }
+
+        @POST

