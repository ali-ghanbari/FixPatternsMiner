diff --git a/core-server/src/main/java/org/glassfish/jersey/server/ContainerRequest.java b/core-server/src/main/java/org/glassfish/jersey/server/ContainerRequest.java
index c6807a6..fb78e31 100644
--- a/core-server/src/main/java/org/glassfish/jersey/server/ContainerRequest.java
+++ b/core-server/src/main/java/org/glassfish/jersey/server/ContainerRequest.java
@@ -309,0 +310,2 @@
+        this.encodedRelativePath = null;
+        this.decodedRelativePath = null;
diff --git a/core-server/src/test/java/org/glassfish/jersey/server/filter/FilterSetMethodTest.java b/core-server/src/test/java/org/glassfish/jersey/server/filter/FilterSetMethodTest.java
index aa1691b..9e064ba 100644
--- a/core-server/src/test/java/org/glassfish/jersey/server/filter/FilterSetMethodTest.java
+++ b/core-server/src/test/java/org/glassfish/jersey/server/filter/FilterSetMethodTest.java
@@ -43,0 +44,2 @@
+import java.net.URI;
+import java.net.URISyntaxException;
@@ -110,0 +113,42 @@
+    @Test
+    public void testResourceUri() throws ExecutionException, InterruptedException {
+        ApplicationHandler handler = new ApplicationHandler(new ResourceConfig(ResourceChangeUri.class,
+                PreMatchChangingUriFilter.class));
+        ContainerResponse res = handler.apply(RequestContextBuilder.from("", "/resourceChangeUri/first",
+                "GET").build()).get();
+        Assert.assertEquals(200, res.getStatus());
+        Assert.assertEquals("ok", res.getEntity());
+    }
+
+    @Path("resourceChangeUri")
+    public static class ResourceChangeUri {
+
+        @Path("first")
+        @GET
+        public String first() {
+            Assert.fail("should not be called.");
+            return "fail";
+        }
+
+        @Path("first/a")
+        @GET
+        public String a() {
+            return "ok";
+        }
+    }
+
+    @Provider
+    @BindingPriority(500)
+    @PreMatching
+    public static class PreMatchChangingUriFilter implements ContainerRequestFilter {
+        @Override
+        public void filter(ContainerRequestContext requestContext) throws IOException {
+            try {
+                final URI requestUri = new URI(requestContext.getUriInfo().getPath() + "/a");
+                requestContext.setRequestUri(requestUri);
+            } catch (URISyntaxException e) {
+                throw new RuntimeException(e);
+            }
+        }
+    }
+

